{"version":3,"file":"SRPanel.js","sources":["../../../../src/core/Errors/SRPanel.tsx"],"sourcesContent":["import { h } from 'preact';\nimport './SRPanel.scss';\nimport { AriaAttributes, SRPanelProps } from './types';\nimport BaseElement from '../../components/internal/BaseElement/BaseElement';\nimport { SRMessages, SRMessagesRef } from './SRMessages';\nimport type { ICore } from '../types';\n\n/**\n * A panel meant to hold messages that will be read out by ScreenReaders on an aria-live=\"polite\" basis\n * Expects a string or string array of message to add to the panel to be read out\n * For testing purposes can be made visible\n */\nexport class SRPanel extends BaseElement<SRPanelProps> {\n    public static type = 'srPanel';\n\n    public static defaultProps: Partial<SRPanelProps> = {\n        enabled: true,\n        node: 'body',\n        showPanel: false,\n        id: 'ariaLiveSRPanel',\n        ariaAttributes: {\n            'aria-relevant': 'all',\n            'aria-live': 'polite',\n            'aria-atomic': 'true'\n        }\n    };\n\n    private readonly srPanelContainer = null;\n\n    private readonly id;\n    private readonly showPanel;\n    private readonly _enabled: boolean;\n    private readonly _moveFocus: boolean;\n\n    private componentRef: SRMessagesRef;\n\n    constructor(checkout: ICore, props?: SRPanelProps) {\n        super(checkout, props);\n\n        this.id = this.props.id;\n        this.showPanel = process.env.NODE_ENV !== 'production' ? this.props.showPanel : false;\n        this._enabled = false;\n        this._moveFocus = this.props.moveFocus ?? true;\n\n        if (this.props.enabled) {\n            this._enabled = true;\n\n            const panelParent = document.querySelector(this.props.node);\n\n            if (panelParent) {\n                const preExistingSRPanel = document.getElementById(this.id);\n                if (preExistingSRPanel) {\n                    panelParent.removeChild(preExistingSRPanel);\n                }\n\n                this.srPanelContainer = document.createElement('div');\n                this.srPanelContainer.className = 'sr-panel-holder';\n                this.srPanelContainer.id = this.id;\n\n                panelParent.appendChild(this.srPanelContainer);\n\n                this.mount(this.srPanelContainer);\n            } else {\n                throw new Error('Component could not mount. Root node was not found.');\n            }\n        }\n    }\n\n    public setComponentRef = ref => {\n        this.componentRef = ref;\n    };\n\n    public get enabled() {\n        return this._enabled;\n    }\n\n    public get moveFocus() {\n        return this._moveFocus;\n    }\n\n    public setAriaProps(ariaAttributes: AriaAttributes): void {\n        const firstPanel = document.querySelector('[class^=\"adyen-checkout-sr-panel\"]');\n        for (const [key, value] of Object.entries(ariaAttributes)) {\n            firstPanel.setAttribute(key, value);\n        }\n        this.props = { ...this.props, ariaAttributes: { ...this.props.ariaAttributes, ...ariaAttributes } };\n    }\n\n    // A method we can expose to allow comps to set messages in this panel\n    public setMessages = (messages: string[] | string): void => {\n        if (!this.props.enabled) return;\n\n        let panelMessages = null;\n        if (messages) {\n            // Ensure panelMessages is an array\n            panelMessages = Array.isArray(messages) ? messages : [messages];\n        }\n\n        this.componentRef.setMessages(panelMessages);\n    };\n\n    render() {\n        if (!this.props.enabled) return null;\n        return (\n            <div\n                className={this.showPanel ? 'adyen-checkout-sr-panel' : 'adyen-checkout-sr-panel--sr-only'}\n                role={'log'}\n                {...this.props.ariaAttributes}\n                {...(process.env.NODE_ENV !== 'production' && { 'data-testid': this.id })}\n            >\n                <SRMessages setComponentRef={this.setComponentRef} />\n            </div>\n        );\n    }\n}\n"],"names":["SRPanel","BaseElement","enabled","this","_enabled","moveFocus","_moveFocus","setAriaProps","ariaAttributes","firstPanel","document","querySelector","key","value","Object","entries","setAttribute","props","render","h","div","className","showPanel","role","SRMessages","setComponentRef","constructor","checkout","super","_define_property","srPanelContainer","id","componentRef","ref","setMessages","messages","panelMessages","Array","isArray","panelParent","node","Error","preExistingSRPanel","getElementById","removeChild","createElement","appendChild","mount","type","defaultProps"],"mappings":"8SAYO,MAAMA,UAAgBC,EA4DzB,WAAWC,GACP,OAAOC,KAAKC,QAChB,CAEA,aAAWC,GACP,OAAOF,KAAKG,UAChB,CAEOC,YAAAA,CAAaC,GAChB,MAAMC,EAAaC,SAASC,cAAc,sCAC1C,IAAK,MAAOC,EAAKC,KAAUC,OAAOC,QAAQP,GACtCC,EAAWO,aAAaJ,EAAKC,GAEjCV,KAAKc,MAAQ,IAAKd,KAAKc,MAAOT,eAAgB,IAAKL,KAAKc,MAAMT,kBAAmBA,GACrF,CAeAU,MAAAA,GACI,OAAKf,KAAKc,MAAMf,QAEZiB,EAACC,MAAAA,CACGC,UAAWlB,KAAKmB,UAAY,0BAA4B,mCACxDC,KAAM,SACFpB,KAAKc,MAAMT,gBAGfW,EAACK,EAAAA,CAAWC,gBAAiBtB,KAAKsB,mBARV,IAWpC,CA7EAC,WAAAA,CAAYC,EAAiBV,GAQzB,GAPAW,MAAMD,EAAUV,GAVpBY,EAAA1B,KAAiB2B,mBAAmB,MAEpCD,EAAiBE,KAAAA,UAAjB,GACAF,EAAiBP,KAAAA,iBAAjB,GACAO,EAAiBzB,KAAAA,gBAAjB,GACAyB,EAAiBvB,KAAAA,kBAAjB,GAEAuB,EAAQG,KAAAA,oBAAR,GAkCAH,EAAOJ,KAAAA,mBAAkBQ,IACrB9B,KAAK6B,aAAeC,CAAAA,IAoBxBJ,EAAA1B,KAAO+B,eAAeC,IAClB,IAAKhC,KAAKc,MAAMf,QAAS,OAEzB,IAAIkC,EAAgB,KAChBD,IAEAC,EAAgBC,MAAMC,QAAQH,GAAYA,EAAW,CAACA,IAG1DhC,KAAK6B,aAAaE,YAAYE,EAAAA,IA3D9BjC,KAAK4B,GAAK5B,KAAKc,MAAMc,GACrB5B,KAAKmB,WAA2E,EAChFnB,KAAKC,UAAW,EAChBD,KAAKG,WAAaH,KAAKc,MAAMZ,YAAa,EAEtCF,KAAKc,MAAMf,QAAS,CACpBC,KAAKC,UAAW,EAEhB,MAAMmC,EAAc7B,SAASC,cAAcR,KAAKc,MAAMuB,MAEtD,IAAID,EAcA,MAAM,IAAIE,MAAM,uDAdH,CACb,MAAMC,EAAqBhC,SAASiC,eAAexC,KAAK4B,IACpDW,GACAH,EAAYK,YAAYF,GAG5BvC,KAAK2B,iBAAmBpB,SAASmC,cAAc,OAC/C1C,KAAK2B,iBAAiBT,UAAY,kBAClClB,KAAK2B,iBAAiBC,GAAK5B,KAAK4B,GAEhCQ,EAAYO,YAAY3C,KAAK2B,kBAE7B3B,KAAK4C,MAAM5C,KAAK2B,kBAIxB,CACJ,EArDAD,EADS7B,EACKgD,OAAO,WAErBnB,EAHS7B,EAGKiD,eAAsC,CAChD/C,SAAS,EACTsC,KAAM,OACNlB,WAAW,EACXS,GAAI,kBACJvB,eAAgB,CACZ,gBAAiB,MACjB,YAAa,SACb,cAAe"}