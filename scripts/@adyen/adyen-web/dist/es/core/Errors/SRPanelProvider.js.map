{"version":3,"file":"SRPanelProvider.js","sources":["../../../../src/core/Errors/SRPanelProvider.tsx"],"sourcesContent":["import { h, ComponentChildren } from 'preact';\nimport { SRPanelContext } from './SRPanelContext';\nimport { useCoreContext } from '../Context/CoreProvider';\nimport { partial } from '../../components/internal/SecuredFields/lib/utilities/commonUtils';\nimport { setSRMessagesFromErrors } from './utils';\nimport { SRPanel } from './SRPanel';\nimport { SetSRMessagesReturnObject } from './types';\nimport { StringObject } from '../../components/internal/Address/types';\n\ntype SRPanelProviderProps = {\n    srPanel: SRPanel;\n    children: ComponentChildren;\n};\n\ninterface SetSRMessagesReturnFnProps {\n    errors: {\n        [key: string]: any;\n    };\n    isValidating: boolean;\n    layout?: string[];\n    countrySpecificLabels?: StringObject;\n}\n\nexport type SetSRMessagesReturnFn = (props: SetSRMessagesReturnFnProps) => SetSRMessagesReturnObject;\n\nconst SRPanelProvider = ({ srPanel, children }: SRPanelProviderProps) => {\n    const { i18n } = useCoreContext();\n\n    // Helper fns\n    const setSRMessagesFromObjects = ({ fieldTypeMappingFn }): SetSRMessagesReturnFn => {\n        return partial(setSRMessagesFromErrors, {\n            SRPanelRef: srPanel,\n            i18n,\n            fieldTypeMappingFn\n        });\n    };\n\n    const setSRMessagesFromStrings = strs => {\n        srPanel.setMessages(strs);\n    };\n\n    const clearSRPanel = () => {\n        srPanel.setMessages(null);\n    };\n\n    const shouldMoveFocusSR = srPanel.moveFocus;\n\n    return (\n        <SRPanelContext.Provider value={{ srPanel, setSRMessagesFromObjects, setSRMessagesFromStrings, clearSRPanel, shouldMoveFocusSR }}>\n            {children}\n        </SRPanelContext.Provider>\n    );\n};\n\nexport default SRPanelProvider;\n"],"names":["SRPanelProvider","srPanel","children","i18n","useCoreContext","shouldMoveFocusSR","moveFocus","h","SRPanelContext","Provider","value","setSRMessagesFromObjects","fieldTypeMappingFn","partial","setSRMessagesFromErrors","SRPanelRef","setSRMessagesFromStrings","strs","setMessages","clearSRPanel"],"mappings":"0UAyBA,MAAMA,EAAkB,EAAGC,UAASC,eAChC,MAAMC,KAAEA,GAASC,IAmBXC,EAAoBJ,EAAQK,UAElC,OACIC,EAACC,EAAeC,SAAQ,CAACC,MAAO,CAAET,UAASU,yBAnBd,EAAGC,wBACzBC,EAAQC,EAAyB,CACpCC,WAAYd,EACZE,OACAS,uBAeiEI,yBAXxCC,IAC7BhB,EAAQiB,YAAYD,EAAAA,EAU2EE,aAP9E,KACjBlB,EAAQiB,YAAY,KAAA,EAMyFb,sBACxGH,EAAAA"}