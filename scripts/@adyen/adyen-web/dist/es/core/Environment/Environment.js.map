{"version":3,"file":"Environment.js","sources":["../../../../src/core/Environment/Environment.ts"],"sourcesContent":["import { ANALYTICS_ENVIRONMENTS, API_ENVIRONMENTS, CDN_ENVIRONMENTS } from './constants';\nimport type { CoreConfiguration } from '../types';\n\nexport const getUrlFromMap = (env: CoreConfiguration['environment'], environmentMap: Record<string, string>, environmentUrl?: string): string => {\n    if (environmentUrl) {\n        return environmentUrl;\n    }\n    return environmentMap[env?.toLowerCase()] || environmentMap.fallback;\n};\n\nexport const resolveEnvironments = (environment: CoreConfiguration['environment'], environmentsUrls?: CoreConfiguration['_environmentUrls']) => {\n    const apiUrl = getUrlFromMap(environment, API_ENVIRONMENTS, environmentsUrls?.api);\n    const analyticsUrl = getUrlFromMap(environment, ANALYTICS_ENVIRONMENTS, environmentsUrls?.analytics);\n    const cdnImagesUrl = getUrlFromMap(environment, CDN_ENVIRONMENTS, environmentsUrls?.cdn?.images);\n    const cdnTranslationsUrl =\n        process.env.NODE_ENV === 'development' ? '/' : getUrlFromMap(environment, CDN_ENVIRONMENTS, environmentsUrls?.cdn?.translations);\n\n    return {\n        apiUrl,\n        analyticsUrl,\n        cdnImagesUrl,\n        cdnTranslationsUrl\n    };\n};\n"],"names":["getUrlFromMap","env","environmentMap","environmentUrl","toLowerCase","fallback","resolveEnvironments","environment","environmentsUrls","apiUrl","API_ENVIRONMENTS","api","analyticsUrl","ANALYTICS_ENVIRONMENTS","analytics","cdnImagesUrl","CDN_ENVIRONMENTS","cdn","images","cdnTranslationsUrl","translations"],"mappings":"oGAGaA,MAAAA,EAAgB,CAACC,EAAuCC,EAAwCC,IACrGA,IAGGD,EAAeD,GAAKG,gBAAkBF,EAAeG,UAGnDC,EAAsB,CAACC,EAA+CC,KAOxE,CACHC,OAPWT,EAAcO,EAAaG,EAAkBF,GAAkBG,KAQ1EC,aAPiBZ,EAAcO,EAAaM,EAAwBL,GAAkBM,WAQtFC,aAPiBf,EAAcO,EAAaS,EAAkBR,GAAkBS,KAAKC,QAQrFC,mBAN+CnB,EAAcO,EAAaS,EAAkBR,GAAkBS,KAAKG"}