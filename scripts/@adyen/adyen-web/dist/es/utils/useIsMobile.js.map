{"version":3,"file":"useIsMobile.js","sources":["../../../src/utils/useIsMobile.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'preact/hooks';\n\nfunction isTabletWidthOrSmaller() {\n    return window.matchMedia('(max-width: 1024px)').matches;\n}\n\nconst useIsMobile = () => {\n    const [isMobileScreenSize, setIsMobileScreenSize] = useState(isTabletWidthOrSmaller());\n\n    const handleWindowResize = useCallback(() => {\n        const isMobileScreenSize = isTabletWidthOrSmaller();\n        setIsMobileScreenSize(isMobileScreenSize);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowResize);\n        return () => {\n            window.removeEventListener('resize', handleWindowResize);\n        };\n    }, [handleWindowResize]);\n\n    return { isMobileScreenSize };\n};\n\nexport { useIsMobile };\n"],"names":["isTabletWidthOrSmaller","window","matchMedia","matches","useIsMobile","isMobileScreenSize","setIsMobileScreenSize","useState","handleWindowResize","useCallback","useEffect","addEventListener","removeEventListener"],"mappings":"kGAEA,SAASA,IACL,OAAOC,OAAOC,WAAW,uBAAuBC,OACpD,CAEA,MAAMC,EAAc,KAChB,MAAOC,EAAoBC,GAAyBC,EAASP,KAEvDQ,EAAqBC,GAAY,KACnC,MAAMJ,EAAqBL,IAC3BM,EAAsBD,EAAAA,GACvB,IASH,OAPAK,GAAU,KACNT,OAAOU,iBAAiB,SAAUH,GAC3B,KACHP,OAAOW,oBAAoB,SAAUJ,EAAAA,IAE1C,CAACA,IAEG,CAAEH,qBAAmB"}