{"version":3,"file":"Paypal.js","sources":["../../../../src/components/PayPal/Paypal.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport PaypalComponent from './components/PaypalComponent';\nimport defaultProps from './defaultProps';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport { ERRORS } from './constants';\nimport { TxVariants } from '../tx-variants';\nimport { formatPaypalOrderContactToAdyenFormat } from './utils/format-paypal-order-contact-to-adyen-format';\n\nimport type { ICore } from '../../core/types';\nimport type { PaymentAction } from '../../types/global-types';\nimport type { Intent, PayPalConfiguration } from './types';\n\nimport './Paypal.scss';\nimport { ANALYTICS_EXPRESS_PAGES_ARRAY, ANALYTICS_RENDERED_STR } from '../../core/Analytics/constants';\nimport { AnalyticsInfoEvent } from '../../core/Analytics/AnalyticsInfoEvent';\nimport { AnalyticsEvent } from '../../core/Analytics/AnalyticsEvent';\n\nclass PaypalElement extends UIElement<PayPalConfiguration> {\n    public static type = TxVariants.paypal;\n    public static subtype = 'sdk';\n\n    public paymentData: string = null;\n\n    private resolve = null;\n    private reject = null;\n\n    protected static defaultProps = defaultProps;\n\n    constructor(checkout: ICore, props?: PayPalConfiguration) {\n        super(checkout, props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleOnShippingAddressChange = this.handleOnShippingAddressChange.bind(this);\n        this.handleOnShippingOptionsChange = this.handleOnShippingOptionsChange.bind(this);\n    }\n\n    formatProps(props: PayPalConfiguration): PayPalConfiguration {\n        const merchantId = props.configuration?.merchantId;\n        const intentFromConfig = props.configuration?.intent;\n        const isZeroAuth = props.amount?.value === 0;\n        const intent: Intent = isZeroAuth ? 'tokenize' : props.intent || intentFromConfig;\n        const vault = intent === 'tokenize' || props.vault;\n\n        const displayContinueToReviewPageButton = props.userAction === 'continue';\n\n        return {\n            ...props,\n            commit: displayContinueToReviewPageButton ? false : props.commit,\n            vault,\n            configuration: {\n                intent,\n                merchantId\n            }\n        };\n    }\n\n    protected submitAnalytics(analyticsObj: AnalyticsEvent) {\n        // Analytics will need to know about this.props.isExpress & this.props.expressPage\n        if (analyticsObj instanceof AnalyticsInfoEvent && analyticsObj.type === ANALYTICS_RENDERED_STR) {\n            const { isExpress, expressPage } = this.props;\n            const hasExpressPage = expressPage && ANALYTICS_EXPRESS_PAGES_ARRAY.includes(expressPage);\n\n            if (typeof isExpress === 'boolean') {\n                analyticsObj.isExpress = isExpress;\n            }\n\n            if (isExpress === true && hasExpressPage) {\n                analyticsObj.expressPage = expressPage; // We only care about the expressPage value if isExpress is true\n            }\n        }\n\n        super.submitAnalytics(analyticsObj);\n    }\n\n    public submit = () => {\n        this.handleError(new AdyenCheckoutError('IMPLEMENTATION_ERROR', ERRORS.SUBMIT_NOT_SUPPORTED));\n    };\n\n    /**\n     * Updates the paymentData value. It must be used in the PayPal Express flow, when patching the amount\n     * @param paymentData - Payment data value\n     */\n    public updatePaymentData(paymentData: string): void {\n        if (!paymentData) console.warn('PayPal - Updating payment data with an invalid value');\n        this.paymentData = paymentData;\n    }\n\n    /**\n     * Formats the component data output\n     */\n    protected formatData() {\n        const { isExpress, userAction } = this.props;\n\n        return {\n            paymentMethod: {\n                type: PaypalElement.type,\n                userAction,\n                subtype: isExpress ? 'express' : PaypalElement.subtype\n            }\n        };\n    }\n\n    public handleAction = (action: PaymentAction) => {\n        return this.updateWithAction(action);\n    };\n\n    public updateWithAction = (action: PaymentAction) => {\n        if (action.paymentMethodType !== this.type) throw new Error('Invalid Action');\n\n        if (action.paymentData) {\n            this.paymentData = action.paymentData;\n        }\n\n        if (action.sdkData && action.sdkData.token) {\n            this.onActionHandled({ componentType: this.type, actionDescription: 'sdk-loaded', originalAction: action });\n            this.handleResolve(action.sdkData.token);\n        } else {\n            this.handleReject(ERRORS.NO_TOKEN_PROVIDED);\n        }\n\n        return null;\n    };\n\n    /**\n     * Dropin Validation\n     *\n     * @remarks\n     * Paypal does not require any specific Dropin validation\n     */\n    get isValid() {\n        return true;\n    }\n\n    private handleOnApprove = (data: any, actions: any): Promise<void> | void => {\n        const { onAuthorized } = this.props;\n        const state = { data: { details: data, paymentData: this.paymentData } };\n\n        if (!onAuthorized) {\n            this.handleAdditionalDetails(state);\n            return;\n        }\n\n        return actions.order\n            .get()\n            .then((paypalOrder: any) => {\n                const billingAddress = formatPaypalOrderContactToAdyenFormat(paypalOrder?.payer);\n                const deliveryAddress = formatPaypalOrderContactToAdyenFormat(paypalOrder?.purchase_units?.[0].shipping, true);\n\n                this.setState({\n                    authorizedEvent: paypalOrder,\n                    ...(billingAddress && { billingAddress }),\n                    ...(deliveryAddress && { deliveryAddress })\n                });\n\n                return new Promise<void>((resolve, reject) =>\n                    onAuthorized(\n                        {\n                            authorizedEvent: paypalOrder,\n                            ...(billingAddress && { billingAddress }),\n                            ...(deliveryAddress && { deliveryAddress })\n                        },\n                        { resolve, reject }\n                    )\n                );\n            })\n            .then(() => this.handleAdditionalDetails(state))\n            .catch(error => this.handleError(new AdyenCheckoutError('ERROR', 'Something went wrong while parsing PayPal Order', { cause: error })));\n    };\n\n    handleResolve(token: string) {\n        if (!this.resolve) return this.handleError(new AdyenCheckoutError('ERROR', ERRORS.WRONG_INSTANCE));\n        this.resolve(token);\n    }\n\n    handleReject(errorMessage: string) {\n        if (!this.reject) return this.handleError(new AdyenCheckoutError('ERROR', ERRORS.WRONG_INSTANCE));\n        this.reject(new Error(errorMessage));\n    }\n\n    private handleSubmit(): Promise<void> {\n        super.submit();\n\n        return new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n\n    /**\n     * If the merchant provides the 'onShippingAddressChange' callback, then this method is used as a wrapper to it, in order\n     * to expose to the merchant the 'component' instance. The merchant needs the 'component' in order to manipulate the\n     * paymentData\n     *\n     * @param data - PayPal data\n     * @param actions - PayPal actions.\n     */\n    private handleOnShippingAddressChange(data: any, actions: any): Promise<void> {\n        return this.props.onShippingAddressChange(data, actions, this);\n    }\n\n    /**\n     * If the merchant provides the 'onShippingOptionsChange' callback, then this method is used as a wrapper to it, in order\n     * to expose to the merchant the 'component' instance. The merchant needs the 'component' in order to manipulate the\n     * paymentData\n     *\n     * @param data - PayPal data\n     * @param actions - PayPal actions.\n     */\n    private handleOnShippingOptionsChange(data: any, actions: any): Promise<void> {\n        return this.props.onShippingOptionsChange(data, actions, this);\n    }\n\n    render() {\n        if (!this.props.showPayButton) return null;\n\n        const { onShippingAddressChange, onShippingOptionsChange, ...rest } = this.props;\n\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <PaypalComponent\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    {...rest}\n                    {...(onShippingAddressChange && { onShippingAddressChange: this.handleOnShippingAddressChange })}\n                    {...(onShippingOptionsChange && { onShippingOptionsChange: this.handleOnShippingOptionsChange })}\n                    onCancel={() => this.handleError(new AdyenCheckoutError('CANCEL'))}\n                    onChange={this.setState}\n                    onApprove={this.handleOnApprove}\n                    onError={error => {\n                        this.handleError(new AdyenCheckoutError('ERROR', error.toString(), { cause: error }));\n                    }}\n                    onScriptLoadFailure={error => this.handleError(error)}\n                    onSubmit={this.handleSubmit}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default PaypalElement;\n"],"names":["PaypalElement","UIElement","formatProps","props","merchantId","configuration","intentFromConfig","intent","amount","value","vault","displayContinueToReviewPageButton","userAction","commit","submitAnalytics","analyticsObj","AnalyticsInfoEvent","type","ANALYTICS_RENDERED_STR","isExpress","expressPage","this","hasExpressPage","ANALYTICS_EXPRESS_PAGES_ARRAY","includes","super","updatePaymentData","paymentData","console","warn","formatData","paymentMethod","subtype","isValid","handleResolve","token","resolve","handleError","AdyenCheckoutError","ERRORS","WRONG_INSTANCE","handleReject","errorMessage","reject","Error","handleSubmit","submit","Promise","handleOnShippingAddressChange","data","actions","onShippingAddressChange","handleOnShippingOptionsChange","onShippingOptionsChange","render","showPayButton","rest","h","CoreProvider","i18n","loadingContext","resources","PaypalComponent","ref","componentRef","onCancel","onChange","setState","onApprove","handleOnApprove","onError","error","toString","cause","onScriptLoadFailure","onSubmit","constructor","checkout","_define_property","SUBMIT_NOT_SUPPORTED","handleAction","action","updateWithAction","paymentMethodType","sdkData","onActionHandled","componentType","actionDescription","originalAction","NO_TOKEN_PROVIDED","onAuthorized","state","details","order","get","then","paypalOrder","billingAddress","formatPaypalOrderContactToAdyenFormat","payer","deliveryAddress","purchase_units","shipping","authorizedEvent","handleAdditionalDetails","catch","bind","TxVariants","paypal","defaultProps"],"mappings":"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"}