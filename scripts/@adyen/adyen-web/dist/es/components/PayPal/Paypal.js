import{createElement as t}from"../../external/preact/dist/preact.js";import{UIElement as e}from"../internal/UIElement/UIElement.js";import n from"./components/PaypalComponent.js";import i from"./defaultProps.js";import{CoreProvider as s}from"../../core/Context/CoreProvider.js";import r from"../../core/Errors/AdyenCheckoutError.js";import{ERRORS as o}from"./constants.js";import{TxVariants as a}from"../tx-variants.js";import{formatPaypalOrderContactToAdyenFormat as h}from"./utils/format-paypal-order-contact-to-adyen-format.js";import{ANALYTICS_RENDERED_STR as p,ANALYTICS_EXPRESS_PAGES_ARRAY as d}from"../../core/Analytics/constants.js";import{AnalyticsInfoEvent as l}from"../../core/Analytics/AnalyticsInfoEvent.js";function u(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}class c extends e{formatProps(t){const e=t.configuration?.merchantId,n=t.configuration?.intent,i=0===t.amount?.value?"tokenize":t.intent||n,s="tokenize"===i||t.vault,r="continue"===t.userAction;return{...t,commit:!r&&t.commit,vault:s,configuration:{intent:i,merchantId:e}}}submitAnalytics(t){if(t instanceof l&&t.type===p){const{isExpress:e,expressPage:n}=this.props,i=n&&d.includes(n);"boolean"==typeof e&&(t.isExpress=e),!0===e&&i&&(t.expressPage=n)}super.submitAnalytics(t)}updatePaymentData(t){t||console.warn("PayPal - Updating payment data with an invalid value"),this.paymentData=t}formatData(){const{isExpress:t,userAction:e}=this.props;return{paymentMethod:{type:c.type,userAction:e,subtype:t?"express":c.subtype}}}get isValid(){return!0}handleResolve(t){if(!this.resolve)return this.handleError(new r("ERROR",o.WRONG_INSTANCE));this.resolve(t)}handleReject(t){if(!this.reject)return this.handleError(new r("ERROR",o.WRONG_INSTANCE));this.reject(new Error(t))}handleSubmit(){return super.submit(),new Promise(((t,e)=>{this.resolve=t,this.reject=e}))}handleOnShippingAddressChange(t,e){return this.props.onShippingAddressChange(t,e,this)}handleOnShippingOptionsChange(t,e){return this.props.onShippingOptionsChange(t,e,this)}render(){if(!this.props.showPayButton)return null;const{onShippingAddressChange:e,onShippingOptionsChange:i,...o}=this.props;return t(s,{i18n:this.props.i18n,loadingContext:this.props.loadingContext,resources:this.resources},t(n,{ref:t=>{this.componentRef=t},...o,...e&&{onShippingAddressChange:this.handleOnShippingAddressChange},...i&&{onShippingOptionsChange:this.handleOnShippingOptionsChange},onCancel:()=>this.handleError(new r("CANCEL")),onChange:this.setState,onApprove:this.handleOnApprove,onError:t=>{this.handleError(new r("ERROR",t.toString(),{cause:t}))},onScriptLoadFailure:t=>this.handleError(t),onSubmit:this.handleSubmit}))}constructor(t,e){super(t,e),u(this,"paymentData",null),u(this,"resolve",null),u(this,"reject",null),u(this,"submit",(()=>{this.handleError(new r("IMPLEMENTATION_ERROR",o.SUBMIT_NOT_SUPPORTED))})),u(this,"handleAction",(t=>this.updateWithAction(t))),u(this,"updateWithAction",(t=>{if(t.paymentMethodType!==this.type)throw new Error("Invalid Action");return t.paymentData&&(this.paymentData=t.paymentData),t.sdkData&&t.sdkData.token?(this.onActionHandled({componentType:this.type,actionDescription:"sdk-loaded",originalAction:t}),this.handleResolve(t.sdkData.token)):this.handleReject(o.NO_TOKEN_PROVIDED),null})),u(this,"handleOnApprove",((t,e)=>{const{onAuthorized:n}=this.props,i={data:{details:t,paymentData:this.paymentData}};if(n)return e.order.get().then((t=>{const e=h(t?.payer),i=h(t?.purchase_units?.[0].shipping,!0);return this.setState({authorizedEvent:t,...e&&{billingAddress:e},...i&&{deliveryAddress:i}}),new Promise(((s,r)=>n({authorizedEvent:t,...e&&{billingAddress:e},...i&&{deliveryAddress:i}},{resolve:s,reject:r})))})).then((()=>this.handleAdditionalDetails(i))).catch((t=>this.handleError(new r("ERROR","Something went wrong while parsing PayPal Order",{cause:t}))));this.handleAdditionalDetails(i)})),this.handleSubmit=this.handleSubmit.bind(this),this.handleOnShippingAddressChange=this.handleOnShippingAddressChange.bind(this),this.handleOnShippingOptionsChange=this.handleOnShippingOptionsChange.bind(this)}}u(c,"type",a.paypal),u(c,"subtype","sdk"),u(c,"defaultProps",i);export{c as default};
//# sourceMappingURL=Paypal.js.map
