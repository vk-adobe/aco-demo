{"version":3,"file":"Sepa.js","sources":["../../../../src/components/Sepa/Sepa.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport IbanInput from '../internal/IbanInput';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { SepaElementData, SepaConfiguration } from './types';\nimport { TxVariants } from '../tx-variants';\nimport FormInstruction from '../internal/FormInstruction';\nimport type { ICore } from '../../core/types';\n\nclass SepaElement extends UIElement<SepaConfiguration> {\n    public static type = TxVariants.sepadirectdebit;\n\n    constructor(checkout: ICore, props?: SepaConfiguration) {\n        super(checkout, props);\n        this.state = { ...this.state, ...{ data: { ibanNumber: '', ownerName: '' } } };\n    }\n\n    /**\n     * Formats props on construction time\n     */\n    formatProps(props) {\n        return {\n            holderName: true,\n            ...props\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData(): SepaElementData {\n        return {\n            paymentMethod: {\n                type: SepaElement.type,\n                iban: this.state.data['ibanNumber'],\n                ownerName: this.state.data['ownerName']\n            }\n        };\n    }\n\n    /**\n     * Returns whether the component state is valid or not\n     */\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <FormInstruction />\n\n                {/* @ts-ignore TODO: add props */}\n                <IbanInput\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    {...this.props}\n                    onChange={this.setState}\n                    // onSubmit={this.submit}\n                    payButton={this.payButton}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default SepaElement;\n"],"names":["SepaElement","UIElement","formatProps","props","holderName","formatData","paymentMethod","type","iban","this","state","data","ownerName","isValid","render","h","CoreProvider","i18n","loadingContext","resources","FormInstruction","IbanInput","ref","componentRef","onChange","setState","payButton","constructor","checkout","super","ibanNumber","TxVariants","sepadirectdebit"],"mappings":"qWASA,MAAMA,UAAoBC,EAWtBC,WAAAA,CAAYC,GACR,MAAO,CACHC,YAAY,KACTD,EAEX,CAKAE,UAAAA,GACI,MAAO,CACHC,cAAe,CACXC,KAAMP,EAAYO,KAClBC,KAAMC,KAAKC,MAAMC,KAAkB,WACnCC,UAAWH,KAAKC,MAAMC,KAAiB,WAGnD,CAKA,WAAIE,GACA,QAASJ,KAAKC,MAAMG,OACxB,CAEAC,MAAAA,GACI,OACIC,EAACC,EAAAA,CAAaC,KAAMR,KAAKN,MAAMc,KAAMC,eAAgBT,KAAKN,MAAMe,eAAgBC,UAAWV,KAAKU,WAC5FJ,EAACK,QAGDL,EAACM,EAAAA,CACGC,IAAKA,IACDb,KAAKc,aAAeD,CAAAA,KAEpBb,KAAKN,MACTqB,SAAUf,KAAKgB,SAEfC,UAAWjB,KAAKiB,YAIhC,CApDAC,WAAAA,CAAYC,EAAiBzB,GACzB0B,MAAMD,EAAUzB,GAChBM,KAAKC,MAAQ,IAAKD,KAAKC,MAAYC,KAAM,CAAEmB,WAAY,GAAIlB,UAAW,IAC1E,cANEZ,IACYO,SAAOwB,EAAWC"}