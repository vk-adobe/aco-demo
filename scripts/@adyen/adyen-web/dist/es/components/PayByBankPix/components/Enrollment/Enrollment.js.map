{"version":3,"file":"Enrollment.js","sources":["../../../../../../src/components/PayByBankPix/components/Enrollment/Enrollment.tsx"],"sourcesContent":["import { h } from 'preact';\nimport { useRef, useState, useEffect } from 'preact/hooks';\nimport { AwaitProps, EnrollmentProps } from './types';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport IssuerList from '../../../internal/IssuerList';\nimport { useIssuerWithLogo } from './useIssuerWithLogo';\nimport getEnrollmentStatus from './getEnrollmentStatus';\nimport IssuerListIntroduction from './components/IssuerListIntroduction';\nimport PayByBankPixAwait from './components/PayByBankPixAwait';\nimport useImage from '../../../../core/Context/useImage';\nimport './Enrollment.scss';\nimport { LabelOnlyDisclaimerMessage } from '../../../internal/DisclaimerMessage/DisclaimerMessage';\nimport { ComponentMethodsRef, UIElementStatus } from '../../../internal/UIElement/types';\n\n//todo: add\nconst TERMS_CONDITIONS_URL = '';\n\nfunction Enrollment(props: EnrollmentProps) {\n    const { i18n, loadingContext } = useCoreContext();\n    const getImage = useImage();\n    const issuerListRef = useRef<ComponentMethodsRef>(null);\n    const [registrationOptions, setRegistrationOptions] = useState<string>(null);\n    const logos = [\n        {\n            name: 'open-finance',\n            alt: i18n.get('paybybankpix.await.logoAlt.openFinance'),\n            src: `${getImage({ parentFolder: `${props.txVariant}/` })('open-finance')}`\n        },\n        {\n            name: 'arrow-down',\n            alt: i18n.get('paybybankpix.await.logoAlt.arrowDown'),\n            src: `${getImage({ imageFolder: 'components/' })('arrow_down')}`\n        },\n        { name: 'bank', alt: i18n.get('paybybankpix.await.logoAlt.bank'), src: `${getImage({ imageFolder: 'components/' })('bank')}` }\n    ];\n    const self = useRef({\n        showValidation: () => {\n            issuerListRef?.current?.showValidation();\n        },\n        setStatus: (newStatus: UIElementStatus) => {\n            issuerListRef?.current?.setStatus(newStatus);\n        }\n    });\n\n    const pollStatus = async () => {\n        if (registrationOptions) return;\n\n        const { enrollmentId, clientKey } = props as AwaitProps;\n        const response = await getEnrollmentStatus({ enrollmentId, clientKey, loadingContext });\n        if (response.registrationOptions) {\n            setRegistrationOptions(response.registrationOptions);\n        }\n        return response;\n    };\n    //  Assist typescript to narrow down the type.\n    const isAwait = (props: EnrollmentProps): props is AwaitProps => props.type === 'await';\n    const awaitEndSlot = () => <span>{i18n.get('paybybankpix.await.withOpenFinance')}</span>;\n\n    useEffect(() => {\n        props.setComponentRef(self.current);\n    }, [props.setComponentRef]);\n\n    useEffect(() => {\n        if (registrationOptions) {\n            props.onEnroll(registrationOptions);\n        }\n    }, [registrationOptions]);\n\n    return (\n        <div className={'adyen-checkout-pix-enrollment'}>\n            {isAwait(props) ? (\n                <PayByBankPixAwait\n                    logos={logos}\n                    type={props.txVariant}\n                    countdownTime={props.countdownTime}\n                    clientKey={props.clientKey}\n                    onError={props.onError}\n                    awaitText={i18n.get('paybybankpix.await.waitForConfirmation')}\n                    instructions={i18n.get('paybybankpix.await.timeToPay', {\n                        values: { numberOfMin: props.countdownTime }\n                    })}\n                    pollStatus={pollStatus}\n                    endSlot={awaitEndSlot}\n                ></PayByBankPixAwait>\n            ) : (\n                <div className=\"adyen-checkout-pix-enrollment-issuer-list\">\n                    <IssuerListIntroduction txVariant={props.txVariant} />\n                    <IssuerList\n                        items={useIssuerWithLogo({ issuers: props.issuers, txVariant: props.txVariant })}\n                        onSubmitAnalytics={props.onSubmitAnalytics}\n                        onChange={props.onChange}\n                        payButton={props.payButton}\n                        showPayButton={true}\n                        ref={issuerListRef}\n                    ></IssuerList>\n                    <span className=\"adyen-checkout-disclaimer__label\">\n                        <LabelOnlyDisclaimerMessage message={i18n.get('paybybankpix.issuerList.disclaimer')} urls={[TERMS_CONDITIONS_URL]} />\n                    </span>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Enrollment;\n"],"names":["Enrollment","props","i18n","loadingContext","useCoreContext","getImage","useImage","issuerListRef","useRef","registrationOptions","setRegistrationOptions","useState","logos","name","alt","get","src","parentFolder","txVariant","imageFolder","self","showValidation","current","setStatus","newStatus","useEffect","setComponentRef","onEnroll","h","div","className","type","isAwait","PayByBankPixAwait","countdownTime","clientKey","onError","awaitText","instructions","values","numberOfMin","pollStatus","async","enrollmentId","response","getEnrollmentStatus","endSlot","span","IssuerListIntroduction","IssuerList","items","useIssuerWithLogo","issuers","onSubmitAnalytics","onChange","payButton","showPayButton","ref","LabelOnlyDisclaimerMessage","message","urls"],"mappings":"ypBAiBA,SAASA,EAAWC,GAChB,MAAMC,KAAEA,EAAIC,eAAEA,GAAmBC,IAC3BC,EAAWC,IACXC,EAAgBC,EAA4B,OAC3CC,EAAqBC,GAA0BC,EAAiB,MACjEC,EAAQ,CACV,CACIC,KAAM,eACNC,IAAKZ,EAAKa,IAAI,0CACdC,IAAK,GAAGX,EAAS,CAAEY,aAAc,GAAGhB,EAAMiB,cAAlCb,CAAkD,mBAE9D,CACIQ,KAAM,aACNC,IAAKZ,EAAKa,IAAI,wCACdC,IAAK,GAAGX,EAAS,CAAEc,YAAa,eAAxBd,CAAyC,iBAErD,CAAEQ,KAAM,OAAQC,IAAKZ,EAAKa,IAAI,mCAAoCC,IAAK,GAAGX,EAAS,CAAEc,YAAa,eAAxBd,CAAyC,YAEjHe,EAAOZ,EAAO,CAChBa,eAAgB,KACZd,GAAee,SAASD,gBAAAA,EAE5BE,UAAYC,IACRjB,GAAee,SAASC,UAAUC,EAAAA,IA4B1C,OAVAC,GAAU,KACNxB,EAAMyB,gBAAgBN,EAAKE,QAAO,GACnC,CAACrB,EAAMyB,kBAEVD,GAAU,KACFhB,GACAR,EAAM0B,SAASlB,EACnB,GACD,CAACA,IAGAmB,EAACC,MAAAA,CAAIC,UAAW,iCAdJ,CAAC7B,GAA+D,UAAfA,EAAM8B,KAe9DC,CAAQ/B,GACL2B,EAACK,EAAAA,CACGrB,MAAOA,EACPmB,KAAM9B,EAAMiB,UACZgB,cAAejC,EAAMiC,cACrBC,UAAWlC,EAAMkC,UACjBC,QAASnC,EAAMmC,QACfC,UAAWnC,EAAKa,IAAI,0CACpBuB,aAAcpC,EAAKa,IAAI,+BAAgC,CACnDwB,OAAQ,CAAEC,YAAavC,EAAMiC,iBAEjCO,WArCGC,UACf,GAAIjC,EAAqB,OAEzB,MAAMkC,aAAEA,EAAYR,UAAEA,GAAclC,EAC9B2C,QAAiBC,EAAoB,CAAEF,eAAcR,YAAWhC,mBAItE,OAHIyC,EAASnC,qBACTC,EAAuBkC,EAASnC,qBAE7BmC,CAAAA,EA8BKE,QA1BK,IAAMlB,EAACmB,OAAM7C,KAAAA,EAAKa,IAAI,yCA6B/Ba,EAACC,MAAAA,CAAIC,UAAU,6CACXF,EAACoB,EAAAA,CAAuB9B,UAAWjB,EAAMiB,YACzCU,EAACqB,EAAAA,CACGC,MAAOC,EAAkB,CAAEC,QAASnD,EAAMmD,QAASlC,UAAWjB,EAAMiB,YACpEmC,kBAAmBpD,EAAMoD,kBACzBC,SAAUrD,EAAMqD,SAChBC,UAAWtD,EAAMsD,UACjBC,eAAe,EACfC,IAAKlD,IAETqB,EAACmB,OAAAA,CAAKjB,UAAU,oCACZF,EAAC8B,EAAAA,CAA2BC,QAASzD,EAAKa,IAAI,sCAAuC6C,KAAM,CAjFtF,QAuF7B"}