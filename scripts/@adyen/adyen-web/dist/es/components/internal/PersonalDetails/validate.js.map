{"version":3,"file":"validate.js","sources":["../../../../../src/components/internal/PersonalDetails/validate.ts"],"sourcesContent":["import { ValidatorRules } from '../../../utils/Validator/types';\nimport { isEmpty } from '../../../utils/validator-utils';\nimport { ERROR_FIELD_REQUIRED } from '../../../core/Errors/constants';\nimport { validationRules } from '../../../utils/Validator/defaultRules';\n\nexport const personalDetailsValidationRules: ValidatorRules = {\n    default: {\n        validate: value => {\n            return value && value.length > 0;\n        },\n        errorMessage: ERROR_FIELD_REQUIRED,\n        modes: ['blur']\n    },\n    gender: {\n        validate: value => value && value.length > 0,\n        errorMessage: 'gender.notselected',\n        modes: ['blur']\n    },\n    firstName: {\n        validate: value => (isEmpty(value) ? null : true), // valid, if there are chars other than spaces,\n        errorMessage: 'firstName.invalid',\n        modes: ['blur']\n    },\n    lastName: {\n        validate: value => (isEmpty(value) ? null : true),\n        errorMessage: 'lastName.invalid',\n        modes: ['blur']\n    },\n    dateOfBirth: validationRules.dateOfBirthRule,\n    telephoneNumber: validationRules.phoneNumberRule,\n    shopperEmail: validationRules.emailRule\n};\n"],"names":["personalDetailsValidationRules","default","validate","value","length","errorMessage","ERROR_FIELD_REQUIRED","modes","gender","firstName","isEmpty","lastName","dateOfBirth","validationRules","dateOfBirthRule","telephoneNumber","phoneNumberRule","shopperEmail","emailRule"],"mappings":"sNAKaA,EAAiD,CAC1DC,QAAS,CACLC,SAAUC,GACCA,GAASA,EAAMC,OAAS,EAEnCC,aAAcC,EACdC,MAAO,CAAC,SAEZC,OAAQ,CACJN,SAAUC,GAASA,GAASA,EAAMC,OAAS,EAC3CC,aAAc,qBACdE,MAAO,CAAC,SAEZE,UAAW,CACPP,SAAUC,IAAUO,EAAQP,IAAS,KACrCE,aAAc,oBACdE,MAAO,CAAC,SAEZI,SAAU,CACNT,SAAUC,IAAUO,EAAQP,IAAS,KACrCE,aAAc,mBACdE,MAAO,CAAC,SAEZK,YAAaC,EAAgBC,gBAC7BC,gBAAiBF,EAAgBG,gBACjCC,aAAcJ,EAAgBK"}