{"version":3,"file":"dom.js","sources":["../../../../../../../src/components/internal/SecuredFields/lib/utilities/dom.ts"],"sourcesContent":["const select = (root, selector) => {\n    let array = [];\n\n    if (root) {\n        // Convert NodeList to array\n        if (typeof root.querySelectorAll === 'function') {\n            array = [].slice.call(root.querySelectorAll(selector));\n        }\n    }\n\n    return array;\n};\n\nconst selectOne = (root, selector) => {\n    if (!root) {\n        return undefined;\n    }\n\n    return root.querySelector(selector);\n};\n\nconst getAttribute = (node, attribute) => {\n    if (!node) {\n        return undefined;\n    }\n    return node.getAttribute(attribute);\n};\n\n/**\n * @internal\n * Removes all children elements of the given node.\n *\n * @param node -\n */\nconst removeAllChildren = node => {\n    while (node.firstChild) {\n        node.removeChild(node.firstChild);\n    }\n};\n\nexport { getAttribute, select, selectOne, removeAllChildren };\n"],"names":["select","root","selector","array","querySelectorAll","slice","call","selectOne","querySelector","getAttribute","node","attribute","removeAllChildren","firstChild","removeChild"],"mappings":"AAAMA,MAAAA,EAAS,CAACC,EAAMC,KAClB,IAAIC,EAAQ,GASZ,OAPIF,GAEqC,mBAA1BA,EAAKG,mBACZD,EAAQ,GAAGE,MAAMC,KAAKL,EAAKG,iBAAiBF,KAI7CC,CAAAA,EAGLI,EAAY,CAACN,EAAMC,KACrB,GAAKD,EAIL,OAAOA,EAAKO,cAAcN,EAAAA,EAGxBO,EAAe,CAACC,EAAMC,KACxB,GAAKD,EAGL,OAAOA,EAAKD,aAAaE,EAAAA,EASvBC,EAAoBF,IACtB,KAAOA,EAAKG,YACRH,EAAKI,YAAYJ,EAAKG,WAC1B"}