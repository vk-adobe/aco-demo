{"version":3,"file":"validate.js","sources":["../../../../../src/components/internal/CompanyDetails/validate.ts"],"sourcesContent":["import { ValidatorRules } from '../../../utils/Validator/types';\nimport { isEmpty } from '../../../utils/validator-utils';\nimport { SF_ErrorCodes } from '../../../core/Errors/constants';\n\nexport const companyDetailsValidationRules: ValidatorRules = {\n    default: {\n        validate: value => {\n            return value && value.length > 0;\n        },\n        modes: ['blur'],\n        errorMessage: SF_ErrorCodes.ERROR_MSG_INCOMPLETE_FIELD // = 'err-gen-9100'\n    },\n    name: {\n        validate: value => (isEmpty(value) ? null : true), // valid, if there are chars other than spaces\n        errorMessage: 'companyDetails.name.invalid',\n        modes: ['blur']\n    },\n    registrationNumber: {\n        validate: value => (isEmpty(value) ? null : true),\n        errorMessage: 'companyDetails.registrationNumber.invalid',\n        modes: ['blur']\n    }\n};\n"],"names":["companyDetailsValidationRules","default","validate","value","length","modes","errorMessage","SF_ErrorCodes","ERROR_MSG_INCOMPLETE_FIELD","name","isEmpty","registrationNumber"],"mappings":"oIAIaA,EAAgD,CACzDC,QAAS,CACLC,SAAUC,GACCA,GAASA,EAAMC,OAAS,EAEnCC,MAAO,CAAC,QACRC,aAAcC,EAAcC,4BAEhCC,KAAM,CACFP,SAAUC,IAAUO,EAAQP,IAAS,KACrCG,aAAc,8BACdD,MAAO,CAAC,SAEZM,mBAAoB,CAChBT,SAAUC,IAAUO,EAAQP,IAAS,KACrCG,aAAc,4CACdD,MAAO,CAAC"}