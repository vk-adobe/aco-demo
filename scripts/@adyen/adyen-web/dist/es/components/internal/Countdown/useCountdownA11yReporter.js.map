{"version":3,"file":"useCountdownA11yReporter.js","sources":["../../../../../src/components/internal/Countdown/useCountdownA11yReporter.ts"],"sourcesContent":["import { useEffect, useRef } from 'preact/hooks';\nimport { CountdownA11yReporter } from './CountdownA11yReporter';\nimport useSRPanelContext from '../../../core/Errors/useSRPanelContext';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { CountdownTime } from './types';\n\nexport const useCountdownA11yReporter = (time: CountdownTime): void => {\n    const { i18n } = useCoreContext();\n    const { srPanel } = useSRPanelContext();\n    const reporter = useRef<CountdownA11yReporter>(null);\n\n    useEffect(() => {\n        reporter.current = new CountdownA11yReporter({ i18n, srPanel });\n        return () => {\n            reporter.current.tearDown();\n        };\n    }, []);\n\n    useEffect(() => {\n        try {\n            if (!reporter.current) return;\n            reporter.current.update(time);\n        } catch (e) {\n            reporter.current.tearDown();\n            reporter.current = null;\n            throw e;\n        }\n    }, [time]);\n};\n"],"names":["useCountdownA11yReporter","time","i18n","useCoreContext","srPanel","useSRPanelContext","reporter","useRef","useEffect","current","CountdownA11yReporter","tearDown","update","e"],"mappings":"wRAMO,MAAMA,EAA4BC,IACrC,MAAMC,KAAEA,GAASC,KACXC,QAAEA,GAAYC,IACdC,EAAWC,EAA8B,MAE/CC,GAAU,KACNF,EAASG,QAAU,IAAIC,EAAsB,CAAER,OAAME,YAC9C,KACHE,EAASG,QAAQE,UAAQ,IAE9B,IAEHH,GAAU,KACN,IACI,IAAKF,EAASG,QAAS,OACvBH,EAASG,QAAQG,OAAOX,EAC5B,CAAE,MAAOY,GAGL,MAFAP,EAASG,QAAQE,WACjBL,EAASG,QAAU,KACbI,CACV,IACD,CAACZ,GAAK"}