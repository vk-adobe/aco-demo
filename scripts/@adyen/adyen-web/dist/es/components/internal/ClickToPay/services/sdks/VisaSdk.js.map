{"version":3,"file":"VisaSdk.js","sources":["../../../../../../../src/components/internal/ClickToPay/services/sdks/VisaSdk.ts"],"sourcesContent":["import { getVisaSetttings, VISA_SDK_PROD, VISA_SDK_TEST } from './config';\nimport AbstractSrcInitiator from './AbstractSrcInitiator';\nimport SrciError, { MastercardError, VisaError } from './SrciError';\nimport type {\n    CustomSdkConfiguration,\n    SrciCompleteIdentityValidationResponse,\n    SrcIdentityLookupParams,\n    SrciIdentityLookupResponse,\n    SrcInitParams\n} from './types';\n\nconst IdentityTypeMap = {\n    email: 'EMAIL',\n    telephoneNumber: 'MOBILE_NUMBER'\n};\n\nclass VisaSdk extends AbstractSrcInitiator {\n    public readonly schemeName = 'visa';\n\n    constructor(environment: string, customSdkConfig: CustomSdkConfiguration) {\n        super(environment.toLowerCase().includes('live') ? VISA_SDK_PROD : VISA_SDK_TEST, customSdkConfig);\n    }\n\n    protected isSdkIsAvailableOnWindow(): boolean {\n        // @ts-ignore vAdapters is created by the VISA sdk\n        if (window.vAdapters?.VisaSRCI) return true;\n        return false;\n    }\n\n    protected assignSdkReference(): void {\n        // @ts-ignore vAdapters is created by the VISA sdk\n        this.schemeSdk = new window.vAdapters.VisaSRCI();\n    }\n\n    public async init(params: SrcInitParams, srciTransactionId: string): Promise<void> {\n        try {\n            const sdkProps = {\n                ...params,\n                ...getVisaSetttings(this.customSdkConfiguration),\n                srciTransactionId\n            };\n\n            await this.schemeSdk.init(sdkProps);\n        } catch (err) {\n            const srciError = new SrciError(err as VisaError | MastercardError, 'init', this.schemeName);\n            throw srciError;\n        }\n    }\n\n    public async identityLookup({ identityValue, type }: SrcIdentityLookupParams): Promise<SrciIdentityLookupResponse> {\n        try {\n            const consumerIdentity = {\n                identityValue,\n                type: IdentityTypeMap[type]\n            };\n\n            const response = await this.schemeSdk.identityLookup(consumerIdentity);\n            return response;\n        } catch (err) {\n            const srciError = new SrciError(err as VisaError | MastercardError, 'identityLookup', this.schemeName);\n            throw srciError;\n        }\n    }\n\n    public async completeIdentityValidation(otp: string): Promise<SrciCompleteIdentityValidationResponse> {\n        try {\n            const response = await this.schemeSdk.completeIdentityValidation(otp);\n            return response;\n        } catch (err: unknown) {\n            const srciError = new SrciError(err as VisaError | MastercardError, 'completeIdentityValidation', this.schemeName);\n            throw srciError;\n        }\n    }\n}\n\nexport default VisaSdk;\n"],"names":["IdentityTypeMap","email","telephoneNumber","VisaSdk","AbstractSrcInitiator","isSdkIsAvailableOnWindow","window","vAdapters","VisaSRCI","assignSdkReference","this","schemeSdk","init","params","srciTransactionId","sdkProps","getVisaSetttings","customSdkConfiguration","err","SrciError","schemeName","identityLookup","identityValue","type","consumerIdentity","completeIdentityValidation","otp","constructor","environment","customSdkConfig","super","toLowerCase","includes","VISA_SDK_PROD","VISA_SDK_TEST"],"mappings":"4JAWA,MAAMA,EAAkB,CACpBC,MAAO,QACPC,gBAAiB,iBAGrB,MAAMC,UAAgBC,EAORC,wBAAAA,GAEN,QAAIC,OAAOC,WAAWC,QAE1B,CAEUC,kBAAAA,GAENC,KAAKC,UAAY,IAAIL,OAAOC,UAAUC,QAC1C,CAEA,UAAaI,CAAKC,EAAuBC,GACrC,IACI,MAAMC,EAAW,IACVF,KACAG,EAAiBN,KAAKO,wBACzBH,2BAGEJ,KAAKC,UAAUC,KAAKG,EAC9B,CAAE,MAAOG,GAEL,MADkB,IAAIC,EAAUD,EAAoC,OAAQR,KAAKU,WAErF,CACJ,CAEA,oBAAaC,EAAeC,cAAEA,EAAaC,KAAEA,IACzC,IACI,MAAMC,EAAmB,CACrBF,gBACAC,KAAMvB,EAAgBuB,IAI1B,aADuBb,KAAKC,UAAUU,eAAeG,EAEzD,CAAE,MAAON,GAEL,MADkB,IAAIC,EAAUD,EAAoC,iBAAkBR,KAAKU,WAE/F,CACJ,CAEA,gCAAaK,CAA2BC,GACpC,IAEI,aADuBhB,KAAKC,UAAUc,2BAA2BC,EAErE,CAAE,MAAOR,GAEL,MADkB,IAAIC,EAAUD,EAAoC,6BAA8BR,KAAKU,WAE3G,CACJ,CArDAO,WAAAA,CAAYC,EAAqBC,aAC7BC,MAAMF,EAAYG,cAAcC,SAAS,QAAUC,EAAgBC,EAAeL,KAHzD,UAAbT,kBAAhBV,2FAIA"}