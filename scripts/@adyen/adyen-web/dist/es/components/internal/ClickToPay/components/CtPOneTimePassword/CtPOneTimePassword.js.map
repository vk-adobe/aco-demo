{"version":3,"file":"CtPOneTimePassword.js","sources":["../../../../../../../src/components/internal/ClickToPay/components/CtPOneTimePassword/CtPOneTimePassword.tsx"],"sourcesContent":["import { Fragment, h } from 'preact';\nimport { useCallback, useState } from 'preact/hooks';\nimport Button from '../../../Button';\nimport useClickToPayContext from '../../context/useClickToPayContext';\nimport CtPOneTimePasswordInput from './CtPOneTimePasswordInput';\nimport { CtPOneTimePasswordInputHandlers } from './CtPOneTimePasswordInput/CtPOneTimePasswordInput';\nimport { CtPInfo } from '../CtPInfo';\nimport CtPSection from '../CtPSection';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport './CtPOneTimePassword.scss';\nimport CtPSaveCookiesCheckbox from './CtPSaveCookiesCheckbox';\nimport { isSrciError } from '../../services/utils';\n\ntype CtPOneTimePasswordProps = {\n    onDisplayCardComponent?(): void;\n};\nconst CtPOneTimePassword = ({ onDisplayCardComponent }: CtPOneTimePasswordProps): h.JSX.Element => {\n    const { i18n } = useCoreContext();\n    const { finishIdentityValidation, otpMaskedContact, otpNetwork, isCtpPrimaryPaymentMethod } = useClickToPayContext();\n    const [otp, setOtp] = useState<string>(null);\n    const [isValid, setIsValid] = useState<boolean>(false);\n    const [isValidatingOtp, setIsValidatingOtp] = useState<boolean>(false);\n    const [errorCode, setErrorCode] = useState<string>(null);\n    const [otpInputHandlers, setOtpInputHandlers] = useState<CtPOneTimePasswordInputHandlers>(null);\n    const [isAccountLocked, setIsAccountLocked] = useState<boolean>(false);\n\n    const onSetOtpInputHandlers = useCallback((handlers: CtPOneTimePasswordInputHandlers) => {\n        setOtpInputHandlers(handlers);\n    }, []);\n\n    const onChangeOtpInput = useCallback(({ data, isValid }) => {\n        setOtp(data.otp);\n        setIsValid(isValid);\n    }, []);\n\n    const onResendCode = useCallback(() => {\n        setErrorCode(null);\n    }, []);\n\n    const onSubmitPassword = useCallback(async () => {\n        setErrorCode(null);\n\n        if (!isValid) {\n            otpInputHandlers.validateInput();\n            return;\n        }\n\n        setIsValidatingOtp(true);\n\n        try {\n            await finishIdentityValidation(otp);\n        } catch (error: unknown) {\n            if (!isSrciError(error)) {\n                setIsValidatingOtp(false);\n                return;\n            }\n\n            setErrorCode(error?.reason);\n            setIsValidatingOtp(false);\n\n            if (error?.reason === 'ACCT_INACCESSIBLE') {\n                setIsAccountLocked(true);\n                onDisplayCardComponent?.();\n            }\n        }\n    }, [otp, isValid, otpInputHandlers, onDisplayCardComponent]);\n\n    const handleButtonKeyDown = useCallback(\n        (event: KeyboardEvent) => {\n            if (event.key === 'Enter') {\n                void onSubmitPassword();\n            }\n        },\n        [onSubmitPassword]\n    );\n\n    const subtitleParts = i18n.get('ctp.otp.subtitle').split('%@');\n\n    return (\n        <Fragment>\n            <CtPSection.Title endAdornment={<CtPInfo />}>{i18n.get('ctp.otp.title')}</CtPSection.Title>\n\n            <CtPSection.Text>\n                {subtitleParts[0]} {otpNetwork} {subtitleParts[1]}\n                <span className=\"adyen-checkout-ctp__otp-subtitle--highlighted\">{otpMaskedContact}</span>\n                {subtitleParts[2]}\n            </CtPSection.Text>\n\n            <CtPOneTimePasswordInput\n                hideResendOtpButton={isAccountLocked}\n                onChange={onChangeOtpInput}\n                onSetInputHandlers={onSetOtpInputHandlers}\n                disabled={isValidatingOtp}\n                errorMessage={errorCode && i18n.get(`ctp.errors.${errorCode}`)}\n                onPressEnter={onSubmitPassword}\n                onResendCode={onResendCode}\n                isValidatingOtp={isValidatingOtp}\n            />\n\n            <CtPSaveCookiesCheckbox />\n\n            <Button\n                disabled={isAccountLocked}\n                label={i18n.get('continue')}\n                variant={isCtpPrimaryPaymentMethod ? 'primary' : 'secondary'}\n                onClick={onSubmitPassword}\n                status={isValidatingOtp && 'loading'}\n                onKeyDown={handleButtonKeyDown}\n            />\n        </Fragment>\n    );\n};\n\nexport default CtPOneTimePassword;\n"],"names":["CtPOneTimePassword","onDisplayCardComponent","i18n","useCoreContext","finishIdentityValidation","otpMaskedContact","otpNetwork","isCtpPrimaryPaymentMethod","useClickToPayContext","otp","setOtp","useState","isValid","setIsValid","isValidatingOtp","setIsValidatingOtp","errorCode","setErrorCode","otpInputHandlers","setOtpInputHandlers","isAccountLocked","setIsAccountLocked","onSetOtpInputHandlers","useCallback","handlers","onChangeOtpInput","data","onResendCode","onSubmitPassword","async","error","isSrciError","reason","validateInput","handleButtonKeyDown","event","key","subtitleParts","get","split","h","Fragment","CtPSection","Title","endAdornment","CtPInfo","Text","span","className","CtPOneTimePasswordInput","hideResendOtpButton","onChange","onSetInputHandlers","disabled","errorMessage","onPressEnter","CtPSaveCookiesCheckbox","Button","label","variant","onClick","status","onKeyDown"],"mappings":"6nBAgBA,MAAMA,EAAqB,EAAGC,6BAC1B,MAAMC,KAAEA,GAASC,KACXC,yBAAEA,EAAwBC,iBAAEA,EAAgBC,WAAEA,EAAUC,0BAAEA,GAA8BC,KACvFC,EAAKC,GAAUC,EAAiB,OAChCC,EAASC,GAAcF,GAAkB,IACzCG,EAAiBC,GAAsBJ,GAAkB,IACzDK,EAAWC,GAAgBN,EAAiB,OAC5CO,EAAkBC,GAAuBR,EAA0C,OACnFS,EAAiBC,GAAsBV,GAAkB,GAE1DW,EAAwBC,GAAaC,IACvCL,EAAoBK,EAAAA,GACrB,IAEGC,EAAmBF,GAAY,EAAGG,OAAMd,cAC1CF,EAAOgB,EAAKjB,KACZI,EAAWD,EAAAA,GACZ,IAEGe,EAAeJ,GAAY,KAC7BN,EAAa,KAAA,GACd,IAEGW,EAAmBL,GAAYM,UAGjC,GAFAZ,EAAa,MAERL,EAAL,CAKAG,GAAmB,GAEnB,UACUX,EAAyBK,EACnC,CAAE,MAAOqB,GACL,IAAKC,EAAYD,GAEb,YADAf,GAAmB,GAIvBE,EAAaa,GAAOE,QACpBjB,GAAmB,GAEG,sBAAlBe,GAAOE,SACPX,GAAmB,GACnBpB,MAER,CAnBA,MAFIiB,EAAiBe,eAqBrB,GACD,CAACxB,EAAKG,EAASM,EAAkBjB,IAE9BiC,EAAsBX,GACvBY,IACqB,UAAdA,EAAMC,KACDR,GACT,GAEJ,CAACA,IAGCS,EAAgBnC,EAAKoC,IAAI,oBAAoBC,MAAM,MAEzD,OACIC,EAACC,EAAAA,KACGD,EAACE,EAAWC,MAAK,CAACC,aAAcJ,EAACK,EAAAA,OAAa3C,EAAKoC,IAAI,kBAEvDE,EAACE,EAAWI,UACPT,EAAc,GAAG,IAAE/B,EAAW,IAAE+B,EAAc,GAC/CG,EAACO,OAAAA,CAAKC,UAAU,iDAAiD3C,GAChEgC,EAAc,IAGnBG,EAACS,EAAAA,CACGC,oBAAqB9B,EACrB+B,SAAU1B,EACV2B,mBAAoB9B,EACpB+B,SAAUvC,EACVwC,aAActC,GAAad,EAAKoC,IAAI,cAActB,KAClDuC,aAAc3B,EACdD,aAAcA,EACdb,gBAAiBA,IAGrB0B,EAACgB,QAEDhB,EAACiB,EAAAA,CACGJ,SAAUjC,EACVsC,MAAOxD,EAAKoC,IAAI,YAChBqB,QAASpD,EAA4B,UAAY,YACjDqD,QAAShC,EACTiC,OAAQ/C,GAAmB,UAC3BgD,UAAW5B"}