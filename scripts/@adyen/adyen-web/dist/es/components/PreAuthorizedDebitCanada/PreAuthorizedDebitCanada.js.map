{"version":3,"file":"PreAuthorizedDebitCanada.js","sources":["../../../../src/components/PreAuthorizedDebitCanada/PreAuthorizedDebitCanada.tsx"],"sourcesContent":["import { h, Fragment } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { TxVariants } from '../tx-variants';\nimport PreAuthorizedDebitCanadaComponent from './components/PreAuthorizedDebitCanadaComponent';\nimport { SettlementInfo } from './components/SettlementInfo';\nimport RedirectButton from '../internal/RedirectButton';\nimport { payAmountLabel } from '../internal/PayButton';\n\nimport type { PreAuthorizedDebitCanadaConfiguration } from './types';\n\nexport class PreAuthorizedDebitCanada extends UIElement<PreAuthorizedDebitCanadaConfiguration> {\n    public static type = TxVariants.eft_directdebit_CA;\n\n    public override formatData() {\n        const recurringPayment = !!this.props.storedPaymentMethodId;\n\n        if (recurringPayment) {\n            return {\n                paymentMethod: {\n                    type: PreAuthorizedDebitCanada.type,\n                    storedPaymentMethodId: this.props.storedPaymentMethodId\n                }\n            };\n        }\n\n        return {\n            paymentMethod: {\n                type: PreAuthorizedDebitCanada.type,\n                ownerName: this.state.data.ownerName,\n                bankAccountNumber: this.state.data.bankAccountNumber,\n                bankCode: this.state.data.bankCode,\n                bankLocationId: this.state.data.bankLocationId\n            },\n            ...(this.state.storePaymentMethod && { storePaymentMethod: this.state.storePaymentMethod })\n        };\n    }\n\n    public override formatProps(props: PreAuthorizedDebitCanadaConfiguration): PreAuthorizedDebitCanadaConfiguration {\n        return {\n            enableStoreDetails: props.session?.configuration?.enableStoreDetails ?? props.enableStoreDetails,\n            ...props\n        };\n    }\n\n    public override get isValid(): boolean {\n        if (this.props.storedPaymentMethodId) {\n            return true;\n        }\n\n        return !!this.state.isValid;\n    }\n\n    public override get displayName(): string {\n        if (this.props.storedPaymentMethodId && this.props.lastFour) {\n            return `•••• ${this.props.lastFour}`;\n        }\n\n        return this.props.name;\n    }\n\n    public override get additionalInfo(): string {\n        return this.props.storedPaymentMethodId ? this.props.label : '';\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.storedPaymentMethodId ? (\n                    <Fragment>\n                        <SettlementInfo />\n                        <RedirectButton\n                            showPayButton={this.props.showPayButton}\n                            icon={this.resources?.getImage({ imageFolder: 'components/' })(`bento_lock`)}\n                            label={payAmountLabel(this.props.i18n, this.props.amount)}\n                            name={this.displayName}\n                            amount={this.props.amount}\n                            payButton={this.payButton}\n                            onSubmit={this.submit}\n                            ref={ref => {\n                                this.componentRef = ref;\n                            }}\n                        />\n                    </Fragment>\n                ) : (\n                    <PreAuthorizedDebitCanadaComponent\n                        onChange={this.setState}\n                        payButton={this.payButton}\n                        showPayButton={this.props.showPayButton}\n                        placeholders={this.props.placeholders}\n                        setComponentRef={this.setComponentRef}\n                        showContextualElement={this.props.showContextualElement}\n                        enableStoreDetails={this.props.enableStoreDetails}\n                    />\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default PreAuthorizedDebitCanada;\n"],"names":["PreAuthorizedDebitCanada","UIElement","formatData","this","props","storedPaymentMethodId","paymentMethod","type","ownerName","state","data","bankAccountNumber","bankCode","bankLocationId","storePaymentMethod","formatProps","enableStoreDetails","session","configuration","isValid","displayName","lastFour","name","additionalInfo","label","render","h","CoreProvider","i18n","loadingContext","resources","Fragment","SettlementInfo","RedirectButton","showPayButton","icon","getImage","imageFolder","payAmountLabel","amount","payButton","onSubmit","submit","ref","componentRef","PreAuthorizedDebitCanadaComponent","onChange","setState","placeholders","setComponentRef","showContextualElement","TxVariants","eft_directdebit_CA"],"mappings":"qiBAWO,MAAMA,UAAiCC,EAG1BC,UAAAA,GAGZ,QAF2BC,KAAKC,MAAMC,sBAG3B,CACHC,cAAe,CACXC,KAAMP,EAAyBO,KAC/BF,sBAAuBF,KAAKC,MAAMC,wBAKvC,CACHC,cAAe,CACXC,KAAMP,EAAyBO,KAC/BC,UAAWL,KAAKM,MAAMC,KAAKF,UAC3BG,kBAAmBR,KAAKM,MAAMC,KAAKC,kBACnCC,SAAUT,KAAKM,MAAMC,KAAKE,SAC1BC,eAAgBV,KAAKM,MAAMC,KAAKG,mBAEhCV,KAAKM,MAAMK,oBAAsB,CAAEA,mBAAoBX,KAAKM,MAAMK,oBAE9E,CAEgBC,WAAAA,CAAYX,GACxB,MAAO,CACHY,mBAAoBZ,EAAMa,SAASC,eAAeF,oBAAsBZ,EAAMY,sBAC3EZ,EAEX,CAEA,WAAoBe,GAChB,QAAIhB,KAAKC,MAAMC,yBAINF,KAAKM,MAAMU,OACxB,CAEA,eAAoBC,GAChB,OAAIjB,KAAKC,MAAMC,uBAAyBF,KAAKC,MAAMiB,SACxC,QAAQlB,KAAKC,MAAMiB,WAGvBlB,KAAKC,MAAMkB,IACtB,CAEA,kBAAoBC,GAChB,OAAOpB,KAAKC,MAAMC,sBAAwBF,KAAKC,MAAMoB,MAAQ,EACjE,CAEAC,MAAAA,GACI,OACIC,EAACC,EAAAA,CAAaC,KAAMzB,KAAKC,MAAMwB,KAAMC,eAAgB1B,KAAKC,MAAMyB,eAAgBC,UAAW3B,KAAK2B,WAC3F3B,KAAKC,MAAMC,sBACRqB,EAACK,EAAAA,KACGL,EAACM,EAAAA,MACDN,EAACO,EAAAA,CACGC,cAAe/B,KAAKC,MAAM8B,cAC1BC,KAAMhC,KAAK2B,WAAWM,SAAS,CAAEC,YAAa,eAAxClC,CAAyD,cAC/DqB,MAAOc,EAAenC,KAAKC,MAAMwB,KAAMzB,KAAKC,MAAMmC,QAClDjB,KAAMnB,KAAKiB,YACXmB,OAAQpC,KAAKC,MAAMmC,OACnBC,UAAWrC,KAAKqC,UAChBC,SAAUtC,KAAKuC,OACfC,IAAKA,IACDxC,KAAKyC,aAAeD,CAAAA,KAKhCjB,EAACmB,EAAAA,CACGC,SAAU3C,KAAK4C,SACfP,UAAWrC,KAAKqC,UAChBN,cAAe/B,KAAKC,MAAM8B,cAC1Bc,aAAc7C,KAAKC,MAAM4C,aACzBC,gBAAiB9C,KAAK8C,gBACtBC,sBAAuB/C,KAAKC,MAAM8C,sBAClClC,mBAAoBb,KAAKC,MAAMY,qBAKnD,cAtFShB,IACKO,SAAO4C,EAAWC"}