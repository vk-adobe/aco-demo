{"version":3,"file":"PreAuthorizedDebitCanadaComponent.js","sources":["../../../../../src/components/PreAuthorizedDebitCanada/components/PreAuthorizedDebitCanadaComponent.tsx"],"sourcesContent":["import { h } from 'preact';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport Fieldset from '../../internal/FormFields/Fieldset';\nimport FormInstruction from '../../internal/FormInstruction';\nimport useForm from '../../../utils/useForm';\nimport Field from '../../internal/FormFields/Field';\nimport InputText from '../../internal/FormFields/InputText';\nimport { preAuthorizedDebitCanadaFormatters, preAuthorizedDebitCanadaValidationRules } from './validate';\nimport StoreDetails from '../../internal/StoreDetails';\nimport useImage from '../../../core/Context/useImage';\nimport { SettlementInfo } from './SettlementInfo';\n\nimport type { PayButtonProps } from '../../internal/PayButton/PayButton';\nimport type { ComponentMethodsRef } from '../../internal/UIElement/types';\nimport type { PreAuthorizedDebitCanadaPlaceholders } from '../types';\n\nimport './PreAuthorizedDebitCanada.scss';\n\ninterface PreAuthorizedDebitCanadaForm {\n    ownerName: string;\n    bankAccountNumber: string;\n    bankCode: string;\n    bankLocationId: string;\n}\n\ninterface PreAuthorizedDebitCanadaComponentProps {\n    onChange({\n        data,\n        valid,\n        errors,\n        isValid,\n        storePaymentMethod\n    }: {\n        data: PreAuthorizedDebitCanadaForm;\n        valid: { [key: string]: boolean };\n        errors: { [key: string]: any };\n        isValid: boolean;\n        storePaymentMethod: boolean;\n    }): void;\n    payButton: (props: Partial<PayButtonProps>) => h.JSX.Element;\n    setComponentRef: (ref: ComponentMethodsRef) => void;\n    showPayButton: boolean;\n    enableStoreDetails: boolean;\n    showContextualElement?: boolean;\n    placeholders?: PreAuthorizedDebitCanadaPlaceholders;\n}\n\nfunction PreAuthorizedDebitCanadaComponent({\n    onChange,\n    payButton,\n    showPayButton,\n    placeholders,\n    setComponentRef,\n    enableStoreDetails,\n    showContextualElement = true\n}: Readonly<PreAuthorizedDebitCanadaComponentProps>) {\n    const getImage = useImage();\n    const { i18n } = useCoreContext();\n    const [status, setStatus] = useState('ready');\n    const { handleChangeFor, triggerValidation, data, errors, valid, isValid } = useForm<PreAuthorizedDebitCanadaForm>({\n        schema: ['ownerName', 'bankAccountNumber', 'bankCode', 'bankLocationId'],\n        rules: preAuthorizedDebitCanadaValidationRules,\n        formatters: preAuthorizedDebitCanadaFormatters\n    });\n    const [storePaymentMethod, setStorePaymentMethod] = useState(false);\n\n    const isFormDisabled = status === 'loading';\n\n    const componentRef = useRef<ComponentMethodsRef>({\n        setStatus: setStatus,\n        showValidation: () => {\n            triggerValidation();\n        }\n    });\n\n    useEffect(() => {\n        setComponentRef(componentRef.current);\n    }, [setComponentRef, componentRef.current]);\n\n    useEffect(() => {\n        onChange({ data, valid, errors, isValid, storePaymentMethod });\n    }, [onChange, data, valid, errors, isValid, storePaymentMethod]);\n\n    return (\n        <div className=\"adyen-checkout__eftpad-canada\">\n            <FormInstruction />\n\n            <Fieldset>\n                <Field\n                    label={i18n.get('eftpad-canada.input.accountHolderName.label')}\n                    errorMessage={!!errors.ownerName && i18n.get(errors.ownerName.errorMessage)}\n                    isValid={!!valid.ownerName}\n                    name={'ownerName'}\n                >\n                    <InputText\n                        disabled={isFormDisabled}\n                        name={'ownerName'}\n                        placeholder={placeholders?.ownerName}\n                        value={data.ownerName}\n                        onInput={handleChangeFor('ownerName', 'input')}\n                        onBlur={handleChangeFor('ownerName', 'blur')}\n                        required={true}\n                        data-testid={'owner-name'}\n                    />\n                </Field>\n\n                <Field\n                    label={i18n.get('eftpad-canada.input.accountNumber.label')}\n                    errorMessage={!!errors.bankAccountNumber && i18n.get(errors.bankAccountNumber.errorMessage)}\n                    name={'bankAccountNumber'}\n                    isValid={!!valid.bankAccountNumber}\n                    showContextualElement={showContextualElement}\n                    contextualText={i18n.get('eftpad-canada.input.accountNumber.contextualText')}\n                >\n                    <InputText\n                        disabled={isFormDisabled}\n                        name={'bankAccountNumber'}\n                        placeholder={placeholders?.bankAccountNumber}\n                        value={data.bankAccountNumber}\n                        onInput={handleChangeFor('bankAccountNumber', 'input')}\n                        onBlur={handleChangeFor('bankAccountNumber', 'blur')}\n                        required={true}\n                        maxlength={12}\n                    />\n                </Field>\n\n                <Field\n                    label={i18n.get('eftpad-canada.input.institutionNumber.label')}\n                    classNameModifiers={['col-50']}\n                    errorMessage={!!errors.bankCode && i18n.get(errors.bankCode.errorMessage)}\n                    isValid={!!valid.bankCode}\n                    name={'bankCode'}\n                    showContextualElement={showContextualElement}\n                    contextualText={i18n.get('eftpad-canada.input.institutionNumber.contextualText')}\n                >\n                    <InputText\n                        disabled={isFormDisabled}\n                        name={'bankCode'}\n                        placeholder={placeholders?.bankCode}\n                        value={data.bankCode}\n                        onInput={handleChangeFor('bankCode', 'input')}\n                        onBlur={handleChangeFor('bankCode', 'blur')}\n                        required={true}\n                        maxlength={3}\n                    />\n                </Field>\n\n                <Field\n                    label={i18n.get('eftpad-canada.input.transitNumber.label')}\n                    classNameModifiers={['col-50']}\n                    errorMessage={!!errors.bankLocationId && i18n.get(errors.bankLocationId.errorMessage)}\n                    name={'bankLocationId'}\n                    isValid={!!valid.bankLocationId}\n                    showContextualElement={showContextualElement}\n                    contextualText={i18n.get('eftpad-canada.input.transitNumber.contextualText')}\n                >\n                    <InputText\n                        disabled={isFormDisabled}\n                        name={'bankLocationId'}\n                        placeholder={placeholders?.bankLocationId}\n                        value={data.bankLocationId}\n                        onInput={handleChangeFor('bankLocationId', 'input')}\n                        onBlur={handleChangeFor('bankLocationId', 'blur')}\n                        required={true}\n                        maxlength={5}\n                    />\n                </Field>\n            </Fieldset>\n\n            {enableStoreDetails && (\n                <StoreDetails className={'adyen-checkout_eftpad-canada-store-details'} disabled={isFormDisabled} onChange={setStorePaymentMethod} />\n            )}\n\n            <SettlementInfo />\n\n            {showPayButton && payButton({ status, icon: getImage({ imageFolder: 'components/' })('bento_lock') })}\n        </div>\n    );\n}\n\nexport default PreAuthorizedDebitCanadaComponent;\n"],"names":["PreAuthorizedDebitCanadaComponent","onChange","payButton","showPayButton","placeholders","setComponentRef","enableStoreDetails","showContextualElement","getImage","useImage","i18n","useCoreContext","status","setStatus","useState","handleChangeFor","triggerValidation","data","errors","valid","isValid","useForm","schema","rules","preAuthorizedDebitCanadaValidationRules","formatters","preAuthorizedDebitCanadaFormatters","storePaymentMethod","setStorePaymentMethod","isFormDisabled","componentRef","useRef","showValidation","useEffect","current","h","div","className","FormInstruction","Fieldset","Field","label","get","errorMessage","ownerName","name","InputText","disabled","placeholder","value","onInput","onBlur","required","data-testid","bankAccountNumber","contextualText","maxlength","classNameModifiers","bankCode","bankLocationId","StoreDetails","SettlementInfo","icon","imageFolder"],"mappings":"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"}