{"version":3,"file":"BankTransferInput.js","sources":["../../../../../../src/components/BankTransfer/components/BankTransferInput/BankTransferInput.tsx"],"sourcesContent":["import { h } from 'preact';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\nimport './BankTransferInput.scss';\nimport SendCopyToEmail from '../../../internal/SendCopyToEmail/SendCopyToEmail';\nimport { useEffect, useState } from 'preact/hooks';\nimport useForm from '../../../../utils/useForm';\nimport { BankTransferSchema } from '../../types';\nimport { validationRules } from '../../../../utils/Validator/defaultRules';\n\nfunction BankTransferInput(props) {\n    const { i18n } = useCoreContext();\n    const [showingEmail, setShowingEmail] = useState(false);\n\n    const { handleChangeFor, triggerValidation, data, valid, errors, isValid, setSchema } = useForm<BankTransferSchema>({\n        schema: [],\n        defaultData: props.data,\n        rules: {\n            shopperEmail: validationRules.emailRule\n        }\n    });\n\n    const toggleEmailField = () => setShowingEmail(!showingEmail);\n\n    useEffect(() => {\n        const newSchema = showingEmail ? ['shopperEmail'] : [];\n        setSchema(newSchema);\n    }, [showingEmail]);\n\n    this.showValidation = triggerValidation;\n\n    useEffect(() => {\n        props.onChange({ data, errors, valid, isValid });\n    }, [data, valid, errors, showingEmail, isValid]);\n\n    return (\n        <div className=\"adyen-checkout__bankTransfer\">\n            <p className=\"adyen-checkout__bankTransfer__introduction\">{i18n.get('bankTransfer.introduction')}</p>\n            <SendCopyToEmail\n                classNames={'adyen-checkout__bankTransfer__emailField'}\n                value={data.shopperEmail}\n                errors={errors.shopperEmail}\n                onToggle={toggleEmailField}\n                onInput={handleChangeFor('shopperEmail', 'input')}\n                onBlur={handleChangeFor('shopperEmail', 'blur')}\n            />\n        </div>\n    );\n}\n\nexport default BankTransferInput;\n"],"names":["BankTransferInput","props","i18n","useCoreContext","showingEmail","setShowingEmail","useState","handleChangeFor","triggerValidation","data","valid","errors","isValid","setSchema","useForm","schema","defaultData","rules","shopperEmail","validationRules","emailRule","useEffect","newSchema","this","showValidation","onChange","h","div","className","p","get","SendCopyToEmail","classNames","value","onToggle","onInput","onBlur"],"mappings":"qbASA,SAASA,EAAkBC,GACvB,MAAMC,KAAEA,GAASC,KACVC,EAAcC,GAAmBC,GAAS,IAE3CC,gBAAEA,EAAeC,kBAAEA,EAAiBC,KAAEA,EAAIC,MAAEA,EAAKC,OAAEA,EAAMC,QAAEA,EAAOC,UAAEA,GAAcC,EAA4B,CAChHC,OAAQ,GACRC,YAAaf,EAAMQ,KACnBQ,MAAO,CACHC,aAAcC,EAAgBC,aAiBtC,OAXAC,GAAU,KAENR,EADkBT,EAAe,CAAC,gBAAkB,GAC1CkB,GACX,CAAClB,IAEJmB,KAAKC,eAAiBhB,EAEtBa,GAAU,KACNpB,EAAMwB,SAAS,CAAEhB,OAAME,SAAQD,QAAOE,WAAQ,GAC/C,CAACH,EAAMC,EAAOC,EAAQP,EAAcQ,IAGnCc,EAACC,MAAAA,CAAIC,UAAU,gCACXF,EAACG,IAAAA,CAAED,UAAU,8CAA8C1B,EAAK4B,IAAI,8BACpEJ,EAACK,EAAAA,CACGC,WAAY,2CACZC,MAAOxB,EAAKS,aACZP,OAAQA,EAAOO,aACfgB,SApBa,IAAM7B,GAAiBD,GAqBpC+B,QAAS5B,EAAgB,eAAgB,SACzC6B,OAAQ7B,EAAgB,eAAgB,UAIxD"}