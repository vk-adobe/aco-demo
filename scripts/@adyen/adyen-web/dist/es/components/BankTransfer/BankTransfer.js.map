{"version":3,"file":"BankTransfer.js","sources":["../../../../src/components/BankTransfer/BankTransfer.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport RedirectButton from '../internal/RedirectButton';\nimport { BankTransferConfiguration, BankTransferState } from './types';\nimport BankTransferResult from './components/BankTransferResult';\nimport BankTransferInput from './components/BankTransferInput';\nimport { TxVariants } from '../tx-variants';\n\nexport class BankTransferElement extends UIElement<BankTransferConfiguration> {\n    public static type = TxVariants.bankTransfer_IBAN;\n\n    public static defaultProps = {\n        showEmailAddress: true\n    };\n\n    // @ts-ignore Double check why state extends all props\n    public state: BankTransferState = {\n        isValid: !this.props.showEmailAddress,\n        data: {}\n    };\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        const { shopperEmail } = this.state.data;\n\n        return {\n            paymentMethod: {\n                type: BankTransferElement.type\n            },\n            ...(shopperEmail && { shopperEmail })\n        };\n    }\n\n    private handleRef = ref => {\n        this.componentRef = ref;\n    };\n\n    render() {\n        if (this.props.reference) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <BankTransferResult ref={this.handleRef} {...this.props} onActionHandled={this.onActionHandled} />\n                </CoreProvider>\n            );\n        }\n\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.showEmailAddress && <BankTransferInput ref={this.handleRef} {...this.props} onChange={this.setState} />}\n                <RedirectButton\n                    {...this.props}\n                    showPayButton={this.props.showPayButton}\n                    name={this.displayName}\n                    onSubmit={this.submit}\n                    payButton={this.payButton}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default BankTransferElement;\n"],"names":["BankTransferElement","UIElement","isValid","this","state","formatData","shopperEmail","data","paymentMethod","type","render","props","reference","h","CoreProvider","i18n","loadingContext","resources","BankTransferResult","ref","handleRef","onActionHandled","showEmailAddress","BankTransferInput","onChange","setState","RedirectButton","showPayButton","name","displayName","onSubmit","submit","payButton","super","args","_define_property","componentRef","TxVariants","bankTransfer_IBAN","defaultProps"],"mappings":"ijBASO,MAAMA,UAA4BC,EAarC,WAAIC,GACA,QAASC,KAAKC,MAAMF,OACxB,CAKAG,UAAAA,GACI,MAAMC,aAAEA,GAAiBH,KAAKC,MAAMG,KAEpC,MAAO,CACHC,cAAe,CACXC,KAAMT,EAAoBS,SAE1BH,GAAgB,CAAEA,gBAE9B,CAMAI,MAAAA,GACI,OAAIP,KAAKQ,MAAMC,UAEPC,EAACC,EAAAA,CAAaC,KAAMZ,KAAKQ,MAAMI,KAAMC,eAAgBb,KAAKQ,MAAMK,eAAgBC,UAAWd,KAAKc,WAC5FJ,EAACK,EAAAA,CAAmBC,IAAKhB,KAAKiB,aAAejB,KAAKQ,MAAOU,gBAAiBlB,KAAKkB,mBAMvFR,EAACC,EAAAA,CAAaC,KAAMZ,KAAKQ,MAAMI,KAAMC,eAAgBb,KAAKQ,MAAMK,eAAgBC,UAAWd,KAAKc,WAC3Fd,KAAKQ,MAAMW,kBAAoBT,EAACU,EAAAA,CAAkBJ,IAAKhB,KAAKiB,aAAejB,KAAKQ,MAAOa,SAAUrB,KAAKsB,WACvGZ,EAACa,EAAAA,IACOvB,KAAKQ,MACTgB,cAAexB,KAAKQ,MAAMgB,cAC1BC,KAAMzB,KAAK0B,YACXC,SAAU3B,KAAK4B,OACfC,UAAW7B,KAAK6B,YAIhC,mBAxDGC,SAAAC,GAQHC,EAAAhC,KAAOC,QAA2B,CAC9BF,SAAUC,KAAKQ,MAAMW,iBACrBf,KAAM,CAAA,IAqBV4B,EAAAhC,KAAQiB,aAAYD,IAChBhB,KAAKiC,aAAejB,CAAAA,KA/BxBgB,EADSnC,EACKS,OAAO4B,EAAWC,mBAEhCH,EAHSnC,EAGKuC,eAAe,CACzBjB,kBAAkB"}