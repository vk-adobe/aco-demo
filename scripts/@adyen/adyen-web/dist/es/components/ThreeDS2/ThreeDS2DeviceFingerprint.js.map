{"version":3,"file":"ThreeDS2DeviceFingerprint.js","sources":["../../../../src/components/ThreeDS2/ThreeDS2DeviceFingerprint.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport PrepareFingerprint from './components/DeviceFingerprint';\nimport callSubmit3DS2Fingerprint from './callSubmit3DS2Fingerprint';\nimport { existy } from '../../utils/commonUtils';\nimport { TxVariants } from '../tx-variants';\nimport { ThreeDS2DeviceFingerprintConfiguration } from './types';\nimport AdyenCheckoutError, { API_ERROR } from '../../core/Errors/AdyenCheckoutError';\nimport { ANALYTICS_ERROR_TYPE, Analytics3DS2Errors, ANALYTICS_RENDERED_STR, Analytics3DS2Events } from '../../core/Analytics/constants';\nimport { THREEDS2_FINGERPRINT, THREEDS2_FINGERPRINT_ERROR, THREEDS2_FULL } from './constants';\nimport { ActionHandledReturnObject } from '../../types/global-types';\nimport { AnalyticsLogEvent } from '../../core/Analytics/AnalyticsLogEvent';\nimport { AnalyticsEvent } from '../../core/Analytics/AnalyticsEvent';\nimport { AnalyticsInfoEvent } from '../../core/Analytics/AnalyticsInfoEvent';\nimport { AnalyticsErrorEvent } from '../../core/Analytics/AnalyticsErrorEvent';\n\nclass ThreeDS2DeviceFingerprint extends UIElement<ThreeDS2DeviceFingerprintConfiguration> {\n    public static type = TxVariants.threeDS2Fingerprint;\n\n    public static defaultProps = {\n        dataKey: 'fingerprintResult',\n        type: THREEDS2_FINGERPRINT\n    };\n\n    private callSubmit3DS2Fingerprint = callSubmit3DS2Fingerprint.bind(this); // New 3DS2 flow\n\n    protected submitAnalytics = (aObj: AnalyticsEvent) => {\n        if (aObj instanceof AnalyticsInfoEvent && aObj.type === ANALYTICS_RENDERED_STR) return; // suppress the rendered event (it will have the same timestamp as the \"threeDSMethodData sent\" event)\n\n        super.submitAnalytics(aObj);\n    };\n\n    protected onActionHandled = (rtnObj: ActionHandledReturnObject) => {\n        const event = new AnalyticsLogEvent({\n            type: THREEDS2_FULL,\n            message: rtnObj.actionDescription,\n            subType: Analytics3DS2Events.FINGERPRINT_IFRAME_LOADED\n        });\n\n        this.submitAnalytics(event);\n\n        super.onActionHandled(rtnObj);\n    };\n\n    onComplete(state) {\n        super.onComplete(state);\n        this.unmount(); // re. fixing issue around back to back fingerprinting calls\n    }\n\n    render() {\n        /**\n         * In the regular components (aka \"native\") flow we can't proceed because something has gone wrong with the payment if paymentData is missing from the threeDS2 action.\n         * In the MDFlow the paymentData is always present (albeit an empty string, which is why we use 'existy' since we should be allowed to proceed with this)\n         */\n        if (!existy(this.props.paymentData)) {\n            this.props.onError(new AdyenCheckoutError(API_ERROR, `No paymentData received. 3DS2 Fingerprint cannot proceed`));\n\n            // TODO - check logs to see if this *ever* happens\n            const event = new AnalyticsErrorEvent({\n                code: Analytics3DS2Errors.ACTION_IS_MISSING_PAYMENT_DATA,\n                errorType: ANALYTICS_ERROR_TYPE.apiError,\n                message: `${THREEDS2_FINGERPRINT_ERROR}: Missing 'paymentData' property from threeDS2 action`\n            });\n\n            this.submitAnalytics(event);\n\n            return null;\n        }\n\n        /**\n         * this.props.isMDFlow indicates the action to create this component came from the 3DS2InMDFlow process and upon completion should call the\n         * passed onComplete callback (as defined in the 3DS2InMDFlow) instead of the /submitThreeDS2Fingerprint endpoint for the regular, \"native\" flow\n         */\n        return (\n            <PrepareFingerprint\n                {...this.props}\n                onComplete={this.props.isMDFlow ? this.onComplete : this.callSubmit3DS2Fingerprint}\n                onSubmitAnalytics={this.submitAnalytics}\n                isMDFlow={this.props.paymentData.length < 15}\n                onActionHandled={this.onActionHandled}\n            />\n        );\n    }\n}\n\nexport default ThreeDS2DeviceFingerprint;\n"],"names":["ThreeDS2DeviceFingerprint","UIElement","onComplete","state","super","this","unmount","render","existy","props","paymentData","onError","AdyenCheckoutError","API_ERROR","event","AnalyticsErrorEvent","code","Analytics3DS2Errors","ACTION_IS_MISSING_PAYMENT_DATA","errorType","ANALYTICS_ERROR_TYPE","apiError","message","THREEDS2_FINGERPRINT_ERROR","submitAnalytics","h","PrepareFingerprint","isMDFlow","callSubmit3DS2Fingerprint","onSubmitAnalytics","length","onActionHandled","args","_define_property","bind","aObj","AnalyticsInfoEvent","type","ANALYTICS_RENDERED_STR","rtnObj","AnalyticsLogEvent","THREEDS2_FULL","actionDescription","subType","Analytics3DS2Events","FINGERPRINT_IFRAME_LOADED","TxVariants","threeDS2Fingerprint","defaultProps","dataKey","THREEDS2_FINGERPRINT"],"mappings":"4gCAgBA,MAAMA,UAAkCC,EA4BpCC,UAAAA,CAAWC,GACPC,MAAMF,WAAWC,GACjBE,KAAKC,SACT,CAEAC,MAAAA,GAKI,IAAKC,EAAOH,KAAKI,MAAMC,aAAc,CACjCL,KAAKI,MAAME,QAAQ,IAAIC,EAAmBC,EAAW,6DAGrD,MAAMC,EAAQ,IAAIC,EAAoB,CAClCC,KAAMC,EAAoBC,+BAC1BC,UAAWC,EAAqBC,SAChCC,QAAS,GAAGC,2DAKhB,OAFAlB,KAAKmB,gBAAgBV,GAEd,IACX,CAMA,OACIW,EAACC,EAAAA,IACOrB,KAAKI,MACTP,WAAYG,KAAKI,MAAMkB,SAAWtB,KAAKH,WAAaG,KAAKuB,0BACzDC,kBAAmBxB,KAAKmB,gBACxBG,SAAUtB,KAAKI,MAAMC,YAAYoB,OAAS,GAC1CC,gBAAiB1B,KAAK0B,iBAGlC,mBAlEJ3B,SAAA4B,GAQIC,OAAQL,4BAA4BA,EAA0BM,KAAK7B,OAEnE4B,EAAA5B,KAAUmB,mBAAmBW,IACrBA,aAAgBC,GAAsBD,EAAKE,OAASC,GAExDlC,MAAMoB,gBAAgBW,EAAAA,IAG1BF,EAAA5B,KAAU0B,mBAAmBQ,IACzB,MAAMzB,EAAQ,IAAI0B,EAAkB,CAChCH,KAAMI,EACNnB,QAASiB,EAAOG,kBAChBC,QAASC,EAAoBC,4BAGjCxC,KAAKmB,gBAAgBV,GAErBV,MAAM2B,gBAAgBQ,EAAAA,KAxB1BN,EADEjC,EACYqC,OAAOS,EAAWC,qBAEhCd,EAHEjC,EAGYgD,eAAe,CACzBC,QAAS,oBACTZ,KAAMa"}