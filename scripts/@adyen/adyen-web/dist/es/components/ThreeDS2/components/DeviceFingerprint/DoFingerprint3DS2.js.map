{"version":3,"file":"DoFingerprint3DS2.js","sources":["../../../../../../src/components/ThreeDS2/components/DeviceFingerprint/DoFingerprint3DS2.tsx"],"sourcesContent":["import { Component, h } from 'preact';\nimport Iframe from '../../../internal/IFrame';\nimport Spinner from '../../../internal/Spinner';\nimport ThreeDS2Form from '../Form';\nimport promiseTimeout from '../../../../utils/promiseTimeout';\nimport getProcessMessageHandler from '../../../../utils/get-process-message-handler';\nimport { THREEDS_METHOD_TIMEOUT, FAILED_METHOD_STATUS_RESOLVE_OBJECT_TIMEOUT, THREEDS2_NUM } from '../../constants';\nimport { encodeBase64URL } from '../utils';\nimport { DoFingerprint3DS2Props, DoFingerprint3DS2State } from './types';\n\nconst iframeName = 'threeDSMethodIframe';\n\n/**\n * Create and Base64URL encode a JSON object containing the serverTransactionID & threeDSMethodNotificationURL.\n * This Base64URL string will be added to the <form> in the ThreeDS2Form component.\n * The ThreeDS2Form component will submit the <form> when it mounts, using the ThreeDS2Iframe as the <form> target.\n * getProcessMessageHandler will listen for the postMessage response from the notificationURL and will settle the\n * promise accordingly causing this component to call the appropriate callback.\n * The callbacks exist in the parent component: ThreeDS2DeviceFingerprint where they ultimately call the onComplete\n * function passed as a prop when checkout.create('threeDS2DeviceFingerprint') is called.\n */\nclass DoFingerprint3DS2 extends Component<DoFingerprint3DS2Props, DoFingerprint3DS2State> {\n    private processMessageHandler;\n    private fingerPrintPromise: any;\n    public static defaultProps = {\n        showSpinner: true\n    };\n\n    constructor(props) {\n        super(props);\n\n        /**\n         * Create and Base64URL encode a JSON object\n         */\n        const { threeDSServerTransID, threeDSMethodNotificationURL } = this.props;\n\n        const jsonStr = JSON.stringify({\n            threeDSServerTransID,\n            threeDSMethodNotificationURL\n        });\n        const base64URLencodedData = encodeBase64URL(jsonStr);\n        this.state = { base64URLencodedData };\n    }\n\n    get3DS2MethodPromise() {\n        return new Promise((resolve, reject) => {\n            /**\n             * Listen for postMessage responses from the notification url\n             */\n            this.processMessageHandler = getProcessMessageHandler(this.props.postMessageDomain, resolve, reject, 'fingerPrintResult');\n\n            window.addEventListener('message', this.processMessageHandler);\n        });\n    }\n\n    componentDidMount() {\n        // Check 3DS2 Device fingerprint\n        this.fingerPrintPromise = promiseTimeout(THREEDS_METHOD_TIMEOUT, this.get3DS2MethodPromise(), FAILED_METHOD_STATUS_RESOLVE_OBJECT_TIMEOUT);\n        this.fingerPrintPromise.promise\n            .then(resolveObject => {\n                window.removeEventListener('message', this.processMessageHandler);\n                this.props.onCompleteFingerprint(resolveObject);\n            })\n            .catch(rejectObject => {\n                window.removeEventListener('message', this.processMessageHandler);\n                this.props.onErrorFingerprint(rejectObject);\n            });\n    }\n\n    componentWillUnmount() {\n        if (this.fingerPrintPromise) this.fingerPrintPromise.cancel();\n        window.removeEventListener('message', this.processMessageHandler);\n    }\n\n    render({ threeDSMethodURL, onActionHandled, onFormSubmit }, { base64URLencodedData }) {\n        return (\n            <div className=\"adyen-checkout__3ds2-device-fingerprint\">\n                {this.props.showSpinner && <Spinner />}\n                <div style={{ display: 'none' }}>\n                    <Iframe\n                        name={iframeName}\n                        callback={() => {\n                            onActionHandled?.({ componentType: '3DS2Fingerprint', actionDescription: `${THREEDS2_NUM} fingerprint iframe loaded` });\n                        }}\n                    />\n                    <ThreeDS2Form\n                        name={'threeDSMethodForm'}\n                        action={threeDSMethodURL}\n                        target={iframeName}\n                        inputName={'threeDSMethodData'}\n                        inputValue={base64URLencodedData}\n                        onFormSubmit={onFormSubmit}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DoFingerprint3DS2;\n"],"names":["iframeName","DoFingerprint3DS2","Component","get3DS2MethodPromise","Promise","resolve","reject","this","processMessageHandler","getProcessMessageHandler","props","postMessageDomain","window","addEventListener","componentDidMount","fingerPrintPromise","promiseTimeout","THREEDS_METHOD_TIMEOUT","FAILED_METHOD_STATUS_RESOLVE_OBJECT_TIMEOUT","promise","then","resolveObject","removeEventListener","onCompleteFingerprint","catch","rejectObject","onErrorFingerprint","componentWillUnmount","cancel","render","threeDSMethodURL","onActionHandled","onFormSubmit","base64URLencodedData","h","div","className","showSpinner","Spinner","style","display","Iframe","name","callback","componentType","actionDescription","THREEDS2_NUM","ThreeDS2Form","action","target","inputName","inputValue","constructor","super","_define_property","threeDSServerTransID","threeDSMethodNotificationURL","jsonStr","JSON","stringify","encodeBase64URL","state","defaultProps"],"mappings":"+nBAUA,MAAMA,EAAa,sBAWnB,MAAMC,UAA0BC,EAuB5BC,oBAAAA,GACI,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAIzBC,KAAKC,sBAAwBC,EAAyBF,KAAKG,MAAMC,kBAAmBN,EAASC,EAAQ,qBAErGM,OAAOC,iBAAiB,UAAWN,KAAKC,sBAAqB,GAErE,CAEAM,iBAAAA,GAEIP,KAAKQ,mBAAqBC,EAAeC,EAAwBV,KAAKJ,uBAAwBe,GAC9FX,KAAKQ,mBAAmBI,QACnBC,MAAKC,IACFT,OAAOU,oBAAoB,UAAWf,KAAKC,uBAC3CD,KAAKG,MAAMa,sBAAsBF,EAAAA,IAEpCG,OAAMC,IACHb,OAAOU,oBAAoB,UAAWf,KAAKC,uBAC3CD,KAAKG,MAAMgB,mBAAmBD,EAAAA,GAE1C,CAEAE,oBAAAA,GACQpB,KAAKQ,oBAAoBR,KAAKQ,mBAAmBa,SACrDhB,OAAOU,oBAAoB,UAAWf,KAAKC,sBAC/C,CAEAqB,MAAAA,EAAOC,iBAAEA,EAAgBC,gBAAEA,EAAeC,aAAEA,IAAgBC,qBAAEA,IAC1D,OACIC,EAACC,MAAAA,CAAIC,UAAU,2CACV7B,KAAKG,MAAM2B,aAAeH,EAACI,QAC5BJ,EAACC,MAAAA,CAAII,MAAO,CAAEC,QAAS,SACnBN,EAACO,EAAAA,CACGC,KAAM1C,EACN2C,SAAU,KACNZ,IAAkB,CAAEa,cAAe,kBAAmBC,kBAAmB,GAAGC,+BAAyC,IAG7HZ,EAACa,EAAAA,CACGL,KAAM,oBACNM,OAAQlB,EACRmB,OAAQjD,EACRkD,UAAW,oBACXC,WAAYlB,EACZD,aAAcA,KAKlC,CApEAoB,WAAAA,CAAY1C,GACR2C,MAAM3C,GAPV4C,EAAQ9C,KAAAA,6BAAR,GACA8C,EAAA/C,KAAQQ,0BAAR,GAWI,MAAMwC,qBAAEA,EAAoBC,6BAAEA,GAAiCjD,KAAKG,MAE9D+C,EAAUC,KAAKC,UAAU,CAC3BJ,uBACAC,iCAEEvB,EAAuB2B,EAAgBH,GAC7ClD,KAAKsD,MAAQ,CAAE5B,uBACnB,EAlBAqB,EAHErD,EAGY6D,eAAe,CACzBzB,aAAa"}