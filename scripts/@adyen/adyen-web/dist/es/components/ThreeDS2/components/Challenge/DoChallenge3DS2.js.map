{"version":3,"file":"DoChallenge3DS2.js","sources":["../../../../../../src/components/ThreeDS2/components/Challenge/DoChallenge3DS2.tsx"],"sourcesContent":["import { Component, h } from 'preact';\nimport classNames from 'classnames';\nimport Iframe from '../../../internal/IFrame';\nimport Spinner from '../../../internal/Spinner';\nimport ThreeDS2Form from '../Form';\nimport getProcessMessageHandler from '../../../../utils/get-process-message-handler';\nimport { encodeBase64URL } from '../utils';\nimport promiseTimeout from '../../../../utils/promiseTimeout';\nimport { CHALLENGE_TIMEOUT, CHALLENGE_TIMEOUT_REJECT_OBJECT, THREEDS2_NUM } from '../../constants';\nimport { DoChallenge3DS2Props, DoChallenge3DS2State } from './types';\nimport { ThreeDS2FlowObject } from '../../types';\n\nconst iframeName = 'threeDSIframe';\n\nclass DoChallenge3DS2 extends Component<DoChallenge3DS2Props, DoChallenge3DS2State> {\n    private processMessageHandler;\n    private challengePromise: { cancel: () => void; promise: Promise<any> };\n\n    constructor(props) {\n        super(props);\n\n        /**\n         * Create and Base64Url encode a JSON object containing the serverTransactionID & threeDSMethodNotificationURL\n         */\n        const jsonStr = JSON.stringify(this.props.cReqData);\n        const base64URLencodedData = encodeBase64URL(jsonStr);\n        this.state = { base64URLencodedData, status: 'init' };\n    }\n\n    private iframeCallback = () => {\n        this.setState({ status: 'iframeLoaded' });\n        // On Test - actually calls-back 3 times: once for challenge screen, once again as challenge.html reloads after the challenge is submitted, and once for redirect to threeDSNotificationURL.\n        // But for the purposes of calling the merchant defined onActionHandled callback - we only want to do it once\n        if (this.state.status === 'init') {\n            this.props.onActionHandled?.({ componentType: '3DS2Challenge', actionDescription: `${THREEDS2_NUM} challenge iframe loaded` });\n        }\n    };\n\n    private get3DS2ChallengePromise(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            /**\n             * Listen for postMessage responses from the notification url\n             */\n            this.processMessageHandler = getProcessMessageHandler(this.props.postMessageDomain, resolve, reject, 'challengeResult');\n\n            window.addEventListener('message', this.processMessageHandler);\n        });\n    }\n\n    componentDidMount() {\n        // Render challenge\n        this.challengePromise = promiseTimeout(CHALLENGE_TIMEOUT, this.get3DS2ChallengePromise(), CHALLENGE_TIMEOUT_REJECT_OBJECT);\n        this.challengePromise.promise\n            .then((resolveObject: ThreeDS2FlowObject) => {\n                window.removeEventListener('message', this.processMessageHandler);\n                this.props.onCompleteChallenge(resolveObject);\n            })\n            /** Catch, for when Challenge times-out */\n            .catch((rejectObject: ThreeDS2FlowObject) => {\n                window.removeEventListener('message', this.processMessageHandler);\n                this.props.onErrorChallenge(rejectObject);\n            });\n    }\n\n    componentWillUnmount() {\n        if (this.challengePromise) this.challengePromise.cancel();\n        window.removeEventListener('message', this.processMessageHandler);\n    }\n\n    render({ acsURL, cReqData, iframeSizeArr, onFormSubmit }, { base64URLencodedData, status }) {\n        const [width, height] = iframeSizeArr;\n\n        return (\n            <div\n                className={classNames([\n                    'adyen-checkout__threeds2__challenge',\n                    `adyen-checkout__threeds2__challenge--${cReqData.challengeWindowSize}`\n                ])}\n            >\n                {status !== 'iframeLoaded' && <Spinner />}\n\n                <Iframe name={iframeName} width={width} height={height} callback={this.iframeCallback} />\n                <ThreeDS2Form\n                    name={'cReqForm'}\n                    action={acsURL}\n                    target={iframeName}\n                    inputName={'creq'}\n                    inputValue={base64URLencodedData}\n                    onFormSubmit={onFormSubmit}\n                />\n            </div>\n        );\n    }\n}\n\nexport default DoChallenge3DS2;\n"],"names":["iframeName","DoChallenge3DS2","Component","get3DS2ChallengePromise","Promise","resolve","reject","this","processMessageHandler","getProcessMessageHandler","props","postMessageDomain","window","addEventListener","componentDidMount","challengePromise","promiseTimeout","CHALLENGE_TIMEOUT","CHALLENGE_TIMEOUT_REJECT_OBJECT","promise","then","resolveObject","removeEventListener","onCompleteChallenge","catch","rejectObject","onErrorChallenge","componentWillUnmount","cancel","render","acsURL","cReqData","iframeSizeArr","onFormSubmit","base64URLencodedData","status","width","height","h","div","className","classNames","challengeWindowSize","Spinner","Iframe","name","callback","iframeCallback","ThreeDS2Form","action","target","inputName","inputValue","constructor","super","_define_property","setState","state","onActionHandled","componentType","actionDescription","THREEDS2_NUM","jsonStr","JSON","stringify","encodeBase64URL"],"mappings":"2pBAYA,MAAMA,EAAa,gBAEnB,MAAMC,UAAwBC,EAwBlBC,uBAAAA,GACJ,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAIzBC,KAAKC,sBAAwBC,EAAyBF,KAAKG,MAAMC,kBAAmBN,EAASC,EAAQ,mBAErGM,OAAOC,iBAAiB,UAAWN,KAAKC,sBAAqB,GAErE,CAEAM,iBAAAA,GAEIP,KAAKQ,iBAAmBC,EAAeC,EAAmBV,KAAKJ,0BAA2Be,GAC1FX,KAAKQ,iBAAiBI,QACjBC,MAAMC,IACHT,OAAOU,oBAAoB,UAAWf,KAAKC,uBAC3CD,KAAKG,MAAMa,oBAAoBF,EAAAA,IAGlCG,OAAOC,IACJb,OAAOU,oBAAoB,UAAWf,KAAKC,uBAC3CD,KAAKG,MAAMgB,iBAAiBD,EAAAA,GAExC,CAEAE,oBAAAA,GACQpB,KAAKQ,kBAAkBR,KAAKQ,iBAAiBa,SACjDhB,OAAOU,oBAAoB,UAAWf,KAAKC,sBAC/C,CAEAqB,MAAAA,EAAOC,OAAEA,EAAMC,SAAEA,EAAQC,cAAEA,EAAaC,aAAEA,IAAgBC,qBAAEA,EAAoBC,OAAEA,IAC9E,MAAOC,EAAOC,GAAUL,EAExB,OACIM,EAACC,MAAAA,CACGC,UAAWC,EAAW,CAClB,sCACA,wCAAwCV,EAASW,yBAGzC,iBAAXP,GAA6BG,EAACK,EAAAA,MAE/BL,EAACM,EAAAA,CAAOC,KAAM7C,EAAYoC,MAAOA,EAAOC,OAAQA,EAAQS,SAAUvC,KAAKwC,iBACvET,EAACU,EAAAA,CACGH,KAAM,WACNI,OAAQnB,EACRoB,OAAQlD,EACRmD,UAAW,OACXC,WAAYlB,EACZD,aAAcA,IAI9B,CA1EAoB,WAAAA,CAAY3C,GACR4C,MAAM5C,GAJV6C,EAAAhD,KAAQC,6BAAR,GACA+C,EAAAhD,KAAQQ,wBAAR,GAaAwC,EAAAhD,KAAQwC,kBAAiB,KACrBxC,KAAKiD,SAAS,CAAErB,OAAQ,iBAGE,SAAtB5B,KAAKkD,MAAMtB,QACX5B,KAAKG,MAAMgD,kBAAkB,CAAEC,cAAe,gBAAiBC,kBAAmB,GAAGC,6BACzF,IAXA,MAAMC,EAAUC,KAAKC,UAAUzD,KAAKG,MAAMqB,UACpCG,EAAuB+B,EAAgBH,GAC7CvD,KAAKkD,MAAQ,CAAEvB,uBAAsBC,OAAQ,OACjD"}