{"version":3,"file":"UPIComponent.js","sources":["../../../../../../src/components/UPI/components/UPIComponent/UPIComponent.tsx"],"sourcesContent":["import { Fragment, h, RefObject } from 'preact';\nimport { useCallback, useEffect, useState } from 'preact/hooks';\nimport { PayButtonFunctionProps, UIElementStatus } from '../../../types';\nimport VpaInput, { VpaInputHandlers } from '../VpaInput/VpaInput';\nimport { App, UpiMode } from '../../types';\nimport useImage from '../../../../core/Context/useImage';\nimport useUpiSegmentedControlOptions from './useUpiSegmentedControlOptions';\nimport { A11Y } from './constants';\nimport './UPIComponent.scss';\nimport SegmentedControl from '../../../internal/SegmentedControl';\nimport ContentSeparator from '../../../internal/ContentSeparator';\nimport UPIIntentAppList from '../UPIIntentAppList';\nimport { useCoreContext } from '../../../../core/Context/CoreProvider';\n\ntype UpiData = { app?: App; virtualPaymentAddress?: string };\n\ntype OnChangeProps = { data: UpiData; valid; errors; isValid: boolean };\n\ninterface UPIComponentProps {\n    defaultMode: UpiMode;\n    showPayButton: boolean;\n    apps?: Array<App>;\n\n    ref?(ref: RefObject<typeof UPIComponent>): void;\n\n    payButton?(props: PayButtonFunctionProps): h.JSX.Element;\n\n    onChange({ data, valid, errors, isValid }: OnChangeProps): void;\n\n    onUpdateMode?(mode: UpiMode): void;\n}\n\nexport default function UPIComponent({ defaultMode, onChange, onUpdateMode, payButton, showPayButton, apps = [] }: UPIComponentProps): h.JSX.Element {\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const [status, setStatus] = useState<UIElementStatus>('ready');\n    const [isValid, setIsValid] = useState<boolean>(defaultMode === 'qrCode');\n    const [mode, setMode] = useState<UpiMode>(defaultMode);\n    const [vpa, setVpa] = useState<string>('');\n    const [vpaInputHandlers, setVpaInputHandlers] = useState<VpaInputHandlers>(null);\n    const [selectedApp, setSelectedApp] = useState<App>(null);\n    const [valid, setValid] = useState(null);\n    const [errors, setErrors] = useState(null);\n    const segmentedControlOptions = useUpiSegmentedControlOptions(apps, mode);\n\n    this.setStatus = (status: UIElementStatus) => {\n        setStatus(status);\n    };\n\n    this.showValidation = () => {\n        vpaInputHandlers?.validateInput();\n    };\n\n    const onSetVpaInputHandlers = useCallback((handlers: VpaInputHandlers) => {\n        setVpaInputHandlers(handlers);\n    }, []);\n\n    const onChangeUpiMode = useCallback(\n        (newMode: UpiMode) => {\n            setMode(newMode);\n            onUpdateMode(newMode);\n        },\n        [onUpdateMode]\n    );\n\n    const handleAppSelect = useCallback(\n        (app: App) => {\n            if (app?.id === selectedApp?.id) return;\n\n            setSelectedApp(app);\n            setIsValid(true);\n        },\n        [selectedApp]\n    );\n\n    const handleVpaInputChange = useCallback(({ data: { virtualPaymentAddress }, errors, valid, isValid }: OnChangeProps) => {\n        setVpa(virtualPaymentAddress);\n        setErrors(errors);\n        setValid(valid);\n        setIsValid(isValid);\n    }, []);\n\n    useEffect(() => {\n        if (mode !== 'qrCode') {\n            onChange({\n                data: { ...(vpa && { virtualPaymentAddress: vpa }), ...(selectedApp && { app: selectedApp }) },\n                errors,\n                valid,\n                isValid\n            });\n        } else {\n            /**\n             * When selecting QR code mode, we need to clear the state data and trigger the 'onChange'.\n             */\n            onChange({ data: {}, valid: {}, errors: {}, isValid: true });\n        }\n    }, [vpa, selectedApp, errors, valid, isValid, mode]);\n\n    return (\n        <Fragment>\n            <p className=\"adyen-checkout_upi-mode-selection-text\">{i18n.get('upi.modeSelection')}</p>\n            <SegmentedControl\n                onChange={onChangeUpiMode}\n                selectedValue={mode}\n                disabled={status === 'loading'}\n                classNameModifiers={['upi-margin-bottom']}\n                options={segmentedControlOptions}\n            />\n            <ContentSeparator label={i18n.get('upi.completePayment')} />\n            {mode === 'intent' && (\n                <div id={A11Y.AreaId.INTENT} aria-labelledby={A11Y.ButtonId.INTENT} className=\"adyen-checkout-upi-area-intent\" role=\"region\">\n                    <UPIIntentAppList\n                        disabled={status === 'loading'}\n                        apps={apps}\n                        selectedAppId={selectedApp?.id}\n                        onAppSelect={handleAppSelect}\n                        onVpaInputChange={handleVpaInputChange}\n                        onSetInputHandlers={onSetVpaInputHandlers}\n                    />\n\n                    {showPayButton &&\n                        payButton({\n                            label: i18n.get('continue'),\n                            status,\n                            disabled: selectedApp == null\n                        })}\n                </div>\n            )}\n            {mode === 'vpa' && (\n                <div id={A11Y.AreaId.VPA} aria-labelledby={A11Y.ButtonId.VPA} className=\"adyen-checkout-upi-area-vpa\" role=\"region\">\n                    <VpaInput disabled={status === 'loading'} onChange={onChange} onSetInputHandlers={onSetVpaInputHandlers} />\n\n                    {showPayButton &&\n                        payButton({\n                            label: i18n.get('continue'),\n                            status\n                        })}\n                </div>\n            )}\n            {mode === 'qrCode' && (\n                <div id={A11Y.AreaId.QR} aria-labelledby={A11Y.ButtonId.QR} className=\"adyen-checkout-upi-area-qr-code\" role=\"region\">\n                    {showPayButton &&\n                        payButton({\n                            label: i18n.get('generateQRCode'),\n                            icon: getImage({ imageFolder: 'components/' })('qr'),\n                            status\n                        })}\n                </div>\n            )}\n        </Fragment>\n    );\n}\n"],"names":["UPIComponent","defaultMode","onChange","onUpdateMode","payButton","showPayButton","apps","i18n","useCoreContext","getImage","useImage","status","setStatus","useState","isValid","setIsValid","mode","setMode","vpa","setVpa","vpaInputHandlers","setVpaInputHandlers","selectedApp","setSelectedApp","valid","setValid","errors","setErrors","segmentedControlOptions","useUpiSegmentedControlOptions","this","showValidation","validateInput","onSetVpaInputHandlers","useCallback","handlers","onChangeUpiMode","newMode","handleAppSelect","app","id","handleVpaInputChange","data","virtualPaymentAddress","useEffect","h","Fragment","p","className","get","SegmentedControl","selectedValue","disabled","classNameModifiers","options","ContentSeparator","label","div","A11Y","AreaId","INTENT","aria-labelledby","ButtonId","role","UPIIntentAppList","selectedAppId","onAppSelect","onVpaInputChange","onSetInputHandlers","VPA","VpaInput","QR","icon","imageFolder"],"mappings":"ooBAgCe,SAASA,GAAaC,YAAEA,EAAWC,SAAEA,EAAQC,aAAEA,EAAYC,UAAEA,EAASC,cAAEA,EAAaC,KAAEA,EAAO,KACzG,MAAMC,KAAEA,GAASC,IACXC,EAAWC,KACVC,EAAQC,GAAaC,EAA0B,UAC/CC,EAASC,GAAcF,EAAkC,WAAhBZ,IACzCe,EAAMC,GAAWJ,EAAkBZ,IACnCiB,EAAKC,GAAUN,EAAiB,KAChCO,EAAkBC,GAAuBR,EAA2B,OACpES,EAAaC,GAAkBV,EAAc,OAC7CW,EAAOC,GAAYZ,EAAS,OAC5Ba,EAAQC,GAAad,EAAS,MAC/Be,EAA0BC,EAA8BvB,EAAMU,GAEpEc,KAAKlB,UAAaD,IACdC,EAAUD,EAAAA,EAGdmB,KAAKC,eAAiB,KAClBX,GAAkBY,eAAAA,EAGtB,MAAMC,EAAwBC,GAAaC,IACvCd,EAAoBc,EAAAA,GACrB,IAEGC,EAAkBF,GACnBG,IACGpB,EAAQoB,GACRlC,EAAakC,EAAAA,GAEjB,CAAClC,IAGCmC,EAAkBJ,GACnBK,IACOA,GAAKC,KAAOlB,GAAakB,KAE7BjB,EAAegB,GACfxB,GAAW,GAAA,GAEf,CAACO,IAGCmB,EAAuBP,GAAY,EAAGQ,MAAQC,yBAAyBjB,SAAQF,QAAOV,cACxFK,EAAOwB,GACPhB,EAAUD,GACVD,EAASD,GACTT,EAAWD,EAAAA,GACZ,IAkBH,OAhBA8B,GAAU,KAEF1C,EADS,WAATc,EACS,CACL0B,KAAM,IAAMxB,GAAO,CAAEyB,sBAAuBzB,MAAYI,GAAe,CAAEiB,IAAKjB,IAC9EI,SACAF,QACAV,WAMK,CAAE4B,KAAM,CAAC,EAAGlB,MAAO,CAAC,EAAGE,OAAQ,CAAC,EAAGZ,SAAS,GACzD,GACD,CAACI,EAAKI,EAAaI,EAAQF,EAAOV,EAASE,IAG1C6B,EAACC,OACGD,EAACE,IAAAA,CAAEC,UAAU,0CAA0CzC,EAAK0C,IAAI,sBAChEJ,EAACK,EAAAA,CACGhD,SAAUkC,EACVe,cAAenC,EACfoC,SAAqB,YAAXzC,EACV0C,mBAAoB,CAAC,qBACrBC,QAAS1B,IAEbiB,EAACU,EAAAA,CAAiBC,MAAOjD,EAAK0C,IAAI,yBACxB,WAATjC,GACG6B,EAACY,MAAAA,CAAIjB,GAAIkB,EAAKC,OAAOC,OAAQC,kBAAiBH,EAAKI,SAASF,OAAQZ,UAAU,iCAAiCe,KAAK,UAChHlB,EAACmB,EAAAA,CACGZ,SAAqB,YAAXzC,EACVL,KAAMA,EACN2D,cAAe3C,GAAakB,GAC5B0B,YAAa5B,EACb6B,iBAAkB1B,EAClB2B,mBAAoBnC,IAGvB5B,GACGD,EAAU,CACNoD,MAAOjD,EAAK0C,IAAI,YAChBtC,SACAyC,SAAyB,MAAf9B,KAIhB,QAATN,GACG6B,EAACY,MAAAA,CAAIjB,GAAIkB,EAAKC,OAAOU,IAAKR,kBAAiBH,EAAKI,SAASO,IAAKrB,UAAU,8BAA8Be,KAAK,UACvGlB,EAACyB,EAAAA,CAASlB,SAAqB,YAAXzC,EAAsBT,SAAUA,EAAUkE,mBAAoBnC,IAEjF5B,GACGD,EAAU,CACNoD,MAAOjD,EAAK0C,IAAI,YAChBtC,YAIN,WAATK,GACG6B,EAACY,MAAAA,CAAIjB,GAAIkB,EAAKC,OAAOY,GAAIV,kBAAiBH,EAAKI,SAASS,GAAIvB,UAAU,kCAAkCe,KAAK,UACxG1D,GACGD,EAAU,CACNoD,MAAOjD,EAAK0C,IAAI,kBAChBuB,KAAM/D,EAAS,CAAEgE,YAAa,eAAxBhE,CAAyC,MAC/CE,YAM5B"}