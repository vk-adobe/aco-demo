{"version":3,"file":"CardFieldsWrapper.js","sources":["../../../../../../../src/components/Card/components/CardInput/components/CardFieldsWrapper.tsx"],"sourcesContent":["import { h } from 'preact';\nimport LoadingWrapper from '../../../../internal/LoadingWrapper';\nimport CardFields from './CardFields';\nimport KCPAuthentication from './KCPAuthentication';\nimport SocialSecurityNumberBrazil from '../../../../internal/SocialSecurityNumberBrazil/SocialSecurityNumberBrazil';\nimport StoreDetails from '../../../../internal/StoreDetails';\nimport Address from '../../../../internal/Address';\nimport CardHolderName from './CardHolderName';\nimport Installments from './Installments';\nimport DisclaimerMessage from '../../../../internal/DisclaimerMessage';\nimport RadioGroupExtended from '../../../../internal/FormFields/RadioGroupExtended';\nimport { mapDualBrandButtons } from '../utils';\nimport Fieldset from '../../../../internal/FormFields/Fieldset';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\n\nexport const CardFieldsWrapper = ({\n    // vars created in CardInput:\n    // base (shared)\n    data,\n    valid,\n    errors,\n    handleChangeFor,\n    sfpState,\n    setFocusOn,\n    cvcPolicy,\n    focusedElement,\n    hasInstallments,\n    handleInstallments,\n    showAmountsInInstallments,\n    // Card\n    brandsIcons,\n    formData,\n    formErrors,\n    formValid,\n    expiryDatePolicy,\n    dualBrandSelectElements,\n    extensions,\n    selectedBrandValue,\n    // KCP\n    showKCP,\n    // SSN\n    showBrazilianSSN,\n    socialSecurityNumber,\n    // Store details\n    handleOnStoreDetails,\n    // Address\n    billingAddress,\n    handleAddress,\n    setAddressRef,\n    partialAddressSchema,\n    onAddressLookup,\n    onAddressSelected,\n    addressSearchDebounceMs,\n    // For this comp (props passed through from CardInput)\n    amount,\n    billingAddressRequired,\n    billingAddressRequiredFields,\n    billingAddressAllowedCountries,\n    billingAddressValidationRules = null,\n    brandsConfiguration,\n    showStoreDetailsCheckbox,\n    hasCVC,\n    hasHolderName,\n    holderNameRequired,\n    installmentOptions,\n    placeholders,\n    positionHolderNameOnTop,\n    // For CardFields > CardNumber\n    showBrandIcon,\n    showContextualElement,\n    //\n    iOSFocusedField,\n    disclaimerMessage,\n    //\n    onFieldFocusAnalytics,\n    onFieldBlurAnalytics\n}) => {\n    const { i18n } = useCoreContext();\n\n    const cardHolderField = (\n        <CardHolderName\n            required={holderNameRequired}\n            placeholder={placeholders.holderName}\n            value={formData.holderName}\n            error={!!formErrors.holderName && holderNameRequired}\n            isValid={!!formValid.holderName}\n            onBlur={handleChangeFor('holderName', 'blur')}\n            onInput={handleChangeFor('holderName', 'input')}\n            disabled={iOSFocusedField && iOSFocusedField !== 'holderName'}\n            onFieldFocusAnalytics={onFieldFocusAnalytics}\n            onFieldBlurAnalytics={onFieldBlurAnalytics}\n        />\n    );\n\n    return (\n        <LoadingWrapper status={sfpState.status}>\n            {hasHolderName && positionHolderNameOnTop && cardHolderField}\n\n            <CardFields\n                showBrandIcon={showBrandIcon}\n                showContextualElement={showContextualElement}\n                brand={sfpState.brand}\n                brandsIcons={brandsIcons}\n                brandsConfiguration={brandsConfiguration}\n                focusedElement={focusedElement}\n                onFocusField={setFocusOn}\n                hasCVC={hasCVC}\n                cvcPolicy={cvcPolicy}\n                expiryDatePolicy={expiryDatePolicy}\n                errors={sfpState.errors}\n                valid={sfpState.valid}\n                dualBrandingElements={dualBrandSelectElements.length > 0 && dualBrandSelectElements}\n            />\n\n            {hasHolderName && !positionHolderNameOnTop && cardHolderField}\n\n            {dualBrandSelectElements.length > 0 && dualBrandSelectElements && (\n                <Fieldset classNameModifiers={['dual-brand-switcher']} label={i18n.get('creditCard.dualBrand.title')}>\n                    <p className={'adyen-checkout-form-instruction'}>{i18n.get('creditCard.dualBrand.description')}</p>\n                    <RadioGroupExtended\n                        name={'dualBrandSwitcher'}\n                        value={selectedBrandValue} // Set which button is in a selected (checked) state\n                        items={mapDualBrandButtons(dualBrandSelectElements, brandsConfiguration)}\n                        onChange={extensions.handleDualBrandSelection}\n                        required={true}\n                        showSelectedTick={true}\n                    />\n                </Fieldset>\n            )}\n\n            {showKCP && (\n                <KCPAuthentication\n                    onFocusField={setFocusOn}\n                    focusedElement={focusedElement}\n                    encryptedPasswordState={{\n                        data: sfpState.encryptedPassword,\n                        valid: sfpState.valid ? sfpState.valid.encryptedPassword : false,\n                        errors: sfpState.errors ? sfpState.errors.encryptedPassword : false\n                    }}\n                    value={data.taxNumber}\n                    error={!!errors.taxNumber}\n                    isValid={!!valid.taxNumber}\n                    onBlur={handleChangeFor('taxNumber', 'blur')}\n                    onInput={handleChangeFor('taxNumber', 'input')}\n                    disabled={iOSFocusedField && iOSFocusedField !== 'kcpTaxNumberOrDOB'}\n                    placeholder={placeholders.taxNumber}\n                    onFieldFocusAnalytics={onFieldFocusAnalytics}\n                    onFieldBlurAnalytics={onFieldBlurAnalytics}\n                />\n            )}\n\n            {showBrazilianSSN && (\n                <div className=\"adyen-checkout__card__socialSecurityNumber\">\n                    <SocialSecurityNumberBrazil\n                        onBlur={handleChangeFor('socialSecurityNumber', 'blur')}\n                        onInput={handleChangeFor('socialSecurityNumber', 'input')}\n                        error={errors?.socialSecurityNumber}\n                        valid={valid?.socialSecurityNumber}\n                        data={socialSecurityNumber}\n                        required={true}\n                        disabled={iOSFocusedField && iOSFocusedField !== 'socialSecurityNumber'}\n                        onFieldFocusAnalytics={onFieldFocusAnalytics}\n                        onFieldBlurAnalytics={onFieldBlurAnalytics}\n                    />\n                </div>\n            )}\n\n            {showStoreDetailsCheckbox && <StoreDetails onChange={handleOnStoreDetails} />}\n\n            {hasInstallments && (\n                <Installments\n                    amount={amount}\n                    brand={sfpState.brand}\n                    installmentOptions={installmentOptions}\n                    onChange={handleInstallments}\n                    type={showAmountsInInstallments ? 'amount' : 'months'}\n                />\n            )}\n\n            {billingAddressRequired && (\n                <Address\n                    label=\"billingAddress\"\n                    data={billingAddress}\n                    onChange={handleAddress}\n                    allowedCountries={billingAddressAllowedCountries}\n                    requiredFields={billingAddressRequiredFields}\n                    setComponentRef={setAddressRef}\n                    validationRules={billingAddressValidationRules}\n                    specifications={partialAddressSchema}\n                    iOSFocusedField={iOSFocusedField}\n                    onAddressLookup={onAddressLookup}\n                    showContextualElement={showContextualElement}\n                    onAddressSelected={onAddressSelected}\n                    addressSearchDebounceMs={addressSearchDebounceMs}\n                    onFieldFocusAnalytics={onFieldFocusAnalytics}\n                    onFieldBlurAnalytics={onFieldBlurAnalytics}\n                />\n            )}\n\n            {disclaimerMessage && (\n                <DisclaimerMessage\n                    message={disclaimerMessage.message.replace('%{linkText}', `%#${disclaimerMessage.linkText}%#`)}\n                    urls={[disclaimerMessage.link]}\n                />\n            )}\n        </LoadingWrapper>\n    );\n};\n"],"names":["CardFieldsWrapper","data","valid","errors","handleChangeFor","sfpState","setFocusOn","cvcPolicy","focusedElement","hasInstallments","handleInstallments","showAmountsInInstallments","brandsIcons","formData","formErrors","formValid","expiryDatePolicy","dualBrandSelectElements","extensions","selectedBrandValue","showKCP","showBrazilianSSN","socialSecurityNumber","handleOnStoreDetails","billingAddress","handleAddress","setAddressRef","partialAddressSchema","onAddressLookup","onAddressSelected","addressSearchDebounceMs","amount","billingAddressRequired","billingAddressRequiredFields","billingAddressAllowedCountries","billingAddressValidationRules","brandsConfiguration","showStoreDetailsCheckbox","hasCVC","hasHolderName","holderNameRequired","installmentOptions","placeholders","positionHolderNameOnTop","showBrandIcon","showContextualElement","iOSFocusedField","disclaimerMessage","onFieldFocusAnalytics","onFieldBlurAnalytics","i18n","useCoreContext","cardHolderField","h","CardHolderName","required","placeholder","holderName","value","error","isValid","onBlur","onInput","disabled","LoadingWrapper","status","CardFields","brand","onFocusField","dualBrandingElements","length","Fieldset","classNameModifiers","label","get","p","className","RadioGroupExtended","name","items","mapDualBrandButtons","onChange","handleDualBrandSelection","showSelectedTick","KCPAuthentication","encryptedPasswordState","encryptedPassword","taxNumber","div","SocialSecurityNumberBrazil","StoreDetails","Installments","type","Address","allowedCountries","requiredFields","setComponentRef","validationRules","specifications","DisclaimerMessage","message","replace","linkText","urls","link"],"mappings":"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"}