{"version":3,"file":"OpenInvoiceContainer.js","sources":["../../../../../src/components/helpers/OpenInvoiceContainer/OpenInvoiceContainer.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../../internal/UIElement/UIElement';\nimport OpenInvoice from '../../internal/OpenInvoice';\nimport { CoreProvider } from '../../../core/Context/CoreProvider';\nimport SRPanelProvider from '../../../core/Errors/SRPanelProvider';\nimport { OpenInvoiceConfiguration } from './types';\n\nexport default class OpenInvoiceContainer extends UIElement<OpenInvoiceConfiguration> {\n    protected static defaultProps: Partial<OpenInvoiceConfiguration> = {\n        onChange: () => {},\n        data: { companyDetails: {}, personalDetails: {}, billingAddress: {}, deliveryAddress: {}, bankAccount: {} },\n        visibility: {\n            companyDetails: 'hidden',\n            personalDetails: 'editable',\n            billingAddress: 'editable',\n            deliveryAddress: 'editable',\n            bankAccount: 'hidden'\n        }\n    };\n\n    /**\n     * Returns whether the component state is valid or not\n     */\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    /**\n     * Formats props on construction time\n     */\n    formatProps(props) {\n        const country = props.countryCode || props.data?.billingAddress?.countryCode;\n\n        return {\n            ...props,\n            allowedCountries: [country],\n            visibility: {\n                ...OpenInvoiceContainer.defaultProps.visibility,\n                ...props.visibility\n            },\n            data: {\n                ...props.data,\n                billingAddress: {\n                    ...props.data.billingAddress,\n                    country\n                },\n                deliveryAddress: {\n                    ...props.data.deliveryAddress,\n                    country\n                }\n            }\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        const { data = {} } = this.state;\n        const { companyDetails = {}, personalDetails = {}, billingAddress, deliveryAddress, bankAccount } = data;\n\n        return {\n            paymentMethod: {\n                type: this.constructor['type']\n            },\n            ...personalDetails,\n            ...companyDetails,\n            ...(bankAccount && {\n                bankAccount: {\n                    iban: bankAccount.ibanNumber,\n                    ownerName: bankAccount.ownerName,\n                    countryCode: bankAccount.countryCode\n                }\n            }),\n            ...(billingAddress && { billingAddress }),\n            ...((deliveryAddress || billingAddress) && { deliveryAddress: deliveryAddress || billingAddress })\n        };\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                    <OpenInvoice\n                        setComponentRef={this.setComponentRef}\n                        {...this.props}\n                        {...this.state}\n                        onChange={this.setState}\n                        onSubmit={this.submit}\n                        payButton={this.payButton}\n                    />\n                </SRPanelProvider>\n            </CoreProvider>\n        );\n    }\n}\n"],"names":["OpenInvoiceContainer","UIElement","isValid","this","state","formatProps","props","country","countryCode","data","billingAddress","allowedCountries","visibility","defaultProps","deliveryAddress","formatData","companyDetails","personalDetails","bankAccount","paymentMethod","type","constructor","iban","ibanNumber","ownerName","render","h","CoreProvider","i18n","loadingContext","resources","SRPanelProvider","srPanel","modules","OpenInvoice","setComponentRef","onChange","setState","onSubmit","submit","payButton"],"mappings":"+TAOe,MAAMA,UAA6BC,EAgB9C,WAAIC,GACA,QAASC,KAAKC,MAAMF,OACxB,CAKAG,WAAAA,CAAYC,GACR,MAAMC,EAAUD,EAAME,aAAeF,EAAMG,MAAMC,gBAAgBF,YAEjE,MAAO,IACAF,EACHK,iBAAkB,CAACJ,GACnBK,WAAY,IACLZ,EAAqBa,aAAaD,cAClCN,EAAMM,YAEbH,KAAM,IACCH,EAAMG,KACTC,eAAgB,IACTJ,EAAMG,KAAKC,eACdH,WAEJO,gBAAiB,IACVR,EAAMG,KAAKK,gBACdP,YAIhB,CAKAQ,UAAAA,GACI,MAAMN,KAAEA,EAAO,IAAON,KAAKC,OACrBY,eAAEA,EAAiB,CAAA,EAAEC,gBAAEA,EAAkB,CAAE,EAAAP,eAAEA,EAAcI,gBAAEA,EAAeI,YAAEA,GAAgBT,EAEpG,MAAO,CACHU,cAAe,CACXC,KAAMjB,KAAKkB,YAAmB,SAE/BJ,KACAD,KACCE,GAAe,CACfA,YAAa,CACTI,KAAMJ,EAAYK,WAClBC,UAAWN,EAAYM,UACvBhB,YAAaU,EAAYV,iBAG7BE,GAAkB,CAAEA,sBACnBI,GAAmBJ,IAAmB,CAAEI,gBAAiBA,GAAmBJ,GAEzF,CAEAe,MAAAA,GACI,OACIC,EAACC,EAAAA,CAAaC,KAAMzB,KAAKG,MAAMsB,KAAMC,eAAgB1B,KAAKG,MAAMuB,eAAgBC,UAAW3B,KAAK2B,WAC5FJ,EAACK,EAAAA,CAAgBC,QAAS7B,KAAKG,MAAM2B,QAAQD,SACzCN,EAACQ,EAAAA,CACGC,gBAAiBhC,KAAKgC,mBAClBhC,KAAKG,SACLH,KAAKC,MACTgC,SAAUjC,KAAKkC,SACfC,SAAUnC,KAAKoC,OACfC,UAAWrC,KAAKqC,aAKpC,cAtFmE,CAC/DJ,SAAU,OACV3B,KAAM,CAAEO,eAAgB,CAAC,EAAGC,gBAAiB,CAAC,EAAGP,eAAgB,CAAC,EAAGI,gBAAiB,CAAC,EAAGI,YAAa,CAAA,GACvGN,WAAY,CACRI,eAAgB,SAChBC,gBAAiB,WACjBP,eAAgB,WAChBI,gBAAiB,WACjBI,YAAa,cARJL,oBADAb"}