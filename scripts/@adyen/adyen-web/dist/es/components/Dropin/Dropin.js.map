{"version":3,"file":"Dropin.js","sources":["../../../../src/components/Dropin/Dropin.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport defaultProps from './defaultProps';\nimport DropinComponent from '../../components/Dropin/components/DropinComponent';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { getCommonProps } from './components/utils';\nimport { createElements, createStoredElements } from './elements';\nimport createInstantPaymentElements from './elements/createInstantPaymentElements';\nimport { hasOwnProperty } from '../../utils/hasOwnProperty';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\nimport splitPaymentMethods from './elements/splitPaymentMethods';\nimport { TxVariants } from '../tx-variants';\n\nimport type { DropinConfiguration, InstantPaymentTypes, PaymentMethodsConfiguration } from './types';\nimport type { PaymentAction, PaymentResponseData } from '../../types/global-types';\nimport type { ICore } from '../../core/types';\nimport type { IDropin } from './types';\n\nconst SUPPORTED_INSTANT_PAYMENTS = ['paywithgoogle', 'googlepay', 'applepay'];\n\nclass DropinElement extends UIElement<DropinConfiguration> implements IDropin {\n    public static type = TxVariants.dropin;\n\n    protected static defaultProps = defaultProps;\n\n    public dropinRef = null;\n\n    private paymentMethodsConfiguration: PaymentMethodsConfiguration;\n    /**\n     * Reference to the component created from `handleAction` (Ex.: ThreeDS2Challenge)\n     */\n    public componentFromAction?: UIElement;\n\n    constructor(checkout: ICore, props?: DropinConfiguration) {\n        super(checkout, props);\n        this.submit = this.submit.bind(this);\n        this.handleAction = this.handleAction.bind(this);\n\n        this.props.paymentMethodComponents.forEach(PaymentMethod => this.core.register(PaymentMethod));\n        this.paymentMethodsConfiguration = this.props.paymentMethodsConfiguration || {};\n    }\n\n    protected override storeElementRefOnCore() {\n        this.core.storeElementReference(this);\n    }\n\n    formatProps(props) {\n        return {\n            type: 'dropin', // for analytics\n            ...super.formatProps(props),\n            instantPaymentTypes: Array.from<InstantPaymentTypes>(new Set(props.instantPaymentTypes)).filter(value =>\n                SUPPORTED_INSTANT_PAYMENTS.includes(value)\n            )\n        };\n    }\n\n    get isValid() {\n        return !!this.dropinRef && !!this.dropinRef.state.activePaymentMethod && !!this.dropinRef.state.activePaymentMethod.isValid;\n    }\n\n    showValidation() {\n        if (this.dropinRef.state.activePaymentMethod) {\n            this.dropinRef.state.activePaymentMethod.showValidation();\n        }\n\n        return this;\n    }\n\n    public setStatus(status, props = {}): this {\n        this.dropinRef?.setStatus(status, props);\n        return this;\n    }\n\n    get activePaymentMethod() {\n        if (!this.dropinRef?.state && !this.dropinRef?.state.activePaymentMethod) {\n            return null;\n        }\n\n        return this.dropinRef.state.activePaymentMethod;\n    }\n\n    get data() {\n        if (!this.activePaymentMethod) {\n            return null;\n        }\n\n        return this.dropinRef.state.activePaymentMethod.data;\n    }\n\n    public displayFinalAnimation(type: 'success' | 'error') {\n        if (this.props.disableFinalAnimation) return;\n\n        this.dropinRef.setStatus(type);\n    }\n\n    /**\n     * Calls the onSubmit event with the state of the activePaymentMethod\n     */\n    public override submit(): void {\n        if (!this.activePaymentMethod) {\n            throw new Error('No active payment method.');\n        }\n\n        if (!this.activePaymentMethod.isValid) {\n            this.activePaymentMethod.showValidation();\n        }\n\n        if (this.activePaymentMethod.isInstantPayment) {\n            this.closeActivePaymentMethod();\n        }\n\n        this.activePaymentMethod.submit();\n    }\n\n    /**\n     * Creates the Drop-in elements\n     */\n    private handleCreate = () => {\n        const { paymentMethodsConfiguration, showStoredPaymentMethods, showPaymentMethods, instantPaymentTypes } = this.props;\n\n        const { paymentMethods, storedPaymentMethods, instantPaymentMethods, fastlanePaymentMethod } = splitPaymentMethods(\n            this.core.paymentMethodsResponse,\n            instantPaymentTypes\n        );\n\n        const commonProps = getCommonProps({ ...this.props, elementRef: this.elementRef });\n\n        const elements = showPaymentMethods ? createElements(paymentMethods, paymentMethodsConfiguration, commonProps, this.core) : [];\n        const instantPaymentElements = createInstantPaymentElements(instantPaymentMethods, paymentMethodsConfiguration, commonProps, this.core);\n        const storedElements = showStoredPaymentMethods\n            ? createStoredElements(\n                  this.props.filterStoredPaymentMethods?.(storedPaymentMethods) ?? storedPaymentMethods,\n                  paymentMethodsConfiguration,\n                  commonProps,\n                  this.core\n              )\n            : [];\n        const fastlanePaymentElement = fastlanePaymentMethod\n            ? createElements([fastlanePaymentMethod], paymentMethodsConfiguration, commonProps, this.core)\n            : [];\n\n        return [storedElements, elements, instantPaymentElements, fastlanePaymentElement];\n    };\n\n    public handleAction(action: PaymentAction, props = {}): this | null {\n        if (!action || !action.type) {\n            if (hasOwnProperty(action, 'action') && hasOwnProperty(action, 'resultCode')) {\n                throw new Error(\n                    'handleAction::Invalid Action - the passed action object itself has an \"action\" property and ' +\n                        'a \"resultCode\": have you passed in the whole response object by mistake?'\n                );\n            }\n            throw new Error('handleAction::Invalid Action - the passed action object does not have a \"type\" property');\n        }\n\n        if (action.type !== 'redirect' && this.activePaymentMethod?.updateWithAction) {\n            return this.activePaymentMethod.updateWithAction(action);\n        }\n\n        if (this.elementRef instanceof DropinElement) {\n            props = {\n                ...this.elementRef.activePaymentMethod?.props,\n                ...props\n            };\n        }\n\n        const paymentAction: UIElement = this.core.createFromAction(action, {\n            ...props,\n            elementRef: this.elementRef, // maintain elementRef for 3DS2 flow\n            onAdditionalDetails: this.handleAdditionalDetails,\n            isDropin: true\n        });\n\n        if (paymentAction) {\n            this.setStatus(paymentAction.props.statusType, { component: paymentAction });\n            this.componentFromAction = paymentAction;\n            return this;\n        }\n\n        return null;\n    }\n\n    /**\n     * handleOrder is implemented so we don't trigger a callback like in the components\n     * @param response - PaymentResponse\n     */\n    protected handleOrder = ({ order }: PaymentResponseData): void => {\n        void this.updateParent({ order });\n    };\n\n    closeActivePaymentMethod() {\n        this.dropinRef.closeActivePaymentMethod();\n    }\n\n    protected handleKeyPress(e: h.JSX.TargetedKeyboardEvent<HTMLInputElement> | KeyboardEvent) {\n        if (e.key === 'Enter' || e.code === 'Enter') {\n            // If the active element has role=\"radio\", we're on a header in the PMList, in which case we don't want to validate the form, or, prevent the default behaviour\n            const isPMHeader = document?.activeElement?.getAttribute('role') === 'radio';\n            if (isPMHeader) {\n                return;\n            }\n            super.handleKeyPress(e);\n        }\n    }\n\n    protected onEnterKeyPressed(activeElement: Element, component: UIElement) {\n        // We want to have a ref to the activePM, if we can; not a ref to the Dropin\n        const pmComponent = this.activePaymentMethod ?? component;\n        this.activePaymentMethod?.onEnterKeyPressed(activeElement, pmComponent);\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                    <DropinComponent\n                        {...this.props}\n                        core={this.core}\n                        elementRef={this.elementRef}\n                        onCreateElements={this.handleCreate}\n                        ref={dropinRef => {\n                            this.dropinRef = dropinRef;\n                        }}\n                    />\n                </SRPanelProvider>\n            </CoreProvider>\n        );\n    }\n}\n\nexport default DropinElement;\n"],"names":["SUPPORTED_INSTANT_PAYMENTS","DropinElement","UIElement","storeElementRefOnCore","this","core","storeElementReference","formatProps","props","type","super","instantPaymentTypes","Array","from","Set","filter","value","includes","isValid","dropinRef","state","activePaymentMethod","showValidation","setStatus","status","data","displayFinalAnimation","disableFinalAnimation","submit","Error","isInstantPayment","closeActivePaymentMethod","handleAction","action","hasOwnProperty","updateWithAction","elementRef","paymentAction","createFromAction","onAdditionalDetails","handleAdditionalDetails","isDropin","statusType","component","componentFromAction","handleKeyPress","e","key","code","document","activeElement","getAttribute","onEnterKeyPressed","pmComponent","render","h","CoreProvider","i18n","loadingContext","resources","SRPanelProvider","srPanel","modules","DropinComponent","onCreateElements","handleCreate","ref","constructor","checkout","_define_property","paymentMethodsConfiguration","showStoredPaymentMethods","showPaymentMethods","paymentMethods","storedPaymentMethods","instantPaymentMethods","fastlanePaymentMethod","splitPaymentMethods","paymentMethodsResponse","commonProps","getCommonProps","elements","createElements","instantPaymentElements","createInstantPaymentElements","createStoredElements","filterStoredPaymentMethods","handleOrder","order","updateParent","bind","paymentMethodComponents","forEach","PaymentMethod","register","TxVariants","dropin","defaultProps"],"mappings":"m0BAkBA,MAAMA,EAA6B,CAAC,gBAAiB,YAAa,YAElE,MAAMC,UAAsBC,EAsBLC,qBAAAA,GACfC,KAAKC,KAAKC,sBAAsBF,KACpC,CAEAG,WAAAA,CAAYC,GACR,MAAO,CACHC,KAAM,YACHC,MAAMH,YAAYC,GACrBG,oBAAqBC,MAAMC,KAA0B,IAAIC,IAAIN,EAAMG,sBAAsBI,QAAOC,GAC5FhB,EAA2BiB,SAASD,KAGhD,CAEA,WAAIE,GACA,QAASd,KAAKe,aAAef,KAAKe,UAAUC,MAAMC,uBAAyBjB,KAAKe,UAAUC,MAAMC,oBAAoBH,OACxH,CAEAI,cAAAA,GAKI,OAJIlB,KAAKe,UAAUC,MAAMC,qBACrBjB,KAAKe,UAAUC,MAAMC,oBAAoBC,iBAGtClB,IACX,CAEOmB,SAAAA,CAAUC,EAAQhB,EAAQ,IAE7B,OADAJ,KAAKe,WAAWI,UAAUC,EAAQhB,GAC3BJ,IACX,CAEA,uBAAIiB,GACA,OAAKjB,KAAKe,WAAWC,OAAUhB,KAAKe,WAAWC,MAAMC,oBAI9CjB,KAAKe,UAAUC,MAAMC,oBAHjB,IAIf,CAEA,QAAII,GACA,OAAKrB,KAAKiB,oBAIHjB,KAAKe,UAAUC,MAAMC,oBAAoBI,KAHrC,IAIf,CAEOC,qBAAAA,CAAsBjB,GACrBL,KAAKI,MAAMmB,uBAEfvB,KAAKe,UAAUI,UAAUd,EAC7B,CAKA,MAAAmB,GACI,IAAKxB,KAAKiB,oBACN,MAAM,IAAIQ,MAAM,6BAGfzB,KAAKiB,oBAAoBH,SAC1Bd,KAAKiB,oBAAoBC,iBAGzBlB,KAAKiB,oBAAoBS,kBACzB1B,KAAK2B,2BAGT3B,KAAKiB,oBAAoBO,QAC7B,CAgCOI,YAAAA,CAAaC,EAAuBzB,EAAQ,IAC/C,IAAKyB,IAAWA,EAAOxB,KAAM,CACzB,GAAIyB,EAAeD,EAAQ,WAAaC,EAAeD,EAAQ,cAC3D,MAAM,IAAIJ,MACN,wKAIR,MAAM,IAAIA,MAAM,0FACpB,CAEA,GAAoB,aAAhBI,EAAOxB,MAAuBL,KAAKiB,qBAAqBc,iBACxD,OAAO/B,KAAKiB,oBAAoBc,iBAAiBF,GAGjD7B,KAAKgC,sBAAsBnC,IAC3BO,EAAQ,IACDJ,KAAKgC,WAAWf,qBAAqBb,SACrCA,IAIX,MAAM6B,EAA2BjC,KAAKC,KAAKiC,iBAAiBL,EAAQ,IAC7DzB,EACH4B,WAAYhC,KAAKgC,WACjBG,oBAAqBnC,KAAKoC,wBAC1BC,UAAU,IAGd,OAAIJ,GACAjC,KAAKmB,UAAUc,EAAc7B,MAAMkC,WAAY,CAAEC,UAAWN,IAC5DjC,KAAKwC,oBAAsBP,EACpBjC,MAGJ,IACX,CAUA2B,wBAAAA,GACI3B,KAAKe,UAAUY,0BACnB,CAEUc,cAAAA,CAAeC,GACrB,GAAc,UAAVA,EAAEC,KAA8B,UAAXD,EAAEE,KAAkB,CAGzC,GADqE,UAAlDC,UAAUC,eAAeC,aAAa,QAErD,OAEJzC,MAAMmC,eAAeC,EACzB,CACJ,CAEUM,iBAAAA,CAAkBF,EAAwBP,GAEhD,MAAMU,EAAcjD,KAAKiB,qBAAuBsB,EAChDvC,KAAKiB,qBAAqB+B,kBAAkBF,EAAeG,EAC/D,CAEAC,MAAAA,GACI,OACIC,EAACC,EAAAA,CAAaC,KAAMrD,KAAKI,MAAMiD,KAAMC,eAAgBtD,KAAKI,MAAMkD,eAAgBC,UAAWvD,KAAKuD,WAC5FJ,EAACK,EAAAA,CAAgBC,QAASzD,KAAKI,MAAMsD,QAAQD,SACzCN,EAACQ,EAAAA,IACO3D,KAAKI,MACTH,KAAMD,KAAKC,KACX+B,WAAYhC,KAAKgC,WACjB4B,iBAAkB5D,KAAK6D,aACvBC,IAAK/C,IACDf,KAAKe,UAAYA,CAAAA,KAMzC,CAlMAgD,WAAAA,CAAYC,EAAiB5D,GACzBE,MAAM0D,EAAU5D,GATpB6D,EAAAjE,KAAOe,YAAY,MAEnBkD,EAAAjE,KAAQkE,mCAAR,GAIAD,EAAAjE,KAAOwC,2BAAP,GAsFAyB,OAAQJ,gBAAe,KACnB,MAAMK,4BAAEA,EAA2BC,yBAAEA,EAAwBC,mBAAEA,EAAkB7D,oBAAEA,GAAwBP,KAAKI,OAE1GiE,eAAEA,EAAcC,qBAAEA,EAAoBC,sBAAEA,EAAqBC,sBAAEA,GAA0BC,EAC3FzE,KAAKC,KAAKyE,uBACVnE,GAGEoE,EAAcC,EAAe,IAAK5E,KAAKI,MAAO4B,WAAYhC,KAAKgC,aAE/D6C,EAAWT,EAAqBU,EAAeT,EAAgBH,EAA6BS,EAAa3E,KAAKC,MAAQ,GACtH8E,EAAyBC,EAA6BT,EAAuBL,EAA6BS,EAAa3E,KAAKC,MAalI,MAAO,CAZgBkE,EACjBc,EACIjF,KAAKI,MAAM8E,6BAA6BZ,IAAyBA,EACjEJ,EACAS,EACA3E,KAAKC,MAET,GAKkB4E,EAAUE,EAJHP,EACzBM,EAAe,CAACN,GAAwBN,EAA6BS,EAAa3E,KAAKC,MACvF,GAE2E,IA6CrFgE,EAAUkB,KAAAA,eAAc,EAAGC,YAClBpF,KAAKqF,aAAa,CAAED,SAAM,IAxJ/BpF,KAAKwB,OAASxB,KAAKwB,OAAO8D,KAAKtF,MAC/BA,KAAK4B,aAAe5B,KAAK4B,aAAa0D,KAAKtF,MAE3CA,KAAKI,MAAMmF,wBAAwBC,SAAQC,GAAiBzF,KAAKC,KAAKyF,SAASD,KAC/EzF,KAAKkE,4BAA8BlE,KAAKI,MAAM8D,6BAA+B,CAAC,CAClF,EAnBAD,EADEpE,EACYQ,OAAOsF,EAAWC,QAEhC3B,EAHEpE,EAGegG,eAAeA"}