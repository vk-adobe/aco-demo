import{Component as t,createElement as e,Fragment as s}from"../../../external/preact/dist/preact.js";import o from"./PaymentMethod/PaymentMethodList.js";import n from"./status/index.js";import a from"../../../core/Services/order-status.js";import{sanitizeOrder as r}from"../../internal/UIElement/utils.js";import{ANALYTICS_RENDERED_STR as i,InfoEventTypes as h}from"../../../core/Analytics/constants.js";import d from"../../../core/Errors/AdyenCheckoutError.js";import m from"../../internal/Button/Button.js";import{AnalyticsInfoEvent as p}from"../../../core/Analytics/AnalyticsInfoEvent.js";function l(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}class c extends t{componentDidMount(){this.prepareDropinData()}get analyticConfigData(){return{openFirstStoredPaymentMethod:this.props.openFirstStoredPaymentMethod,showStoredPaymentMethods:this.props.showStoredPaymentMethods}}componentDidUpdate(t,e){e.status.type!==this.state.status.type&&this.state.activePaymentMethod&&this.state.activePaymentMethod.setStatus(this.state.status.type),"ready"===this.state.status.type&&"ready"!==e.status.type&&this.props.onReady&&this.props.onReady()}closeActivePaymentMethod(){this.setState({activePaymentMethod:null})}render(){const{elements:t,fastlanePaymentElement:a,instantPaymentElements:r,storedPaymentElements:i,status:h,activePaymentMethod:d,cachedPaymentMethods:p,showDefaultPaymentMethodList:l}=this.state,c="loading"===h.type,y="redirect"===h.type,u=!!(t?.length||r?.length||i?.length);switch(h.type){case"success":return e(n.Success,{message:0===this.props?.amount?.value?"resultMessages.preauthorized":h.props?.message});case"error":return e(n.Error,{message:h.props?.message});case"custom":return h.props?.component?.render();default:return e("div",{className:`adyen-checkout__dropin adyen-checkout__dropin--${h.type}`},y&&h.props.component&&h.props.component.render(),c&&h.props&&h.props.component&&h.props.component.render(),!l&&e(s,null,e(o,{isLoading:c,paymentMethods:a,activePaymentMethod:d,cachedPaymentMethods:p,onSelect:this.handleOnSelectPaymentMethod,openFirstPaymentMethod:!0,showRadioButton:this.props.showRadioButton}),u&&e(m,{classNameModifiers:["dropin-show-paymentmethods"],variant:"link",inline:!0,label:"Other payment methods",onClick:this.onShowDefaultPaymentMethodListClick})),u&&l&&e(o,{isLoading:c||y,isDisablingPaymentMethod:this.state.isDisabling,paymentMethods:t,instantPaymentMethods:r,storedPaymentMethods:i,activePaymentMethod:d,cachedPaymentMethods:p,order:this.props.order,orderStatus:this.state.orderStatus,onOrderCancel:this.onOrderCancel,onSelect:this.handleOnSelectPaymentMethod,openPaymentMethod:this.props.openPaymentMethod,openFirstPaymentMethod:this.props.openFirstPaymentMethod,openFirstStoredPaymentMethod:this.props.openFirstStoredPaymentMethod,onDisableStoredPaymentMethod:this.handleDisableStoredPaymentMethod,showRemovePaymentMethodButton:this.props.showRemovePaymentMethodButton,showRadioButton:this.props.showRadioButton}))}}constructor(...t){super(...t),l(this,"state",{elements:[],fastlanePaymentElement:[],instantPaymentElements:[],storedPaymentElements:[],orderStatus:null,isDisabling:!1,status:{type:"loading",props:void 0},activePaymentMethod:null,cachedPaymentMethods:{},showDefaultPaymentMethodList:!0}),l(this,"prepareDropinData",(()=>{const{order:t,clientKey:e,loadingContext:s}=this.props,[o,n,r,h]=this.props.onCreateElements(),d=t?a({clientKey:e,loadingContext:s},t):null;Promise.all([o,n,r,h,d]).then((([t,e,s,o,n])=>{this.setState({orderStatus:n,elements:e,instantPaymentElements:s,storedPaymentElements:t,fastlanePaymentElement:o,showDefaultPaymentMethodList:0===o.length}),this.setStatus("ready");const a=new p({type:i,component:"dropin",configData:this.analyticConfigData});this.props.modules?.analytics.sendAnalytics(a)})),this.onOrderCancel=this.getOnOrderCancel()})),l(this,"setStatus",((t,e={})=>{this.setState({status:{type:t,props:e}})})),l(this,"setActivePaymentMethod",(t=>{t!==this.state.activePaymentMethod&&(this.setState((e=>({activePaymentMethod:t,cachedPaymentMethods:{...e.cachedPaymentMethods,[t._id]:!0}}))),this.state.cachedPaymentMethods[t._id]&&t.activate())})),l(this,"handleOnSelectPaymentMethod",(t=>{const{activePaymentMethod:e}=this.state;if(this.setActivePaymentMethod(t),e&&e._id!==t._id||!e){this.props.onSelect?.(t);const e=new p({type:i});t.submitAnalytics(e)}})),l(this,"handleDisableStoredPaymentMethod",(t=>{this.setState({isDisabling:!0}),new Promise(((e,s)=>this.props.onDisableStoredPaymentMethod(t.props.storedPaymentMethodId,e,s))).then((()=>{this.setState((e=>({storedPaymentElements:e.storedPaymentElements.filter((e=>e._id!==t._id))}))),this.setState({isDisabling:!1})})).catch((()=>{this.setState({isDisabling:!1})}))})),l(this,"onShowDefaultPaymentMethodListClick",(()=>{this.setState({showDefaultPaymentMethodList:!0});const t=new p({type:h.clicked,target:"otherpaymentmethod_button",component:"dropin"});this.props.modules?.analytics.sendAnalytics(t)})),l(this,"getOnOrderCancel",(()=>this.props.onOrderCancel?t=>{const e=r(t.order);new Promise(((t,s)=>{this.props.onOrderCancel({order:e},{resolve:t,reject:s})})).then((({amount:t})=>this.props.elementRef.handleAdvanceFlowPaymentMethodsUpdate(null,t))).catch((t=>{throw new d("NETWORK_ERROR",t)}))}:this.props.session?t=>this.props.session.cancelOrder(t).then((()=>this.props.core.update({order:null}))).catch((t=>{console.error(t),this.setStatus(t?.message||"error")})):null)),l(this,"onOrderCancel",void 0)}}export{c as DropinComponent,c as default};
//# sourceMappingURL=DropinComponent.js.map
