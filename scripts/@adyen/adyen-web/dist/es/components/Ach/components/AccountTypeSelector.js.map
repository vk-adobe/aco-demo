{"version":3,"file":"AccountTypeSelector.js","sources":["../../../../../src/components/Ach/components/AccountTypeSelector.tsx"],"sourcesContent":["import Select from '../../internal/FormFields/Select';\nimport Field from '../../internal/FormFields/Field';\nimport { h } from 'preact';\nimport { useCallback, useMemo } from 'preact/hooks';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport { SelectItem } from '../../internal/FormFields/Select/types';\n\nconst SELECTOR_OPTIONS = [\n    { id: 'personal.checking', nameKey: 'ach.bankAccount.option.personal-checking' },\n    { id: 'personal.savings', nameKey: 'ach.bankAccount.option.personal-savings' },\n    { id: 'business.checking', nameKey: 'ach.bankAccount.option.business-checking' },\n    { id: 'business.savings', nameKey: 'ach.bankAccount.option.business-savings' }\n];\n\ninterface AccountTypeSelectorProps {\n    selectedAccountType?: string;\n    onSelect(value: string): void;\n    disabled: boolean;\n    errorMessage?: string;\n    placeholder?: string;\n}\n\nconst AccountTypeSelector = ({ onSelect, selectedAccountType, errorMessage, placeholder, disabled }: AccountTypeSelectorProps) => {\n    const { i18n } = useCoreContext();\n    const options: SelectItem[] = useMemo(\n        () =>\n            SELECTOR_OPTIONS.map(option => ({\n                id: option.id,\n                name: i18n.get(option.nameKey)\n            })),\n        [i18n, SELECTOR_OPTIONS]\n    );\n\n    const onChange = useCallback(\n        event => {\n            const value = event.target.value;\n            onSelect(value);\n        },\n        [onSelect]\n    );\n\n    return (\n        <Field\n            name={'ach-bankaccount-type'}\n            useLabelElement={true}\n            showContextualElement={false}\n            label={i18n.get('ach.bankAccount.label')}\n            errorMessage={errorMessage}\n            classNameModifiers={['selectedAccountType']}\n        >\n            <Select\n                placeholder={placeholder || i18n.get('ach.bankAccount.placeholder')}\n                filterable={false}\n                items={options}\n                selectedValue={selectedAccountType}\n                onChange={onChange}\n                name={'ach-bankaccount-type'}\n                disabled={disabled}\n            />\n        </Field>\n    );\n};\n\nexport { AccountTypeSelector };\n"],"names":["SELECTOR_OPTIONS","id","nameKey","AccountTypeSelector","onSelect","selectedAccountType","errorMessage","placeholder","disabled","i18n","useCoreContext","options","useMemo","map","option","name","get","onChange","useCallback","event","value","target","h","Field","useLabelElement","showContextualElement","label","classNameModifiers","Select","filterable","items","selectedValue"],"mappings":"yVAOA,MAAMA,EAAmB,CACrB,CAAEC,GAAI,oBAAqBC,QAAS,4CACpC,CAAED,GAAI,mBAAoBC,QAAS,2CACnC,CAAED,GAAI,oBAAqBC,QAAS,4CACpC,CAAED,GAAI,mBAAoBC,QAAS,4CAWjCC,EAAsB,EAAGC,WAAUC,sBAAqBC,eAAcC,cAAaC,eACrF,MAAMC,KAAEA,GAASC,IACXC,EAAwBC,GAC1B,IACIZ,EAAiBa,KAAIC,IAAW,CAC5Bb,GAAIa,EAAOb,GACXc,KAAMN,EAAKO,IAAIF,EAAOZ,cAE9B,CAACO,EAAMT,IAGLiB,EAAWC,GACbC,IACI,MAAMC,EAAQD,EAAME,OAAOD,MAC3BhB,EAASgB,EAAAA,GAEb,CAAChB,IAGL,OACIkB,EAACC,EAAAA,CACGR,KAAM,uBACNS,iBAAiB,EACjBC,uBAAuB,EACvBC,MAAOjB,EAAKO,IAAI,yBAChBV,aAAcA,EACdqB,mBAAoB,CAAC,wBAErBL,EAACM,EAAAA,CACGrB,YAAaA,GAAeE,EAAKO,IAAI,+BACrCa,YAAY,EACZC,MAAOnB,EACPoB,cAAe1B,EACfY,SAAUA,EACVF,KAAM,uBACNP,SAAUA"}