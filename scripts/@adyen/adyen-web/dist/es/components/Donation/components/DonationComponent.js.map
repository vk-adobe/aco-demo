{"version":3,"file":"DonationComponent.js","sources":["../../../../../src/components/Donation/components/DonationComponent.tsx"],"sourcesContent":["import { h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport CampaignContent from './CampaignContent';\nimport Button from '../../internal/Button';\nimport Img from '../../internal/Img';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport '../Donation.scss';\nimport DisclaimerMessage from '../../internal/DisclaimerMessage';\nimport { DonationAmount, DonationComponentProps, Status } from './types';\nimport useImage from '../../../core/Context/useImage';\nimport FixedAmounts from './FixedAmounts';\nimport Roundup from './Roundup';\nimport { getAmountLabel, getRoundupAmount, getRoundupAmountLabel } from './utils';\n\nexport default function DonationComponent(props: DonationComponentProps) {\n    const { donation, commercialTxAmount, onCancel, onDonate, showCancelButton = true, termsAndConditionsUrl } = props;\n    const { i18n } = useCoreContext();\n    const getImage = useImage();\n    const { currency, type } = donation;\n    const isRoundupDonation = type === 'roundup';\n    const [status, setStatus] = useState<Status>('ready');\n    const [isValid, setIsValid] = useState<boolean>(isRoundupDonation);\n    const [amount, setAmount] = useState<DonationAmount>({\n        currency,\n        value: isRoundupDonation ? getRoundupAmount(donation.maxRoundupAmount, commercialTxAmount) : null\n    });\n\n    this.setStatus = (status: Status) => {\n        setStatus(status);\n    };\n\n    const handleAmountSelected = ({ target }) => {\n        const value = parseInt(target.value, 10);\n        setIsValid(true);\n        setAmount((amount: DonationAmount) => ({ ...amount, value }));\n    };\n\n    const handleDonate = () => {\n        setStatus('loading');\n        onDonate({ data: { amount } });\n    };\n\n    const handleDecline = () => {\n        setStatus('ready');\n        onCancel({ data: { amount }, isValid });\n    };\n\n    useEffect(() => {\n        props.onChange({ data: { amount }, isValid });\n    }, [amount, isValid]);\n\n    if (status === 'error') {\n        return (\n            <div className=\"adyen-checkout__adyen-giving\">\n                <Img\n                    className=\"adyen-checkout__status__icon adyen-checkout__status__icon--error\"\n                    src={getImage({ imageFolder: 'components/' })('error')}\n                    alt={i18n.get('error.message.unknown')}\n                />\n                <div className=\"adyen-checkout__status__text\">{i18n.get('error.message.unknown')}</div>\n            </div>\n        );\n    }\n\n    if (status === 'success') {\n        return (\n            <div className=\"adyen-checkout__adyen-giving\">\n                <Img\n                    className=\"adyen-checkout__status__icon adyen-checkout__status__icon--success\"\n                    src={getImage({ imageFolder: 'components/' })('heart')}\n                    alt={i18n.get('thanksForYourSupport')}\n                />\n\n                <div className=\"adyen-checkout__status__text\">{i18n.get('thanksForYourSupport')}</div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"adyen-checkout__adyen-giving\">\n            <CampaignContent {...props} />\n\n            <div className=\"adyen-checkout__adyen-giving-actions\">\n                {termsAndConditionsUrl && <DisclaimerMessage message={i18n.get('donationTermsCondition')} urls={[termsAndConditionsUrl]} />}\n                {isRoundupDonation ? (\n                    <Roundup\n                        donationAmount={getRoundupAmountLabel(i18n, { maxRoundupAmount: donation.maxRoundupAmount, commercialTxAmount, currency })}\n                        originalPaymentAmount={getAmountLabel(i18n, { value: commercialTxAmount, currency })}\n                        status={status}\n                        onDonateButtonClicked={handleDonate}\n                    ></Roundup>\n                ) : (\n                    <FixedAmounts\n                        selectedAmount={amount.value}\n                        values={donation.values}\n                        currency={currency}\n                        status={status}\n                        onAmountSelected={handleAmountSelected}\n                        onDonateButtonClicked={handleDonate}\n                    ></FixedAmounts>\n                )}\n                {showCancelButton && (\n                    <Button\n                        classNameModifiers={['decline']}\n                        variant=\"ghost\"\n                        onClick={handleDecline}\n                        disabled={status === 'loading'}\n                        label={`${i18n.get('notNowButton')} â€º`}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n\nDonationComponent.defaultProps = {\n    onCancel: () => {},\n    onChange: () => {},\n    onDonate: () => {},\n    donation: {},\n    showCancelButton: true\n};\n"],"names":["DonationComponent","props","donation","commercialTxAmount","onCancel","onDonate","showCancelButton","termsAndConditionsUrl","i18n","useCoreContext","getImage","useImage","currency","type","isRoundupDonation","status","setStatus","useState","isValid","setIsValid","amount","setAmount","value","getRoundupAmount","maxRoundupAmount","this","handleDonate","data","useEffect","onChange","h","div","className","Img","src","imageFolder","alt","get","CampaignContent","DisclaimerMessage","message","urls","Roundup","donationAmount","getRoundupAmountLabel","originalPaymentAmount","getAmountLabel","onDonateButtonClicked","FixedAmounts","selectedAmount","values","onAmountSelected","target","parseInt","Button","classNameModifiers","variant","onClick","disabled","label","defaultProps"],"mappings":"knBAce,SAASA,EAAkBC,GACtC,MAAMC,SAAEA,EAAQC,mBAAEA,EAAkBC,SAAEA,EAAQC,SAAEA,EAAQC,iBAAEA,GAAmB,EAAIC,sBAAEA,GAA0BN,GACvGO,KAAEA,GAASC,IACXC,EAAWC,KACXC,SAAEA,EAAQC,KAAEA,GAASX,EACrBY,EAA6B,YAATD,GACnBE,EAAQC,GAAaC,EAAiB,UACtCC,EAASC,GAAcF,EAAkBH,IACzCM,EAAQC,GAAaJ,EAAyB,CACjDL,WACAU,MAAOR,EAAoBS,EAAiBrB,EAASsB,iBAAkBrB,GAAsB,OAGjGsB,KAAKT,UAAaD,IACdC,EAAUD,EAAAA,EAGd,MAMMW,EAAe,KACjBV,EAAU,WACVX,EAAS,CAAEsB,KAAM,CAAEP,WAAS,EAYhC,OAJAQ,GAAU,KACN3B,EAAM4B,SAAS,CAAEF,KAAM,CAAEP,UAAUF,WAAQ,GAC5C,CAACE,EAAQF,IAEG,UAAXH,EAEIe,EAACC,MAAAA,CAAIC,UAAU,gCACXF,EAACG,EAAAA,CACGD,UAAU,mEACVE,IAAKxB,EAAS,CAAEyB,YAAa,eAAxBzB,CAAyC,SAC9C0B,IAAK5B,EAAK6B,IAAI,2BAElBP,EAACC,MAAAA,CAAIC,UAAU,gCAAgCxB,EAAK6B,IAAI,2BAKrD,YAAXtB,EAEIe,EAACC,MAAAA,CAAIC,UAAU,gCACXF,EAACG,EAAAA,CACGD,UAAU,qEACVE,IAAKxB,EAAS,CAAEyB,YAAa,eAAxBzB,CAAyC,SAC9C0B,IAAK5B,EAAK6B,IAAI,0BAGlBP,EAACC,MAAAA,CAAIC,UAAU,gCAAgCxB,EAAK6B,IAAI,0BAMhEP,EAACC,MAAAA,CAAIC,UAAU,gCACXF,EAACQ,EAAoBrC,GAErB6B,EAACC,MAAAA,CAAIC,UAAU,wCACVzB,GAAyBuB,EAACS,EAAAA,CAAkBC,QAAShC,EAAK6B,IAAI,0BAA2BI,KAAM,CAAClC,KAChGO,EACGgB,EAACY,EAAAA,CACGC,eAAgBC,EAAsBpC,EAAM,CAAEgB,iBAAkBtB,EAASsB,iBAAkBrB,qBAAoBS,aAC/GiC,sBAAuBC,EAAetC,EAAM,CAAEc,MAAOnB,EAAoBS,aACzEG,OAAQA,EACRgC,sBAAuBrB,IAG3BI,EAACkB,EAAAA,CACGC,eAAgB7B,EAAOE,MACvB4B,OAAQhD,EAASgD,OACjBtC,SAAUA,EACVG,OAAQA,EACRoC,iBAlES,EAAGC,aAC5B,MAAM9B,EAAQ+B,SAASD,EAAO9B,MAAO,IACrCH,GAAW,GACXE,GAAWD,IAA4B,IAAKA,EAAQE,WAAM,EAgE1CyB,sBAAuBrB,IAG9BpB,GACGwB,EAACwB,EAAAA,CACGC,mBAAoB,CAAC,WACrBC,QAAQ,QACRC,QA/DE,KAClBzC,EAAU,SACVZ,EAAS,CAAEuB,KAAM,CAAEP,UAAUF,WAAQ,EA8DrBwC,SAAqB,YAAX3C,EACV4C,MAAO,GAAGnD,EAAK6B,IAAI,uBAM3C,CAEArC,EAAkB4D,aAAe,CAC7BxD,SAAU,OACVyB,SAAU,OACVxB,SAAU,OACVH,SAAU,CAAC,EACXI,kBAAkB"}