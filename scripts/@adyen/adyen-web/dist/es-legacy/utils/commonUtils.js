function t(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}const e=Object.prototype.toString;function n(t){return"object"==typeof t&&null!==t&&"[object Array]"===Object.prototype.toString.call(t)}function r(t){return null!=t}function o(t){return!1!==t&&r(t)}function c(t){return!!t&&"object"==typeof t}function u(t){return!o(t)||(!(!("number"==typeof(r=t)||c(r)&&"[object Number]"===e.call(r))||0!==t&&!Number.isNaN(t))||(!(!n(t)&&!function(t){return"string"==typeof t||c(t)&&"[object String]"===e.call(t)}(t)||0!==t.length)||!(!c(t)||0!==Object.keys(t).length)));var r}function f(t){return!u(t)}function i(...e){const r=n(e[0])?e[0]:e;return{from:e=>r.map((t=>t in e?{[t]:e[t]}:{})).reduce(((e,n)=>function(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{},o=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable})))),o.forEach((function(n){t(e,n,r[n])}))}return e}({},e,n)),{})}}function l(...t){const e=n(t[0])?t[0]:t;return{from:t=>i(...Object.keys(t).filter((t=>!e.includes(t)))).from(t)}}export{r as existy,u as falsy,n as isArray,f as notFalsy,i as pick,l as reject,o as truthy};
//# sourceMappingURL=commonUtils.js.map
