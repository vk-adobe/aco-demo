import{GENERIC_OPTIONS as e}from"./config.js";function n(n){return Object.keys(n).reduce(((o,t)=>(e.includes(t)&&(o[t]=n[t]),o)),{})}function o(e){const n=(e=>e)(["session","environment","_environmentUrls","showPayButton","clientKey","locale","translations","paymentMethodsResponse","amount","secondaryAmount","countryCode","allowPaymentMethods","removePaymentMethods","srConfig","analytics","risk","order","exposeLibraryMetadata","beforeRedirect","beforeSubmit","onPaymentCompleted","onPaymentFailed","onSubmit","onAdditionalDetails","onActionHandled","onChange","onError","onBalanceCheck","onOrderRequest","onPaymentMethodsRequest","onOrderCancel","onOrderUpdated","loadingContext","onEnterKeyPressed","afterAdditionalDetails"]);Object.keys(e).forEach((e=>{n.includes(e)||console.warn(`AdyenCheckout - Configuration property "${e}" is not a valid AdyenCheckout property. If it is a payment method configuration, make sure to pass it directly to the Component. If you are using Drop-in, make sure to pass it to "paymentMethodsConfiguration" object`)}))}function t(e){const n=Object.values(e);return e=>n.includes(e)}export{o as assertConfigurationPropertiesAreValid,t as createEnumChecker,n as processGlobalOptions};
//# sourceMappingURL=utils.js.map
