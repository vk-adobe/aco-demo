import{AnalyticsEvent as t}from"./AnalyticsEvent.js";import{ANALYTICS_EVENT as i,ANALYTICS_VALIDATION_ERROR_STR as s}from"./constants.js";import{mapErrorCodesForAnalytics as e}from"./utils.js";function r(t,i,s){return i in t?Object.defineProperty(t,i,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[i]=s,t}class o extends t{getEventCategory(){return i.info}constructor(t){return super(),r(this,"type",void 0),r(this,"target",void 0),r(this,"issuer",void 0),r(this,"isExpress",void 0),r(this,"expressPage",void 0),r(this,"isStoredPaymentMethod",void 0),r(this,"brand",void 0),r(this,"validationErrorCode",void 0),r(this,"validationErrorMessage",void 0),r(this,"configData",void 0),this.component=t.component,this.type=t.type,this.target=t.target,this.issuer=t.issuer,this.isExpress=t.isExpress,this.isStoredPaymentMethod=t.isStoredPaymentMethod,this.isExpress=t.isExpress,this.expressPage=t.expressPage,this.brand=t.brand,this.validationErrorCode=t.validationErrorCode,this.validationErrorMessage=t.validationErrorMessage,this.configData=t.configData,this.type===s&&(this.validationErrorCode=e(this.validationErrorCode,this.target)),this}}export{o as AnalyticsInfoEvent};
//# sourceMappingURL=AnalyticsInfoEvent.js.map
