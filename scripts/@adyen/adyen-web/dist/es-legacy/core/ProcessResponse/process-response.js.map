{"version":3,"file":"process-response.js","sources":["../../../../src/core/ProcessResponse/process-response.ts"],"sourcesContent":["import { PaymentResponseData, ProcessedResponse } from '../../types/global-types';\n\n/**\n * Processes a complete response from Adyen by resultCode\n * @param response - to be processed\n * @returns a new object describing the response result (ready for onStatusChange)\n */\nconst processCompleteResponse = (response: PaymentResponseData): ProcessedResponse => {\n    switch (response.resultCode.toLowerCase()) {\n        case 'refused':\n        case 'error':\n        case 'cancelled':\n            return { type: 'error', props: { ...response, message: 'error.subtitle.refused' } };\n        case 'unknown':\n            return { type: 'error', props: { ...response, message: 'error.message.unknown' } };\n        case 'pending':\n        case 'received':\n            return { type: response.resultCode.toLowerCase(), props: response };\n        case 'authorised':\n            return { type: 'success', props: response };\n        default:\n            return { type: 'success', props: response };\n    }\n};\n\n/**\n * Processes a response from Adyen by type\n * @param response - to be processed\n * @returns a new object describing the response result (ready for onStatusChange)\n */\nexport const processResponse = (response: PaymentResponseData): ProcessedResponse => {\n    if (!response.type && response.resultCode) {\n        return processCompleteResponse(response);\n    }\n\n    if (!response.type) {\n        return { type: 'error', props: response };\n    }\n\n    switch (response.type.toLowerCase()) {\n        case 'pending':\n            return { type: 'pending', props: response };\n        case 'complete':\n            return processCompleteResponse(response);\n        case 'validation':\n            return { type: 'error', props: response };\n        default:\n            return { type: 'error', props: response };\n    }\n};\n\nexport default processResponse;\n"],"names":["processCompleteResponse","response","resultCode","toLowerCase","type","props","_object_spread_props","message","processResponse"],"mappings":"+yBAOA,MAAMA,EAA2BC,IAC7B,OAAQA,EAASC,WAAWC,eACxB,IAAK,UACL,IAAK,QACL,IAAK,YACD,MAAO,CAAEC,KAAM,QAASC,MAAOC,EAAKL,EAAAA,CAAAA,EAAAA,GAAAA,CAAUM,QAAS,4BAC3D,IAAK,UACD,MAAO,CAAEH,KAAM,QAASC,MAAOC,EAAKL,EAAAA,CAAAA,EAAAA,GAAAA,CAAUM,QAAS,2BAC3D,IAAK,UACL,IAAK,WACD,MAAO,CAAEH,KAAMH,EAASC,WAAWC,cAAeE,MAAOJ,GAG7D,QACI,MAAO,CAAEG,KAAM,UAAWC,MAAOJ,GACzC,EAQSO,EAAmBP,IAC5B,IAAKA,EAASG,MAAQH,EAASC,WAC3B,OAAOF,EAAwBC,GAGnC,IAAKA,EAASG,KACV,MAAO,CAAEA,KAAM,QAASC,MAAOJ,GAGnC,OAAQA,EAASG,KAAKD,eAClB,IAAK,UACD,MAAO,CAAEC,KAAM,UAAWC,MAAOJ,GACrC,IAAK,WACD,OAAOD,EAAwBC,GAGnC,QACI,MAAO,CAAEG,KAAM,QAASC,MAAOJ,GACvC"}