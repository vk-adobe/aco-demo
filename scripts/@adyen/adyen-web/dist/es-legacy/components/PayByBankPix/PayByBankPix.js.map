{"version":3,"file":"PayByBankPix.js","sources":["../../../../src/components/PayByBankPix/PayByBankPix.tsx"],"sourcesContent":["import { h } from 'preact';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { PayByBankPixData, PayByBankPixConfiguration } from './types';\nimport { TxVariants } from '../tx-variants';\nimport UIElement from '../internal/UIElement';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\nimport RedirectButton from '../internal/RedirectButton';\nimport AdyenCheckoutError, { ERROR } from '../../core/Errors/AdyenCheckoutError';\nimport { PasskeyService } from './services/PasskeyService';\nimport { authorizeEnrollment } from './services/authorizeEnrollment';\nimport { authorizePayment } from './services/authorizePayment';\nimport StoredPayment from './components/StoredPayment';\nimport Enrollment from './components/Enrollment';\nimport { PaymentAction } from '../../types/global-types';\nimport type { ICore } from '../../core/types';\n\nconst isAdyenHosted = () => {\n    try {\n        const currentUrl = new URL(window.location.href);\n        return currentUrl.hostname.endsWith('.adyen.com');\n    } catch (e) {\n        // SSR, or it fails to parse the full url\n        return false;\n    }\n};\nclass PayByBankPixElement extends UIElement<PayByBankPixConfiguration> {\n    public static readonly type = TxVariants.paybybank_pix;\n    private static readonly TIMEOUT_MINUTES = 1;\n    private readonly passkeyService: PasskeyService;\n\n    public static readonly defaultProps: PayByBankPixConfiguration = {\n        showPayButton: true,\n        _isAdyenHosted: isAdyenHosted(),\n        countdownTime: PayByBankPixElement.TIMEOUT_MINUTES\n    };\n\n    constructor(checkout: ICore, props?: PayByBankPixConfiguration) {\n        super(checkout, props);\n        const deviceId = this.props.storedPaymentMethodId ? this.props?.payByBankPixDetails?.deviceId : this.props.deviceId;\n        this.passkeyService = new PasskeyService({ environment: this.props.environment, deviceId });\n        if (this.props._isAdyenHosted) {\n            void this.passkeyService.initialize();\n        }\n    }\n\n    get isValid(): boolean {\n        // Always true for non-hosted page or stored payment\n        if (!this.props._isAdyenHosted || this.props.storedPaymentMethodId) {\n            return true;\n        }\n        return !!this.state?.isValid;\n    }\n\n    /**\n     * Display in the drop-in\n     */\n    get additionalInfo() {\n        return this.props.storedPaymentMethodId\n            ? this.props.i18n.get('paybybankpix.storedPayment.additionalLabel', { values: { receiver: this.props?.payByBankPixDetails?.receiver } })\n            : '';\n    }\n\n    /**\n     * Display in the drop-in\n     */\n    public override get icon() {\n        return this.props.storedPaymentMethodId\n            ? this.resources.getImage({ parentFolder: `${PayByBankPixElement.type}/` })(this.props?.payByBankPixDetails?.ispb)\n            : super.icon;\n    }\n\n    /**\n     * Method used to let the merchant know if the shopper's device supports WebAuthn APIs: https://featuredetect.passkeys.dev/\n     */\n    public override async isAvailable(): Promise<void> {\n        const unsupportedReason = await this.passkeyService.getWebAuthnUnsupportedReason();\n        if (unsupportedReason) {\n            return Promise.reject(new AdyenCheckoutError(ERROR, unsupportedReason));\n        }\n        if (!this.props._isAdyenHosted) {\n            return Promise.resolve();\n        }\n\n        // Load passkey sdk on the hosted page\n        try {\n            await this.passkeyService.initialize();\n\n            if (this.props.storedPaymentMethodId) {\n                // If the provided deviceId from the server does not match the localstorage deviceId, do not render the stored payment component.\n                const shouldShowStoredPaymentMethod = await this.passkeyService.canUseStoredCredential();\n                return shouldShowStoredPaymentMethod\n                    ? Promise.resolve()\n                    : Promise.reject(new AdyenCheckoutError('ERROR', 'The stored payment method is not available on this device'));\n            }\n\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject(error instanceof Error ? error?.message : 'Unknown error');\n        }\n    }\n\n    /**\n     * Make sure the await action UIElement is available before mounting\n     */\n    public override handleAction(action: PaymentAction, props: {} = {}): UIElement | null {\n        const paymentAction = this.core.createFromAction(action, {\n            ...this.elementRef.props,\n            ...props,\n            onAdditionalDetails: this.handleAdditionalDetails\n        });\n        if (paymentAction) {\n            this.unmount();\n            void paymentAction.isAvailable().then(() => {\n                paymentAction.mount(this._node);\n            });\n            return paymentAction;\n        }\n\n        return null;\n    }\n\n    formatData(): PayByBankPixData {\n        if (!this.props._isAdyenHosted) {\n            return {\n                paymentMethod: { type: TxVariants.paybybank_pix }\n            };\n        }\n\n        const isEnrollment = this.props.storedPaymentMethodId == null;\n        return {\n            paymentMethod: { type: TxVariants.paybybank_pix, ...this.state.data },\n            // Always store the payment method for the enrollment flow.\n            ...(isEnrollment ? { storePaymentMethod: true } : {})\n        };\n    }\n\n    /**\n     * There are 3 endpoints (stages) we need to call for the enrollment flow.\n     * The first one is the regular payments call on issuer selection - we indicate to store the payment token for the selected issuer.\n     * The second one is to poll the enrollment eligibility - we poll the server to get the enrollment challenge in the `getEnrollmentStatus` function.\n     * The third one is in the `authorizeEnrollment` function - we create passkeys and authorize the enrollment with shopper's passkey.\n     */\n    private readonly onIssuerSelected = async payload => {\n        try {\n            const { data = {} } = payload;\n            if (!data.issuer) {\n                return;\n            }\n\n            const { deviceId, ...riskSignals } = await this.passkeyService.captureRiskSignalsEnrollment();\n            this.setState({ ...payload, data: { ...data, riskSignals, deviceId } });\n        } catch (error) {\n            const errorMsg = error instanceof Error ? error.message : 'Unknown error in the onIssuerSelected';\n            this.handleError(error instanceof AdyenCheckoutError ? error : new AdyenCheckoutError(ERROR, errorMsg));\n        }\n    };\n\n    private readonly authorizeEnrollment = async (registrationOptions: string): Promise<void> => {\n        try {\n            const fidoAssertion = await this.passkeyService.createCredentialForEnrollment(registrationOptions); // Create passkey and trigger biometrics\n            const enrollment = { enrollmentId: this.props.paymentMethodData?.enrollmentId, fidoAssertion };\n            const { redirectResult } = await authorizeEnrollment({\n                enrollment,\n                clientKey: this.props.clientKey,\n                loadingContext: this.props.loadingContext\n            });\n            // Make paymentDetails call to finalize the enrollment.\n            this.handleAdditionalDetails({ data: { details: { redirectResult } } });\n        } catch (error) {\n            const errorMsg = error instanceof Error ? error.message : 'Unknown error in the authorizeEnrollment';\n            this.handleError(error instanceof AdyenCheckoutError ? error : new AdyenCheckoutError(ERROR, errorMsg));\n        }\n    };\n\n    /**\n     * There are 3 endpoints (stages) we need to call for the payment flow.\n     * The first one `payWithStoredPayment` is the regular payments call - we attempt to pay with the stored payment token.\n     * The second one is to poll the authorization options - we poll the server to get the challenge in the `getAuthorizationStatus` function.\n     * The third one is in the `authorizePayment` function - we authorize the payment with shopper's passkey.\n     */\n    private readonly payWithStoredPayment = async () => {\n        try {\n            const { deviceId, ...riskSignals } = await this.passkeyService.captureRiskSignalsAuthentication();\n            this.state = { ...this.state, ...{ data: { storedPaymentMethodId: this.props.storedPaymentMethodId, riskSignals, deviceId } } };\n            super.submit();\n        } catch (error) {\n            const errorMsg = error instanceof Error ? error.message : 'Unknown error in the payWithStoredPayment';\n            this.handleError(error instanceof AdyenCheckoutError ? error : new AdyenCheckoutError(ERROR, errorMsg));\n        }\n    };\n\n    private readonly authorizePayment = async (authenticationOptions: string): Promise<void> => {\n        try {\n            const fidoAssertion = await this.passkeyService.authenticateWithCredential(authenticationOptions);\n            const payment = {\n                enrollmentId: this.props.paymentMethodData?.enrollmentId,\n                initiationId: this.props.paymentMethodData?.initiationId,\n                fidoAssertion\n            };\n            const { redirectResult } = await authorizePayment({\n                payment,\n                clientKey: this.props.clientKey,\n                loadingContext: this.props.loadingContext\n            });\n            this.handleAdditionalDetails({ data: { details: { redirectResult } } });\n        } catch (error) {\n            const errorMsg = error instanceof Error ? error.message : 'Unknown error in the authorizePayment';\n            this.handleError(error instanceof AdyenCheckoutError ? error : new AdyenCheckoutError(ERROR, errorMsg));\n        }\n    };\n\n    render() {\n        // Always render the redirect button on the merchant's page\n        if (!this.props._isAdyenHosted) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                        <RedirectButton\n                            showPayButton={this.props.showPayButton}\n                            name={this.displayName}\n                            label={this.props.i18n.get('paybybankpix.redirectBtn.label')}\n                            amount={this.props.amount}\n                            payButton={this.payButton}\n                            onSubmit={this.submit}\n                            ref={ref => {\n                                this.componentRef = ref;\n                            }}\n                        />\n                    </SRPanelProvider>\n                </CoreProvider>\n            );\n        }\n\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                    {this.props.storedPaymentMethodId != null ? (\n                        <StoredPayment\n                            txVariant={PayByBankPixElement.type}\n                            type={this.props.type}\n                            clientKey={this.props.clientKey}\n                            amount={this.props.amount}\n                            issuer={this.props?.payByBankPixDetails?.ispb}\n                            receiver={this.props?.payByBankPixDetails?.receiver}\n                            enrollmentId={this.props.paymentMethodData?.enrollmentId}\n                            initiationId={this.props.paymentMethodData?.initiationId}\n                            setComponentRef={this.setComponentRef}\n                            onPay={this.payWithStoredPayment}\n                            onAuthorize={this.authorizePayment}\n                        />\n                    ) : (\n                        <Enrollment\n                            onError={this.handleError}\n                            txVariant={PayByBankPixElement.type}\n                            // Await\n                            type={this.props.type}\n                            clientKey={this.props.clientKey}\n                            enrollmentId={this.props.paymentMethodData?.enrollmentId}\n                            countdownTime={this.props.countdownTime}\n                            onEnroll={this.authorizeEnrollment}\n                            // Issuer List\n                            issuers={this.props.issuers}\n                            payButton={this.payButton}\n                            onChange={this.onIssuerSelected}\n                            onSubmitAnalytics={this.submitAnalytics}\n                            setComponentRef={this.setComponentRef}\n                        />\n                    )}\n                </SRPanelProvider>\n            </CoreProvider>\n        );\n    }\n}\n//\nexport default PayByBankPixElement;\n"],"names":["PayByBankPixElement","UIElement","isValid","_this_state","this","props","_isAdyenHosted","storedPaymentMethodId","state","additionalInfo","_this_props_payByBankPixDetails","_this_props","i18n","get","values","receiver","payByBankPixDetails","icon","resources","getImage","parentFolder","type","ispb","super","isAvailable","unsupportedReason","passkeyService","getWebAuthnUnsupportedReason","Promise","reject","AdyenCheckoutError","ERROR","resolve","initialize","canUseStoredCredential","error","Error","message","handleAction","action","paymentAction","core","createFromAction","_object_spread_props","_object_spread","elementRef","onAdditionalDetails","handleAdditionalDetails","unmount","then","mount","_node","formatData","paymentMethod","TxVariants","paybybank_pix","isEnrollment","data","storePaymentMethod","render","_this_props_payByBankPixDetails1","_this_props1","_this_props_paymentMethodData","_this_props_paymentMethodData1","_this_props_paymentMethodData2","h","CoreProvider","loadingContext","SRPanelProvider","srPanel","modules","StoredPayment","txVariant","clientKey","amount","issuer","enrollmentId","paymentMethodData","initiationId","setComponentRef","onPay","payWithStoredPayment","onAuthorize","authorizePayment","Enrollment","onError","handleError","countdownTime","onEnroll","authorizeEnrollment","issuers","payButton","onChange","onIssuerSelected","onSubmitAnalytics","submitAnalytics","RedirectButton","showPayButton","name","displayName","label","onSubmit","submit","ref","componentRef","constructor","checkout","_define_property","async","payload","_ref","captureRiskSignalsEnrollment","deviceId","riskSignals","_object_without_properties","setState","errorMsg","registrationOptions","fidoAssertion","createCredentialForEnrollment","enrollment","redirectResult","details","captureRiskSignalsAuthentication","authenticationOptions","authenticateWithCredential","payment","PasskeyService","environment","TIMEOUT_MINUTES","defaultProps","URL","window","location","href","hostname","endsWith","e","isAdyenHosted"],"mappings":"m4DAyBA,MAAMA,UAA4BC,EAoB9B,WAAIC,GAKS,IAAAC,EAHT,QAAKC,KAAKC,MAAMC,iBAAkBF,KAAKC,MAAME,2BAG1B,QAAVJ,EAAAC,KAAKI,aAAL,IAAAL,OAAA,EAAAA,EAAYD,QACzB,CAKA,kBAAIO,OAE8FC,EAAAC,EAD9F,OAAOP,KAAKC,MAAME,sBACZH,KAAKC,MAAMO,KAAKC,IAAI,6CAA8C,CAAEC,OAAQ,CAAEC,SAAoB,QAAVJ,EAAAP,KAAKC,aAAL,IAAAM,GAAA,QAAAD,EAAAC,EAAYK,2BAAZ,IAAAN,OAAA,EAAAA,EAAiCK,YACzH,EACV,CAKA,QAAoBE,OAEgEP,EAAAC,EADhF,OAAOP,KAAKC,MAAME,sBACZH,KAAKc,UAAUC,SAAS,CAAEC,aAAc,GAAGpB,EAAoBqB,SAA/DjB,SAA0EO,EAAAP,KAAKC,aAAL,IAAAM,WAAAD,EAAAC,EAAYK,2BAAZ,IAAAN,OAAA,EAAAA,EAAiCY,MAC3GC,MAAMN,IAChB,CAKA,iBAAsBO,GAClB,MAAMC,QAA0BrB,KAAKsB,eAAeC,+BACpD,GAAIF,EACA,OAAOG,QAAQC,OAAO,IAAIC,EAAmBC,EAAON,IAExD,IAAKrB,KAAKC,MAAMC,eACZ,OAAOsB,QAAQI,UAInB,IAGI,SAFM5B,KAAKsB,eAAeO,aAEtB7B,KAAKC,MAAME,sBAAuB,CAGlC,aAD4CH,KAAKsB,eAAeQ,yBAE1DN,QAAQI,UACRJ,QAAQC,OAAO,IAAIC,EAAmB,QAAS,6DACzD,CAEA,OAAOF,QAAQI,SACnB,CAAE,MAAOG,GACL,OAAOP,QAAQC,OAAOM,aAAiBC,MAAQD,aAAAA,EAAAA,EAAOE,QAAU,gBACpE,CACJ,CAKA,YAAAC,CAA6BC,EAAuBlC,EAAY,IAC5D,MAAMmC,EAAgBpC,KAAKqC,KAAKC,iBAAiBH,EAAQI,EAAAC,EAAA,CAAA,EAClDxC,KAAKyC,WAAWxC,MAChBA,GAAAA,CACHyC,oBAAqB1C,KAAK2C,2BAE9B,OAAIP,GACApC,KAAK4C,UACAR,EAAchB,cAAcyB,MAAK,KAClCT,EAAcU,MAAM9C,KAAK+C,MAAK,IAE3BX,GAGJ,IACX,CAEAY,UAAAA,GACI,IAAKhD,KAAKC,MAAMC,eACZ,MAAO,CACH+C,cAAe,CAAEhC,KAAMiC,EAAWC,gBAI1C,MAAMC,EAAmD,MAApCpD,KAAKC,MAAME,sBAChC,OAAOqC,EAAA,CACHS,cAAeT,EAAA,CAAEvB,KAAMiC,EAAWC,eAAkBnD,KAAKI,MAAMiD,OAE3DD,EAAe,CAAEE,oBAAoB,GAAS,GAE1D,CA6EAC,MAAAA,GA+BgC,IAAAjD,EAAAC,EACEiD,EAAAC,EACIC,EACAC,EAYAC,EA5ClC,OAAK5D,KAAKC,MAAMC,eAqBZ2D,EAACC,EAAAA,CAAatD,KAAMR,KAAKC,MAAMO,KAAMuD,eAAgB/D,KAAKC,MAAM8D,eAAgBjD,UAAWd,KAAKc,WAC5F+C,EAACG,EAAAA,CAAgBC,QAASjE,KAAKC,MAAMiE,QAAQD,SACJ,MAApCjE,KAAKC,MAAME,sBACR0D,EAACM,EAAAA,CACGC,UAAWxE,EAAoBqB,KAC/BA,KAAMjB,KAAKC,MAAMgB,KACjBoD,UAAWrE,KAAKC,MAAMoE,UACtBC,OAAQtE,KAAKC,MAAMqE,OACnBC,OAAkB,QAAVhE,EAAAP,KAAKC,aAAL,IAAAM,GAAA,QAAAD,EAAAC,EAAYK,2BAAZ,IAAAN,OAAA,EAAAA,EAAiCY,KACzCP,SAAoB,QAAV8C,EAAAzD,KAAKC,aAAL,IAAAwD,GAAA,QAAAD,EAAAC,EAAY7C,2BAAZ,IAAA4C,OAAA,EAAAA,EAAiC7C,SAC3C6D,aAA0C,QAA5Bd,EAAA1D,KAAKC,MAAMwE,yBAAX,IAAAf,OAAA,EAAAA,EAA8Bc,aAC5CE,aAA0C,QAA5Bf,EAAA3D,KAAKC,MAAMwE,yBAAX,IAAAd,OAAA,EAAAA,EAA8Be,aAC5CC,gBAAiB3E,KAAK2E,gBACtBC,MAAO5E,KAAK6E,qBACZC,YAAa9E,KAAK+E,mBAGtBlB,EAACmB,EAAAA,CACGC,QAASjF,KAAKkF,YACdd,UAAWxE,EAAoBqB,KAE/BA,KAAMjB,KAAKC,MAAMgB,KACjBoD,UAAWrE,KAAKC,MAAMoE,UACtBG,aAA0C,QAA5BZ,EAAA5D,KAAKC,MAAMwE,yBAAX,IAAAb,OAAA,EAAAA,EAA8BY,aAC5CW,cAAenF,KAAKC,MAAMkF,cAC1BC,SAAUpF,KAAKqF,oBAEfC,QAAStF,KAAKC,MAAMqF,QACpBC,UAAWvF,KAAKuF,UAChBC,SAAUxF,KAAKyF,iBACfC,kBAAmB1F,KAAK2F,gBACxBhB,gBAAiB3E,KAAK2E,oBAlDlCd,EAACC,EAAAA,CAAatD,KAAMR,KAAKC,MAAMO,KAAMuD,eAAgB/D,KAAKC,MAAM8D,eAAgBjD,UAAWd,KAAKc,WAC5F+C,EAACG,EAAAA,CAAgBC,QAASjE,KAAKC,MAAMiE,QAAQD,SACzCJ,EAAC+B,EAAAA,CACGC,cAAe7F,KAAKC,MAAM4F,cAC1BC,KAAM9F,KAAK+F,YACXC,MAAOhG,KAAKC,MAAMO,KAAKC,IAAI,kCAC3B6D,OAAQtE,KAAKC,MAAMqE,OACnBiB,UAAWvF,KAAKuF,UAChBU,SAAUjG,KAAKkG,OACfC,IAAKA,IACDnG,KAAKoG,aAAeD,CAAAA,KA8ChD,CA3OAE,WAAAA,CAAYC,EAAiBrG,OAE2BK,EAAAC,EADpDY,MAAMmF,EAAUrG,GATpBsG,EAAiBjF,KAAAA,sBAAjB,GAkHAiF,EAAAvG,KAAiByF,oBAAmBe,MAAMC,IACtC,IACI,MAAMpD,KAAEA,EAAO,CAAE,GAAKoD,EACtB,IAAKpD,EAAKkB,OACN,OAGJ,MAAqCmC,QAAM1G,KAAKsB,eAAeqF,gCAAzDC,SAAEA,GAA6BF,EAAhBG,EAAgBC,EAAAJ,EAAA,CAA7BE,aACR5G,KAAK+G,SAASxE,EAAKkE,EAAAA,CAAAA,EAAAA,GAAAA,CAASpD,KAAMd,EAAKc,EAAAA,CAAAA,EAAAA,GAAAA,CAAMwD,cAAaD,eAC9D,CAAE,MAAO7E,GACL,MAAMiF,EAAWjF,aAAiBC,MAAQD,EAAME,QAAU,wCAC1DjC,KAAKkF,YAAYnD,aAAiBL,EAAqBK,EAAQ,IAAIL,EAAmBC,EAAOqF,GACjG,KAGJT,EAAAvG,KAAiBqF,uBAAsBmB,MAAOS,IAC1C,IAEuC,IAAAvD,EADnC,MAAMwD,QAAsBlH,KAAKsB,eAAe6F,8BAA8BF,GACxEG,EAAa,CAAE5C,aAA0C,QAA5Bd,EAAA1D,KAAKC,MAAMwE,yBAAX,IAAAf,OAAA,EAAAA,EAA8Bc,aAAc0C,kBACzEG,eAAEA,SAAyBhC,EAAoB,CACjD+B,aACA/C,UAAWrE,KAAKC,MAAMoE,UACtBN,eAAgB/D,KAAKC,MAAM8D,iBAG/B/D,KAAK2C,wBAAwB,CAAEU,KAAM,CAAEiE,QAAS,CAAED,oBACtD,CAAE,MAAOtF,GACL,MAAMiF,EAAWjF,aAAiBC,MAAQD,EAAME,QAAU,2CAC1DjC,KAAKkF,YAAYnD,aAAiBL,EAAqBK,EAAQ,IAAIL,EAAmBC,EAAOqF,GACjG,KASJT,OAAiB1B,wBAAuB2B,UACpC,IACI,MAAqCE,QAAM1G,KAAKsB,eAAeiG,oCAAzDX,SAAEA,GAA6BF,EAAhBG,EAAgBC,EAAAJ,EAAA,CAA7BE,aACR5G,KAAKI,MAAQoC,KAAKxC,KAAKI,MAAU,CAAEiD,KAAM,CAAElD,sBAAuBH,KAAKC,MAAME,sBAAuB0G,cAAaD,cACjHzF,MAAM+E,QACV,CAAE,MAAOnE,GACL,MAAMiF,EAAWjF,aAAiBC,MAAQD,EAAME,QAAU,4CAC1DjC,KAAKkF,YAAYnD,aAAiBL,EAAqBK,EAAQ,IAAIL,EAAmBC,EAAOqF,GACjG,KAGJT,EAAAvG,KAAiB+E,oBAAmByB,MAAOgB,IACvC,QAGsB9D,EACAC,EAHlB,MAAMuD,QAAsBlH,KAAKsB,eAAemG,2BAA2BD,GACrEE,EAAU,CACZlD,aAA0C,QAA5Bd,EAAA1D,KAAKC,MAAMwE,yBAAX,IAAAf,OAAA,EAAAA,EAA8Bc,aAC5CE,aAA0C,QAA5Bf,EAAA3D,KAAKC,MAAMwE,yBAAX,IAAAd,OAAA,EAAAA,EAA8Be,aAC5CwC,kBAEEG,eAAEA,SAAyBtC,EAAiB,CAC9C2C,UACArD,UAAWrE,KAAKC,MAAMoE,UACtBN,eAAgB/D,KAAKC,MAAM8D,iBAE/B/D,KAAK2C,wBAAwB,CAAEU,KAAM,CAAEiE,QAAS,CAAED,oBACtD,CAAE,MAAOtF,GACL,MAAMiF,EAAWjF,aAAiBC,MAAQD,EAAME,QAAU,wCAC1DjC,KAAKkF,YAAYnD,aAAiBL,EAAqBK,EAAQ,IAAIL,EAAmBC,EAAOqF,GACjG,KA1KA,MAAMJ,EAAW5G,KAAKC,MAAME,sBAAkC,QAAVI,EAAAP,KAAKC,iBAALM,GAA+B,QAA/BD,EAAAC,EAAYK,2BAAZ,IAAAN,SAAAA,EAAiCsG,SAAW5G,KAAKC,MAAM2G,SAC3G5G,KAAKsB,eAAiB,IAAIqG,EAAe,CAAEC,YAAa5H,KAAKC,MAAM2H,YAAahB,aAC5E5G,KAAKC,MAAMC,gBACNF,KAAKsB,eAAeO,YAEjC,EAjBA0E,EADE3G,EACqBqB,OAAOiC,EAAWC,eACzCoD,EAFE3G,EAEsBiI,kBAAkB,GAG1CtB,EALE3G,EAKqBkI,eAA0C,CAC7DjC,eAAe,EACf3F,eAhBc,MAClB,IAEI,OADmB,IAAI6H,IAAIC,OAAOC,SAASC,MACzBC,SAASC,SAAS,aACxC,CAAE,MAAOC,GAEL,OAAO,CACX,GASoBC,GAChBnD,cAAevF,EAAoBiI"}