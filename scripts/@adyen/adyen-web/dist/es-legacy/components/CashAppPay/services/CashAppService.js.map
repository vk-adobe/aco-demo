{"version":3,"file":"CashAppService.js","sources":["../../../../../src/components/CashAppPay/services/CashAppService.ts"],"sourcesContent":["import { ICashAppSdkLoader } from './CashAppSdkLoader';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\nimport { CashAppPayEvents, CashAppServiceConfig, ICashAppSDK, ICashAppService } from './types';\n\nexport default class CashAppService implements ICashAppService {\n    private readonly sdkLoader: ICashAppSdkLoader;\n    private readonly configuration: CashAppServiceConfig;\n\n    private pay: ICashAppSDK;\n\n    /**\n     * Reference to CashApp 'begin' method\n     */\n    private startAuthorization?: () => void;\n\n    constructor(sdkLoader: ICashAppSdkLoader, configuration: CashAppServiceConfig) {\n        this.configuration = configuration;\n        this.sdkLoader = sdkLoader;\n\n        if (!configuration.clientId) {\n            console.warn('CashAppService: clientId is missing');\n        }\n    }\n\n    get hasOneTimePayment() {\n        const { amount } = this.configuration;\n        return amount?.value > 0;\n    }\n\n    get hasOnFilePayment() {\n        return this.configuration.storePaymentMethod;\n    }\n\n    public setStorePaymentMethod(store: boolean) {\n        this.configuration.storePaymentMethod = store;\n    }\n\n    public async initialize(): Promise<void> {\n        try {\n            const { environment, clientId } = this.configuration;\n            const cashApp = await this.sdkLoader.load(environment);\n            this.pay = await cashApp.pay({ clientId });\n        } catch (error) {\n            throw new AdyenCheckoutError('ERROR', 'Error during initialization', { cause: error });\n        }\n    }\n\n    public async renderButton(target: HTMLElement): Promise<void> {\n        try {\n            const { button, useCashAppButtonUi } = this.configuration;\n\n            const { begin } = await this.pay.render(target, {\n                manage: false,\n                button: useCashAppButtonUi ? { width: 'full', shape: 'semiround', ...button } : false\n            });\n            this.startAuthorization = begin;\n        } catch (error) {\n            throw new AdyenCheckoutError('ERROR', 'Error rendering CashAppPay button', { cause: error });\n        }\n    }\n\n    public begin(): void {\n        if (!this.startAuthorization) console.warn('CashAppService - begin() not available');\n        else this.startAuthorization();\n    }\n\n    public subscribeToEvent(eventType: CashAppPayEvents, callback: Function): Function {\n        this.pay.addEventListener(eventType, callback);\n        return () => {\n            this.pay.removeEventListener(eventType, callback);\n        };\n    }\n\n    public async createCustomerRequest(): Promise<void> {\n        try {\n            const { referenceId, amount, scopeId, redirectURL = window.location.href } = this.configuration;\n\n            const customerRequest = {\n                referenceId,\n                redirectURL,\n                actions: {\n                    ...(this.hasOneTimePayment && {\n                        payment: {\n                            amount,\n                            scopeId\n                        }\n                    }),\n                    ...(this.hasOnFilePayment && {\n                        onFile: {\n                            scopeId\n                        }\n                    })\n                }\n            };\n            await this.pay.customerRequest(customerRequest);\n        } catch (error) {\n            throw new AdyenCheckoutError('ERROR', 'Something went wrong during customerRequest creation', { cause: error });\n        }\n    }\n\n    public async restart(): Promise<void> {\n        await this.pay.restart();\n    }\n}\n"],"names":["CashAppService","hasOneTimePayment","amount","this","configuration","value","hasOnFilePayment","storePaymentMethod","setStorePaymentMethod","store","initialize","environment","clientId","cashApp","sdkLoader","load","pay","error","AdyenCheckoutError","cause","renderButton","target","button","useCashAppButtonUi","begin","render","manage","_object_spread","width","shape","startAuthorization","console","warn","subscribeToEvent","eventType","callback","addEventListener","removeEventListener","createCustomerRequest","referenceId","scopeId","redirectURL","window","location","href","customerRequest","actions","payment","onFile","restart","constructor","_define_property"],"mappings":"0fAIe,MAAMA,EAoBjB,qBAAIC,GACA,MAAMC,OAAEA,GAAWC,KAAKC,cACxB,OAAOF,aAAAA,EAAAA,EAAQG,OAAQ,CAC3B,CAEA,oBAAIC,GACA,OAAOH,KAAKC,cAAcG,kBAC9B,CAEOC,qBAAAA,CAAsBC,GACzBN,KAAKC,cAAcG,mBAAqBE,CAC5C,CAEA,gBAAaC,GACT,IACI,MAAMC,YAAEA,EAAWC,SAAEA,GAAaT,KAAKC,cACjCS,QAAgBV,KAAKW,UAAUC,KAAKJ,GAC1CR,KAAKa,UAAYH,EAAQG,IAAI,CAAEJ,YACnC,CAAE,MAAOK,GACL,MAAM,IAAIC,EAAmB,QAAS,8BAA+B,CAAEC,MAAOF,GAClF,CACJ,CAEA,kBAAaG,CAAaC,GACtB,IACI,MAAMC,OAAEA,EAAMC,mBAAEA,GAAuBpB,KAAKC,eAEtCoB,MAAEA,SAAgBrB,KAAKa,IAAIS,OAAOJ,EAAQ,CAC5CK,QAAQ,EACRJ,SAAQC,GAAqBI,EAAA,CAAEC,MAAO,OAAQC,MAAO,aAAgBP,KAEzEnB,KAAK2B,mBAAqBN,CAC9B,CAAE,MAAOP,GACL,MAAM,IAAIC,EAAmB,QAAS,oCAAqC,CAAEC,MAAOF,GACxF,CACJ,CAEOO,KAAAA,GACErB,KAAK2B,mBACL3B,KAAK2B,qBADoBC,QAAQC,KAAK,yCAE/C,CAEOC,gBAAAA,CAAiBC,EAA6BC,GAEjD,OADAhC,KAAKa,IAAIoB,iBAAiBF,EAAWC,GAC9B,KACHhC,KAAKa,IAAIqB,oBAAoBH,EAAWC,EAAAA,CAEhD,CAEA,2BAAaG,GACT,IACI,MAAMC,YAAEA,EAAWrC,OAAEA,EAAMsC,QAAEA,EAAOC,YAAEA,EAAcC,OAAOC,SAASC,MAASzC,KAAKC,cAE5EyC,EAAkB,CACpBN,cACAE,cACAK,QAASnB,EACD,GAAAxB,KAAKF,mBAAqB,CAC1B8C,QAAS,CACL7C,SACAsC,YAGJrC,KAAKG,kBAAoB,CACzB0C,OAAQ,CACJR,oBAKVrC,KAAKa,IAAI6B,gBAAgBA,EACnC,CAAE,MAAO5B,GACL,MAAM,IAAIC,EAAmB,QAAS,uDAAwD,CAAEC,MAAOF,GAC3G,CACJ,CAEA,aAAagC,SACH9C,KAAKa,IAAIiC,SACnB,CAvFAC,WAAAA,CAAYpC,EAA8BV,GAV1C+C,EAAAhD,KAAiBW,iBAAjB,GACAqC,EAAAhD,KAAiBC,qBAAjB,GAEA+C,EAAAhD,KAAQa,WAAR,GAKAmC,EAAAhD,KAAQ2B,0BAAR,GAGI3B,KAAKC,cAAgBA,EACrBD,KAAKW,UAAYA,EAEZV,EAAcQ,UACfmB,QAAQC,KAAK,sCAErB"}