{"version":3,"file":"create-clicktopay-service.js","sources":["../../../../../../src/components/internal/ClickToPay/services/create-clicktopay-service.ts"],"sourcesContent":["import SrcSdkLoader from './sdks/SrcSdkLoader';\nimport ClickToPayService from './ClickToPayService';\nimport { IClickToPayService, IdentityLookupParams } from './types';\nimport { SrcInitParams } from './sdks/types';\nimport { CardBackendConfiguration } from '../../../Card/types';\nimport { ClickToPayProps, ClickToPayScheme } from '../types';\n\n/**\n * Creates the Click to Pay service in case the required configuration is provided\n */\nexport default function createClickToPayService(\n    configuration: CardBackendConfiguration,\n    clickToPayConfiguration: ClickToPayProps | undefined,\n    environment: string\n): IClickToPayService | null {\n    const schemesConfig = createSchemesInitConfiguration(configuration);\n\n    if (!schemesConfig) {\n        return null;\n    }\n\n    const shopperIdentity = createShopperIdentityObject(clickToPayConfiguration?.shopperEmail, clickToPayConfiguration?.telephoneNumber);\n\n    const schemeNames = Object.keys(schemesConfig);\n    const srcSdkLoader = new SrcSdkLoader(schemeNames, {\n        dpaLocale: clickToPayConfiguration?.locale,\n        dpaPresentationName: clickToPayConfiguration?.merchantDisplayName\n    });\n    return new ClickToPayService(schemesConfig, srcSdkLoader, environment, shopperIdentity, clickToPayConfiguration?.onTimeout);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst createShopperIdentityObject = (shopperEmail: string, telephoneNumber: string): IdentityLookupParams | null => {\n    const identityLookup = {\n        ...(shopperEmail && { shopperEmail })\n        // ...(telephoneNumber && { telephoneNumber }) telephoneNumber not supported yet\n    };\n\n    return Object.keys(identityLookup).length > 0 ? identityLookup : null;\n};\n\n/**\n * Parses 'configuration' object that comes from the Card payment method config, and try to create the Click to Pay\n * initialization object in case the values are provided.\n */\nconst createSchemesInitConfiguration = (configuration: CardBackendConfiguration): Record<ClickToPayScheme, SrcInitParams> => {\n    if (!configuration) {\n        return null;\n    }\n\n    const { visaSrciDpaId, visaSrcInitiatorId, mcDpaId, mcSrcClientId } = configuration;\n\n    const schemesConfig: Record<ClickToPayScheme, SrcInitParams> = {\n        ...(mcDpaId && mcSrcClientId && { mc: { srciDpaId: mcDpaId, srcInitiatorId: mcSrcClientId } }),\n        ...(visaSrciDpaId &&\n            visaSrcInitiatorId && {\n                visa: {\n                    srciDpaId: visaSrciDpaId,\n                    srcInitiatorId: visaSrcInitiatorId\n                }\n            })\n    };\n    return Object.keys(schemesConfig).length === 0 ? null : schemesConfig;\n};\n"],"names":["createClickToPayService","configuration","clickToPayConfiguration","environment","schemesConfig","createSchemesInitConfiguration","shopperIdentity","createShopperIdentityObject","shopperEmail","telephoneNumber","schemeNames","Object","keys","srcSdkLoader","SrcSdkLoader","dpaLocale","locale","dpaPresentationName","merchantDisplayName","ClickToPayService","onTimeout","identityLookup","_object_spread","length","visaSrciDpaId","visaSrcInitiatorId","mcDpaId","mcSrcClientId","mc","srciDpaId","srcInitiatorId","visa"],"mappings":"4gBAUe,SAASA,EACpBC,EACAC,EACAC,GAEA,MAAMC,EAAgBC,EAA+BJ,GAErD,IAAKG,EACD,OAAO,KAGX,MAAME,EAAkBC,EAA4BL,aAAAA,EAAAA,EAAyBM,aAAcN,aAAAA,EAAAA,EAAyBO,iBAE9GC,EAAcC,OAAOC,KAAKR,GAC1BS,EAAe,IAAIC,EAAaJ,EAAa,CAC/CK,UAAWb,aAAAA,EAAAA,EAAyBc,OACpCC,oBAAqBf,aAAAA,EAAAA,EAAyBgB,sBAElD,OAAO,IAAIC,EAAkBf,EAAeS,EAAcV,EAAaG,EAAiBJ,aAAAA,EAAAA,EAAyBkB,UACrH,CAGA,MAAMb,EAA8B,CAACC,EAAsBC,KACvD,MAAMY,EAAiBC,KACfd,GAAgB,CAAEA,iBAI1B,OAAOG,OAAOC,KAAKS,GAAgBE,OAAS,EAAIF,EAAiB,IAAA,EAO/DhB,EAAkCJ,IACpC,IAAKA,EACD,OAAO,KAGX,MAAMuB,cAAEA,EAAaC,mBAAEA,EAAkBC,QAAEA,EAAOC,cAAEA,GAAkB1B,EAEhEG,EAAyDkB,EACvDI,GAAAA,GAAWC,GAAiB,CAAEC,GAAI,CAAEC,UAAWH,EAASI,eAAgBH,IACxEH,GACAC,GAAsB,CAClBM,KAAM,CACFF,UAAWL,EACXM,eAAgBL,KAIhC,OAA6C,IAAtCd,OAAOC,KAAKR,GAAemB,OAAe,KAAOnB,CAAAA"}