import{createElement as t}from"../../../../external/preact/dist/preact.js";import{CtpState as o}from"../services/ClickToPayService.js";import{ClickToPayContext as e}from"./ClickToPayContext.js";import{useState as a,useRef as n,useEffect as i,useCallback as s}from"../../../../external/preact/hooks/dist/hooks.js";const r=({isStandaloneComponent:r=!1,clickToPayService:l,amount:d,configuration:u,children:c,setClickToPayRef:p,onSubmit:v,onSetStatus:y,onError:m})=>{var S,C;const[f]=a(l),[h,k]=a((null==l?void 0:l.state)||o.NotAvailable),[I,P]=a(!0),[w,b]=a("ready"),g=n({}),E=n(!1);i((()=>{p(g.current),g.current.setStatus=b}),[]),i((()=>{null==f||f.subscribeOnStateChange((t=>k(t)))}),[f]);const V=s((()=>{var t;E.current||(null===(t=u.onReady)||void 0===t||t.call(u),E.current=!0)}),[null==u?void 0:u.onReady]),R=s((async t=>{await(null==f?void 0:f.finishIdentityValidation(t))}),[f]),j=s((async()=>await(null==f?void 0:f.startIdentityValidation())),[f]),x=s((async t=>await(null==f?void 0:f.checkout(t))),[f]),T=s((async t=>await(null==f?void 0:f.verifyIfShopperIsEnrolled(t))),[f]),M=s((async()=>{await(null==f?void 0:f.logout())}),[f]),N=s((t=>{f.updateStoreCookiesConsent(t)}),[f]);return t(e.Provider,{value:{status:w,onSubmit:v,onError:m,onSetStatus:y,amount:d,configuration:u,isStoringCookies:null==f?void 0:f.storeCookies,isStandaloneComponent:r,isCtpPrimaryPaymentMethod:I,setIsCtpPrimaryPaymentMethod:P,ctpState:h,verifyIfShopperIsEnrolled:T,cards:null==f?void 0:f.shopperCards,schemes:null==f?void 0:f.schemes,otpMaskedContact:null==f||null===(S=f.identityValidationData)||void 0===S?void 0:S.maskedShopperContact,otpNetwork:null==f||null===(C=f.identityValidationData)||void 0===C?void 0:C.selectedNetwork,checkout:x,logoutShopper:M,startIdentityValidation:j,finishIdentityValidation:R,updateStoreCookiesConsent:N,onReady:V}},c)};export{r as default};
//# sourceMappingURL=ClickToPayProvider.js.map
