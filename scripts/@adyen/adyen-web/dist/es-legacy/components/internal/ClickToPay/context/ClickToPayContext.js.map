{"version":3,"file":"ClickToPayContext.js","sources":["../../../../../../src/components/internal/ClickToPay/context/ClickToPayContext.ts"],"sourcesContent":["import { createContext } from 'preact';\nimport { CtpState } from '../services/ClickToPayService';\nimport { ClickToPayCheckoutPayload, IClickToPayService } from '../services/types';\nimport ShopperCard from '../models/ShopperCard';\nimport { ClickToPayProps } from '../types';\nimport { PaymentAmount } from '../../../../types/global-types';\nimport AdyenCheckoutError from '../../../../core/Errors/AdyenCheckoutError';\nimport { UIElementStatus } from '../../UIElement/types';\n\nexport interface IClickToPayContext\n    extends Pick<IClickToPayService, 'checkout' | 'startIdentityValidation' | 'finishIdentityValidation' | 'verifyIfShopperIsEnrolled'> {\n    isStandaloneComponent: boolean;\n    isCtpPrimaryPaymentMethod: boolean;\n    isStoringCookies: boolean;\n    setIsCtpPrimaryPaymentMethod(isPrimary: boolean): void;\n    logoutShopper(): Promise<void>;\n    updateStoreCookiesConsent(shouldStore: boolean): void;\n    ctpState: CtpState;\n    cards: ShopperCard[];\n    schemes: string[];\n    otpMaskedContact: string;\n    otpNetwork: string;\n    amount: PaymentAmount;\n    configuration: ClickToPayProps;\n    status: UIElementStatus;\n    onSubmit(payload: ClickToPayCheckoutPayload): void;\n    onSetStatus(status: UIElementStatus): void;\n    onError(error: AdyenCheckoutError): void;\n    onReady(): void;\n}\n\nconst ClickToPayContext = createContext<IClickToPayContext>({\n    status: null,\n    onSubmit: null,\n    onSetStatus: null,\n    onError: null,\n    onReady: null,\n    amount: null,\n    configuration: null,\n    isStandaloneComponent: null,\n    isCtpPrimaryPaymentMethod: null,\n    isStoringCookies: false,\n    setIsCtpPrimaryPaymentMethod: null,\n    logoutShopper: null,\n    updateStoreCookiesConsent: null,\n    ctpState: null,\n    cards: [],\n    schemes: [],\n    otpMaskedContact: null,\n    otpNetwork: null,\n    checkout: null,\n    verifyIfShopperIsEnrolled: null,\n    startIdentityValidation: null,\n    finishIdentityValidation: null\n});\n\nexport { ClickToPayContext };\n"],"names":["ClickToPayContext","createContext","status","onSubmit","onSetStatus","onError","onReady","amount","configuration","isStandaloneComponent","isCtpPrimaryPaymentMethod","isStoringCookies","setIsCtpPrimaryPaymentMethod","logoutShopper","updateStoreCookiesConsent","ctpState","cards","schemes","otpMaskedContact","otpNetwork","checkout","verifyIfShopperIsEnrolled","startIdentityValidation","finishIdentityValidation"],"mappings":"2EA+BA,MAAMA,EAAoBC,EAAkC,CACxDC,OAAQ,KACRC,SAAU,KACVC,YAAa,KACbC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,cAAe,KACfC,sBAAuB,KACvBC,0BAA2B,KAC3BC,kBAAkB,EAClBC,6BAA8B,KAC9BC,cAAe,KACfC,0BAA2B,KAC3BC,SAAU,KACVC,MAAO,GACPC,QAAS,GACTC,iBAAkB,KAClBC,WAAY,KACZC,SAAU,KACVC,0BAA2B,KAC3BC,wBAAyB,KACzBC,yBAA0B"}