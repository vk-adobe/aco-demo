{"version":3,"file":"initCSF.js","sources":["../../../../../../../src/components/internal/SecuredFields/lib/CSF/initCSF.ts"],"sourcesContent":["import CSF from './CSF';\nimport cardType from './utils/cardType';\nimport * as logger from '../utilities/logger';\nimport { falsy } from '../../../../../utils/commonUtils';\nimport { CSFReturnObject, CSFSetupObject } from './types';\nimport { hasOwnProperty } from '../../../../../utils/hasOwnProperty';\nimport { selectOne } from '../utilities/dom';\n\nconst initCSF = (pSetupObj: CSFSetupObject): CSFReturnObject => {\n    if (!pSetupObj) {\n        throw new Error('No securedFields configuration object defined');\n    }\n\n    const setupObj: CSFSetupObject = { ...pSetupObj };\n\n    try {\n        // Map the generic types (i.e. 'card', 'scheme') to 'card'\n        const isGenericCardType: boolean = cardType.isGenericCardType(setupObj.type);\n        setupObj.type = isGenericCardType ? 'card' : setupObj.type;\n    } catch (e) {\n        // If type has not been specified - ensure there is a default\n        setupObj.type = 'card';\n    }\n\n    // //////// 1. Check passed config object has minimum expected properties //////////\n    if (!hasOwnProperty(setupObj, 'rootNode')) {\n        return logger.error('ERROR: SecuredFields configuration object is missing a \"rootNode\" property');\n    }\n\n    if (falsy(setupObj.clientKey)) {\n        return logger.warn('WARNING: AdyenCheckout configuration object is missing a \"clientKey\" property.');\n    }\n\n    //----------------------------------------------------------------------------\n\n    // //////// 2. Find and store reference to the root DOM element //////////\n    const rootNode: HTMLElement = findRootNode(setupObj.rootNode);\n\n    if (!rootNode) {\n        return logger.error(`ERROR: SecuredFields cannot find a valid rootNode element for ${setupObj.type}`);\n    }\n\n    setupObj.rootNode = rootNode; // Overwrite with actual node (in case we were sent a string)\n\n    // //////// 3. Add warning if in development mode and a custom http domain is detected\n    const origin = window.location.origin;\n\n    if (\n        (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test') &&\n        origin.indexOf('http') > -1 &&\n        origin.indexOf('localhost') === -1 &&\n        origin.indexOf('127.0.0.1') === -1\n    ) {\n        console.warn(\n            'WARNING: you are are running from an insecure context:',\n            origin,\n            '\\nCrypto.subtle cannot function in this environment.\\nThe only secure contexts under http contain \"localhost\" or \"127.0.0.1\" in their url.' +\n                '\\nSee https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts'\n        );\n    }\n\n    const myCSF: CSF = new CSF(setupObj);\n    return myCSF.createReturnObject();\n};\n\nconst findRootNode = pRootNode => {\n    let rootNode;\n\n    // Expect to be sent the actual html node...\n    if (typeof pRootNode === 'object') {\n        rootNode = pRootNode;\n    }\n\n    if (typeof pRootNode === 'string') {\n        // ... but if only sent a string - find it ourselves\n        rootNode = selectOne(document, pRootNode);\n\n        if (!rootNode) {\n            return null;\n        }\n    }\n\n    return rootNode;\n};\n\nexport default initCSF;\n"],"names":["initCSF","pSetupObj","Error","setupObj","_object_spread","isGenericCardType","cardType","type","e","hasOwnProperty","logger","falsy","clientKey","rootNode","findRootNode","CSF","createReturnObject","pRootNode","selectOne","document"],"mappings":"gaAQA,MAAMA,EAAWC,IACb,IAAKA,EACD,MAAM,IAAIC,MAAM,iDAGpB,MAAMC,wUAA2BC,CAAKH,CAAAA,EAAAA,GAEtC,IAEI,MAAMI,EAA6BC,EAASD,kBAAkBF,EAASI,MACvEJ,EAASI,KAAOF,EAAoB,OAASF,EAASI,IAC1D,CAAE,MAAOC,GAELL,EAASI,KAAO,MACpB,CAGA,IAAKE,EAAeN,EAAU,YAC1B,OAAOO,EAAa,8EAGxB,GAAIC,EAAMR,EAASS,WACf,OAAOF,EAAY,kFAMvB,MAAMG,EAAwBC,EAAaX,EAASU,UAEpD,IAAKA,EACD,OAAOH,EAAa,iEAAiEP,EAASI,QAGlGJ,EAASU,SAAWA,EAoBpB,OADmB,IAAIE,EAAIZ,GACda,oBAAkB,EAG7BF,EAAeG,IACjB,IAAIJ,EAOJ,MAJyB,iBAAdI,IACPJ,EAAWI,GAGU,iBAAdA,IAEPJ,EAAWK,EAAUC,SAAUF,GAE1BJ,GAKFA,EAJQ,IAIRA"}