{"version":3,"file":"AbstractCSF.js","sources":["../../../../../../../src/components/internal/SecuredFields/lib/CSF/AbstractCSF.ts"],"sourcesContent":["import { CSFSetupObject, CSFConfigObject, CSFCallbacksConfig, CSFStateObject } from './types';\nimport { SFFeedbackObj, SendBrandObject, SendExpiryDateObject, CVCPolicyType, DatePolicyType, SFFieldType } from '../types';\nimport { createSecuredFields } from './extensions/createSecuredFields';\nimport processBrand from './partials/processBrand';\nimport handleBrandFromBinLookup from './extensions/handleBrandFromBinLookup';\n\nabstract class AbstractCSF {\n    // Set in CSF\n    protected callbacks: CSFCallbacksConfig;\n    protected config: CSFConfigObject;\n    protected props: CSFSetupObject;\n    protected state: CSFStateObject;\n    protected validateForm: () => void;\n    protected handleBrandFromBinLookup: typeof handleBrandFromBinLookup;\n    protected callbacksHandler: (callbacksObj: object) => void;\n    protected configHandler: (props: CSFSetupObject) => void;\n    protected createCardSecuredFields: (securedFields: HTMLElement[], cvcPolicy: CVCPolicyType, expiryDatePolicy: DatePolicyType) => Promise<any>;\n    protected createNonCardSecuredFields: (securedFields: HTMLElement[]) => Promise<any>;\n    protected createSecuredFields: typeof createSecuredFields;\n    protected destroySecuredFields: () => void;\n    protected handleIOSTouchEvents: () => void;\n    protected destroyTouchendListener: () => void;\n    protected destroyTouchstartListener: () => void;\n    protected handleBinValue: (pFeedbackObj: SFFeedbackObj) => void;\n    protected handleEncryption: (pFeedbackObj: SFFeedbackObj) => void;\n    protected handleFocus: (pFeedbackObj: SFFeedbackObj) => void;\n    protected handleIframeConfigFeedback: (pFeedbackObj) => boolean;\n    protected handleValidation: (pFeedbackObj: SFFeedbackObj) => void;\n    protected handleSFShiftTab: (fieldType: string) => void;\n    protected handleShiftTab: (fieldType: string) => void;\n    protected isConfigured: () => void;\n    protected postMessageToAllIframes: (pDataObj: object) => void;\n    protected processAutoComplete: (pFeedbackObj: SFFeedbackObj) => void;\n    protected processBrand: typeof processBrand;\n    protected sendBrandToCardSF: (brandObj: SendBrandObject) => void;\n    protected sendExpiryDatePolicyToSF: (dateObj: SendExpiryDateObject) => void;\n    protected setFocusOnFrame: (pFieldType: SFFieldType, doLog?: boolean) => void;\n    protected setupSecuredField: (pItem: HTMLElement) => void;\n    protected touchendListener: (e: Event) => void;\n    protected touchstartListener: () => void;\n    protected hasGenuineTouchEvents: boolean;\n    // Set in createSecuredFields\n    protected encryptedAttrName: string;\n    protected hasRedundantCVCField: boolean;\n    protected isSingleBrandedCard: boolean;\n    protected securityCode: string;\n    // --\n    protected constructor(setupObj: CSFSetupObject) {\n        this.props = setupObj;\n        this.state = {} as any as CSFStateObject;\n\n        // Initialise storage objects\n        this.config = {} as any as CSFConfigObject; // {} as ConfigObject fails in linting\n        this.callbacks = {} as any as CSFCallbacksConfig;\n    }\n}\nexport default AbstractCSF;\n"],"names":["AbstractCSF","constructor","setupObj","_define_property","this","callbacks","config","props","state","validateForm","handleBrandFromBinLookup","callbacksHandler","configHandler","createCardSecuredFields","createNonCardSecuredFields","createSecuredFields","destroySecuredFields","handleIOSTouchEvents","destroyTouchendListener","destroyTouchstartListener","handleBinValue","handleEncryption","handleFocus","handleIframeConfigFeedback","handleValidation","handleSFShiftTab","handleShiftTab","isConfigured","postMessageToAllIframes","processAutoComplete","processBrand","sendBrandToCardSF","sendExpiryDatePolicyToSF","setFocusOnFrame","setupSecuredField","touchendListener","touchstartListener","hasGenuineTouchEvents","encryptedAttrName","hasRedundantCVCField","isSingleBrandedCard","securityCode"],"mappings":"wHAMA,MAAeA,EAyCX,WAAAC,CAAsBC,GAvCtBC,EAAAC,KAAUC,iBAAV,GACAF,EAAAC,KAAUE,cAAV,GACAH,EAAAC,KAAUG,aAAV,GACAJ,EAAAC,KAAUI,aAAV,GACAL,EAAAC,KAAUK,oBAAV,GACAN,EAAAC,KAAUM,gCAAV,GACAP,EAAAC,KAAUO,wBAAV,GACAR,EAAAC,KAAUQ,qBAAV,GACAT,EAAAC,KAAUS,+BAAV,GACAV,EAAAC,KAAUU,kCAAV,GACAX,EAAAC,KAAUW,2BAAV,GACAZ,EAAAC,KAAUY,4BAAV,GACAb,EAAAC,KAAUa,4BAAV,GACAd,EAAAC,KAAUc,+BAAV,GACAf,EAAAC,KAAUe,iCAAV,GACAhB,EAAAC,KAAUgB,sBAAV,GACAjB,EAAAC,KAAUiB,wBAAV,GACAlB,EAAAC,KAAUkB,mBAAV,GACAnB,EAAAC,KAAUmB,kCAAV,GACApB,EAAAC,KAAUoB,wBAAV,GACArB,EAAAC,KAAUqB,wBAAV,GACAtB,EAAAC,KAAUsB,sBAAV,GACAvB,EAAAC,KAAUuB,oBAAV,GACAxB,EAAAC,KAAUwB,+BAAV,GACAzB,EAAAC,KAAUyB,2BAAV,GACA1B,EAAAC,KAAU0B,oBAAV,GACA3B,EAAAC,KAAU2B,yBAAV,GACA5B,EAAAC,KAAU4B,gCAAV,GACA7B,EAAAC,KAAU6B,uBAAV,GACA9B,EAAAC,KAAU8B,yBAAV,GACA/B,EAAAC,KAAU+B,wBAAV,GACAhC,EAAAC,KAAUgC,0BAAV,GACAjC,EAAAC,KAAUiC,6BAAV,GAEAlC,EAAAC,KAAUkC,yBAAV,GACAnC,EAAAC,KAAUmC,4BAAV,GACApC,EAAAC,KAAUoC,2BAAV,GACArC,EAAAC,KAAUqC,oBAAV,GAGIrC,KAAKG,MAAQL,EACbE,KAAKI,MAAQ,CAAC,EAGdJ,KAAKE,OAAS,GACdF,KAAKC,UAAY,CAAC,CACtB"}