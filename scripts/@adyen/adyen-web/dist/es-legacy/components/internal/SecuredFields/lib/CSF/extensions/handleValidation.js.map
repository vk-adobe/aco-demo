{"version":3,"file":"handleValidation.js","sources":["../../../../../../../../src/components/internal/SecuredFields/lib/CSF/extensions/handleValidation.ts"],"sourcesContent":["import { makeCallbackObjectsValidation } from '../utils/callbackUtils';\nimport { processErrors } from '../utils/processErrors';\nimport { existy } from '../../../../../../utils/commonUtils';\nimport { ENCRYPTED_SECURITY_CODE, ENCRYPTED_CARD_NUMBER } from '../../constants';\nimport { SFFeedbackObj, CardFieldValidData } from '../../types';\nimport { hasOwnProperty } from '../../../../../../utils/hasOwnProperty';\n\nexport function handleValidation(pFeedbackObj: SFFeedbackObj): void {\n    // --\n    let callbackObjectsArr: CardFieldValidData[];\n    const fieldType: string = pFeedbackObj.fieldType;\n    const isGenericCard: boolean = this.state.type === 'card';\n\n    /**\n     * CHECK IF CVC IS OPTIONAL\n     */\n    // Brand information (from setting the CC number) now contains information about\n    // whether cvc is optional for that brand e.g. maestro\n    // If it is optional, and we're dealing with the generic card type,\n    // (re)set the property that indicates this (in the CVC SecuredField instance)\n    if (\n        isGenericCard &&\n        hasOwnProperty(pFeedbackObj, 'cvcPolicy') &&\n        existy(pFeedbackObj.cvcPolicy) &&\n        hasOwnProperty(this.state.securedFields, ENCRYPTED_SECURITY_CODE)\n    ) {\n        this.state.securedFields[ENCRYPTED_SECURITY_CODE].cvcPolicy = pFeedbackObj.cvcPolicy;\n    }\n\n    /**\n     * PROCESS & BROADCAST ERRORS (OR LACK OF)\n     */\n    processErrors(pFeedbackObj, this.state.securedFields[fieldType], this.state.type, this.props.rootNode, this.callbacks.onError);\n\n    /**\n     * REMOVE ANY EXISTING ENCRYPTED ELEMENT & CHECK VALIDITY OF THE FORM AS A WHOLE\n     */\n    // If the field was previously encrypted...\n    if (this.state.securedFields[fieldType].isEncrypted) {\n        // callbackObjectsArr will be an array containing 1 or 2 objects that need to be broadcast\n        callbackObjectsArr = makeCallbackObjectsValidation({ fieldType, txVariant: this.state.type, rootNode: this.props.rootNode });\n\n        // Add the endDigits to the object we send to the onFieldValid callback\n        // NOTE: in this case (validation) this will be an empty string\n        if (fieldType === ENCRYPTED_CARD_NUMBER) {\n            callbackObjectsArr[0].endDigits = '';\n        }\n\n        for (let i = 0, len = callbackObjectsArr.length; i < len; i += 1) {\n            // ...BROADCAST VALID STATE OF INDIVIDUAL INPUTS\n            this.callbacks.onFieldValid(callbackObjectsArr[i]);\n        }\n\n        // Remove the field's encrypted state\n        this.state.securedFields[fieldType].isEncrypted = false;\n    }\n\n    /**\n     * STORE & BROADCAST VALID STATE OF THE FORM AS A WHOLE\n     */\n    this.validateForm();\n\n    /**\n     * PROCESS & BROADCAST CARD BRANDS\n     */\n    if (hasOwnProperty(pFeedbackObj, 'brand')) {\n        this.processBrand(pFeedbackObj);\n    }\n}\n"],"names":["handleValidation","pFeedbackObj","callbackObjectsArr","fieldType","this","state","type","hasOwnProperty","existy","cvcPolicy","securedFields","ENCRYPTED_SECURITY_CODE","processErrors","props","rootNode","callbacks","onError","isEncrypted","makeCallbackObjectsValidation","txVariant","ENCRYPTED_CARD_NUMBER","endDigits","i","len","length","onFieldValid","validateForm","processBrand"],"mappings":"uWAOO,SAASA,EAAiBC,GAE7B,IAAIC,EACJ,MAAMC,EAAoBF,EAAaE,UA4BvC,GA3BmD,SAApBC,KAAKC,MAAMC,MAWtCC,EAAeN,EAAc,cAC7BO,EAAOP,EAAaQ,YACpBF,EAAeH,KAAKC,MAAMK,cAAeC,KAEzCP,KAAKC,MAAMK,cAAcC,GAAyBF,UAAYR,EAAaQ,WAM/EG,EAAcX,EAAcG,KAAKC,MAAMK,cAAcP,GAAYC,KAAKC,MAAMC,KAAMF,KAAKS,MAAMC,SAAUV,KAAKW,UAAUC,SAMlHZ,KAAKC,MAAMK,cAAcP,GAAWc,YAAa,CAEjDf,EAAqBgB,EAA8B,CAAEf,YAAWgB,UAAWf,KAAKC,MAAMC,KAAMQ,SAAUV,KAAKS,MAAMC,WAI7GX,IAAciB,IACdlB,EAAmB,GAAGmB,UAAY,IAGtC,IAAK,IAAIC,EAAI,EAAGC,EAAMrB,EAAmBsB,OAAQF,EAAIC,EAAKD,GAAK,EAE3DlB,KAAKW,UAAUU,aAAavB,EAAmBoB,IAInDlB,KAAKC,MAAMK,cAAcP,GAAWc,aAAc,CACtD,CAKAb,KAAKsB,eAKDnB,EAAeN,EAAc,UAC7BG,KAAKuB,aAAa1B,EAE1B"}