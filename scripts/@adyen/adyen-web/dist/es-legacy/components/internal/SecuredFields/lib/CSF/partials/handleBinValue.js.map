{"version":3,"file":"handleBinValue.js","sources":["../../../../../../../../src/components/internal/SecuredFields/lib/CSF/partials/handleBinValue.ts"],"sourcesContent":["import { SFFeedbackObj, CardBinValueData } from '../../types';\nimport { CSFThisObject } from '../types';\n\ninterface DestructuredFeedbackObj {\n    binValue?: string;\n    encryptedBin?: string;\n    uuid?: string;\n}\n\n/**\n * @param csfState - comes from initial, partial, implementation\n * @param csfCallbacks - comes from initial, partial, implementation\n *\n * @param pFeedbackObj -\n */\nexport function handleBinValue({ csfState, csfCallbacks }: CSFThisObject, pFeedbackObj: SFFeedbackObj): void {\n    const { binValue, encryptedBin, uuid }: DestructuredFeedbackObj = pFeedbackObj;\n\n    const callbacksObj: CardBinValueData = { binValue, type: csfState.type };\n\n    if (encryptedBin) {\n        callbacksObj.encryptedBin = encryptedBin;\n        callbacksObj.uuid = uuid;\n    }\n\n    csfCallbacks.onBinValue(callbacksObj);\n}\n"],"names":["handleBinValue","csfState","csfCallbacks","pFeedbackObj","binValue","encryptedBin","uuid","callbacksObj","type","onBinValue"],"mappings":"AAeO,SAASA,GAAeC,SAAEA,EAAQC,aAAEA,GAA+BC,GACtE,MAAMC,SAAEA,EAAQC,aAAEA,EAAYC,KAAEA,GAAkCH,EAE5DI,EAAiC,CAAEH,WAAUI,KAAMP,EAASO,MAE9DH,IACAE,EAAaF,aAAeA,EAC5BE,EAAaD,KAAOA,GAGxBJ,EAAaO,WAAWF,EAC5B"}