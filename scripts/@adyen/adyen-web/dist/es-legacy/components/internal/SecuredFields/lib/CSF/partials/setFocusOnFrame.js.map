{"version":3,"file":"setFocusOnFrame.js","sources":["../../../../../../../../src/components/internal/SecuredFields/lib/CSF/partials/setFocusOnFrame.ts"],"sourcesContent":["import postMessageToIframe from '../utils/iframes/postMessageToIframe';\nimport { hasOwnProperty } from '../../../../../../utils/hasOwnProperty';\nimport getIframeContentWin from '../utils/iframes/getIframeContentWin';\nimport { SFFieldType } from '../../types';\nimport { CSFThisObject } from '../types';\n\n/**\n * @param csfState - comes from initial, partial, implementation\n * @param csfConfig - comes from initial, partial, implementation\n *\n * @param pFieldType -\n * @param doLog -\n */\nexport function setFocusOnFrame({ csfState, csfConfig }: CSFThisObject, pFieldType: SFFieldType, doLog?: boolean): void {\n    // Check destroySecuredFields hasn't been called (thus clearing the state's securedFields object)\n    if (!hasOwnProperty(csfState.securedFields, pFieldType)) return;\n\n    if (process.env.NODE_ENV === 'development' && doLog) console.log('\\n### setFocusOnFrame:: (SHIFT_TAB) place focus on:', pFieldType);\n\n    const focusData = {\n        txVariant: csfState.type,\n        fieldType: pFieldType,\n        focus: true,\n        numKey: csfState.securedFields[pFieldType].numKey\n    };\n\n    postMessageToIframe(focusData, getIframeContentWin(csfState, pFieldType), csfConfig.loadingContext);\n}\n"],"names":["setFocusOnFrame","csfState","csfConfig","pFieldType","doLog","hasOwnProperty","securedFields","focusData","txVariant","type","fieldType","focus","numKey","postMessageToIframe","getIframeContentWin","loadingContext"],"mappings":"yLAaO,SAASA,GAAgBC,SAAEA,EAAQC,UAAEA,GAA4BC,EAAyBC,GAE7F,IAAKC,EAAeJ,EAASK,cAAeH,GAAa,OAIzD,MAAMI,EAAY,CACdC,UAAWP,EAASQ,KACpBC,UAAWP,EACXQ,OAAO,EACPC,OAAQX,EAASK,cAAcH,GAAYS,QAG/CC,EAAoBN,EAAWO,EAAoBb,EAAUE,GAAaD,EAAUa,eACxF"}