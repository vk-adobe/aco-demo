{"version":3,"file":"ClickToPay.js","sources":["../../../../src/components/ClickToPay/ClickToPay.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport { ClickToPayConfiguration, ClickToPayPaymentData } from './types';\nimport collectBrowserInfo from '../../utils/browserInfo';\nimport { ClickToPayCheckoutPayload, IClickToPayService } from '../internal/ClickToPay/services/types';\nimport { ClickToPayProps } from '../internal/ClickToPay/types';\nimport createClickToPayService from '../internal/ClickToPay/services/create-clicktopay-service';\nimport { CtpState } from '../internal/ClickToPay/services/ClickToPayService';\nimport ClickToPayProvider from '../internal/ClickToPay/context/ClickToPayProvider';\nimport ClickToPayComponent from '../internal/ClickToPay';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport { TxVariants } from '../tx-variants';\nimport type { ICore } from '../../core/types';\n\nexport class ClickToPayElement extends UIElement<ClickToPayConfiguration> {\n    public static type = TxVariants.clicktopay;\n\n    private readonly clickToPayService: IClickToPayService | null;\n    private readonly ctpConfiguration: ClickToPayProps;\n\n    constructor(checkout: ICore, props?: ClickToPayConfiguration) {\n        super(checkout, props);\n\n        this.ctpConfiguration = {\n            shopperEmail: this.props.shopperEmail,\n            telephoneNumber: this.props.telephoneNumber,\n            merchantDisplayName: this.props.merchantDisplayName,\n            locale: this.props.locale,\n            onReady: this.props.onReady,\n            onTimeout: this.props.onTimeout\n        };\n\n        this.clickToPayService = createClickToPayService(this.props.configuration, this.ctpConfiguration, this.props.environment);\n        this.clickToPayService?.initialize().catch(error => {\n            this.handleError(new AdyenCheckoutError('ERROR', error.toString(), { cause: error }));\n        });\n\n        if (!this.clickToPayService) {\n            console.warn('ClickToPay not initialized - Likely the payment method is not configured or its configuration is missing');\n        }\n    }\n\n    get isValid() {\n        return true;\n    }\n\n    get browserInfo() {\n        return collectBrowserInfo();\n    }\n\n    public formatData(): ClickToPayPaymentData {\n        const { srcScheme, srcCorrelationId, srcTokenReference, srcCheckoutPayload, srcDigitalCardId } = this.state.data;\n        return {\n            paymentMethod: {\n                type: ClickToPayElement.type,\n                ...(srcScheme && { srcScheme }),\n                ...(srcCorrelationId && { srcCorrelationId }),\n                ...(srcTokenReference && { srcTokenReference }),\n                ...(srcCheckoutPayload && { srcCheckoutPayload }),\n                ...(srcDigitalCardId && { srcDigitalCardId })\n            },\n            browserInfo: this.browserInfo,\n            origin: window?.location?.origin\n        };\n    }\n\n    protected formatProps(props: ClickToPayConfiguration) {\n        return {\n            ...props,\n            disableOtpAutoFocus: props.disableOtpAutoFocus || false,\n            shopperEmail: props.shopperEmail || this.core.options?.session?.shopperEmail,\n            telephoneNumber: props.telephoneNumber || this.core.options?.session?.telephoneNumber,\n            locale: props.locale || props.i18n?.locale?.replace('-', '_')\n        };\n    }\n\n    /**\n     * Method used to let the merchant know if the shopper have a valid CtP accoubt\n     *\n     * Resolves Promise if the Shopper has cookies OR has valid CtP account\n     * Rejects Promise if account isn't found or if Login screen is triggered\n     */\n    public override async isAvailable(): Promise<void> {\n        if (!this.clickToPayService) {\n            return Promise.reject();\n        }\n\n        if (this.clickToPayService.shopperAccountFound) {\n            return Promise.resolve();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.clickToPayService.subscribeOnStateChange((state: CtpState) => {\n                if (this.clickToPayService.shopperAccountFound) resolve();\n                if (state === CtpState.NotAvailable || state === CtpState.Login || state === CtpState.Idle) reject();\n            });\n        });\n    }\n\n    private handleClickToPaySubmit = (payload: ClickToPayCheckoutPayload) => {\n        this.setState({ data: { ...payload }, valid: {}, errors: {}, isValid: true });\n        this.submit();\n    };\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <ClickToPayProvider\n                    isStandaloneComponent={true}\n                    configuration={this.ctpConfiguration}\n                    amount={this.props.amount}\n                    clickToPayService={this.clickToPayService}\n                    setClickToPayRef={this.setComponentRef}\n                    onSetStatus={this.setElementStatus}\n                    onSubmit={this.handleClickToPaySubmit}\n                    onError={this.handleError}\n                >\n                    <ClickToPayComponent />\n                </ClickToPayProvider>\n            </CoreProvider>\n        );\n    }\n}\n\nexport default ClickToPayElement;\n"],"names":["ClickToPayElement","UIElement","isValid","browserInfo","collectBrowserInfo","formatData","window","srcScheme","srcCorrelationId","srcTokenReference","srcCheckoutPayload","srcDigitalCardId","this","state","data","paymentMethod","_object_spread","type","origin","location","formatProps","props","_this_core_options_session","_this_core_options","_this_core_options_session1","_this_core_options1","_object_spread_props","disableOtpAutoFocus","shopperEmail","core","options","session","telephoneNumber","locale","i18n","replace","isAvailable","clickToPayService","shopperAccountFound","Promise","resolve","reject","subscribeOnStateChange","CtpState","NotAvailable","Login","Idle","render","h","CoreProvider","loadingContext","resources","ClickToPayProvider","isStandaloneComponent","configuration","ctpConfiguration","amount","setClickToPayRef","setComponentRef","onSetStatus","setElementStatus","onSubmit","handleClickToPaySubmit","onError","handleError","ClickToPayComponent","constructor","checkout","_this_clickToPayService","super","_define_property","payload","setState","valid","errors","submit","merchantDisplayName","onReady","onTimeout","createClickToPayService","environment","initialize","catch","error","AdyenCheckoutError","toString","cause","console","warn","TxVariants","clicktopay"],"mappings":"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"}