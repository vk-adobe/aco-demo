import{optionallyFilterUpiSubTxVariants as t,filterUnsupportedPaymentMethod as e,filterPresent as n,filterAvailable as o}from"./filters.js";import{getComponentConfiguration as r}from"./getComponentConfiguration.js";import i from"../../components-name-map.js";function p(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}const s=(s,a,m,f)=>{const u=t(s).filter(e).map((t=>{const e="isStoredPaymentMethod"in t&&t.isStoredPaymentMethod,n=r(t.type,a,e),o=f.getComponent(t.type);if(!o)return console.warn(`\nDropin: You support the payment method '${t.type}' but this component has not been configured. Make sure to import the Class  '${i(t.type)}' and then pass it in the Dropin's 'paymentMethodComponents' config property if you wish to offer this payment method.`),null;const s=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable})))),o.forEach((function(e){p(t,e,n[e])}))}return t}({},t,m,n);return new o(f,s)})).filter(n);return o(u)};export{s as default};
//# sourceMappingURL=createElements.js.map
