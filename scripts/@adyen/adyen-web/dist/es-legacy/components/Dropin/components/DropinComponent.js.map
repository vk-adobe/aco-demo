{"version":3,"file":"DropinComponent.js","sources":["../../../../../src/components/Dropin/components/DropinComponent.tsx"],"sourcesContent":["import { Component, Fragment, h } from 'preact';\nimport PaymentMethodList from './PaymentMethod/PaymentMethodList';\nimport Status from './status';\nimport getOrderStatus from '../../../core/Services/order-status';\nimport './DropinComponent.scss';\nimport { sanitizeOrder } from '../../internal/UIElement/utils';\nimport { PaymentAmount } from '../../../types/global-types';\nimport { ANALYTICS_RENDERED_STR, InfoEventTypes } from '../../../core/Analytics/constants';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\nimport Button from '../../internal/Button';\nimport type { DropinComponentProps, DropinComponentState, DropinStatus, DropinStatusProps, onOrderCancelData } from '../types';\nimport UIElement from '../../internal/UIElement';\nimport { AnalyticsInfoEvent } from '../../../core/Analytics/AnalyticsInfoEvent';\n\nexport class DropinComponent extends Component<DropinComponentProps, DropinComponentState> {\n    public state: DropinComponentState = {\n        elements: [],\n        fastlanePaymentElement: [],\n        instantPaymentElements: [],\n        storedPaymentElements: [],\n        orderStatus: null,\n        isDisabling: false,\n        status: { type: 'loading', props: undefined },\n        activePaymentMethod: null,\n        cachedPaymentMethods: {},\n        showDefaultPaymentMethodList: true\n    };\n\n    componentDidMount() {\n        this.prepareDropinData();\n    }\n\n    public prepareDropinData = () => {\n        const { order, clientKey, loadingContext } = this.props;\n        const [storedElementsPromises, elementsPromises, instantPaymentsPromises, fastlanePaymentElementPromise] = this.props.onCreateElements();\n        const orderStatusPromise = order ? getOrderStatus({ clientKey, loadingContext }, order) : null;\n\n        void Promise.all([storedElementsPromises, elementsPromises, instantPaymentsPromises, fastlanePaymentElementPromise, orderStatusPromise]).then(\n            ([storedPaymentElements, elements, instantPaymentElements, fastlanePaymentElement, orderStatus]) => {\n                this.setState({\n                    orderStatus,\n                    elements,\n                    instantPaymentElements,\n                    storedPaymentElements,\n                    fastlanePaymentElement,\n                    showDefaultPaymentMethodList: fastlanePaymentElement.length === 0\n                });\n\n                this.setStatus('ready');\n\n                const event = new AnalyticsInfoEvent({\n                    type: ANALYTICS_RENDERED_STR,\n                    component: 'dropin',\n                    configData: this.analyticConfigData\n                });\n\n                this.props.modules?.analytics.sendAnalytics(event);\n            }\n        );\n\n        this.onOrderCancel = this.getOnOrderCancel();\n    };\n\n    get analyticConfigData() {\n        return {\n            openFirstStoredPaymentMethod: this.props.openFirstStoredPaymentMethod,\n            showStoredPaymentMethods: this.props.showStoredPaymentMethods\n        };\n    }\n\n    public setStatus = (status: DropinStatus['type'], props: DropinStatusProps = {}) => {\n        this.setState({ status: { type: status, props } });\n    };\n\n    private setActivePaymentMethod = (paymentMethod: UIElement): void => {\n        if (paymentMethod === this.state.activePaymentMethod) {\n            return;\n        }\n\n        this.setState(prevState => ({\n            activePaymentMethod: paymentMethod,\n            cachedPaymentMethods: { ...prevState.cachedPaymentMethods, [paymentMethod._id]: true }\n        }));\n\n        if (this.state.cachedPaymentMethods[paymentMethod._id]) {\n            paymentMethod.activate();\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.status.type !== this.state.status.type && this.state.activePaymentMethod) {\n            // @ts-ignore TODO: Drop-in has its own 'status' values ('custom' for ex) which differs from regular UIElementStatus. Need to investigate best way to define/use this status variable\n            this.state.activePaymentMethod.setStatus(this.state.status.type);\n        }\n\n        if (this.state.status.type === 'ready' && prevState.status.type !== 'ready' && this.props.onReady) {\n            this.props.onReady();\n        }\n    }\n\n    private handleOnSelectPaymentMethod = paymentMethod => {\n        const { activePaymentMethod } = this.state;\n\n        this.setActivePaymentMethod(paymentMethod);\n\n        // onSelect event\n        if ((activePaymentMethod && activePaymentMethod._id !== paymentMethod._id) || !activePaymentMethod) {\n            this.props.onSelect?.(paymentMethod);\n\n            const event = new AnalyticsInfoEvent({\n                type: ANALYTICS_RENDERED_STR\n            });\n\n            paymentMethod.submitAnalytics(event);\n        }\n    };\n\n    private handleDisableStoredPaymentMethod = storedPaymentMethod => {\n        this.setState({ isDisabling: true });\n\n        new Promise((resolve, reject) => this.props.onDisableStoredPaymentMethod(storedPaymentMethod.props.storedPaymentMethodId, resolve, reject))\n            .then(() => {\n                this.setState(prevState => ({\n                    storedPaymentElements: prevState.storedPaymentElements.filter(pm => pm._id !== storedPaymentMethod._id)\n                }));\n                this.setState({ isDisabling: false });\n            })\n            .catch(() => {\n                this.setState({ isDisabling: false });\n            });\n    };\n\n    private readonly onShowDefaultPaymentMethodListClick = () => {\n        this.setState({\n            showDefaultPaymentMethodList: true\n        });\n\n        const event = new AnalyticsInfoEvent({\n            type: InfoEventTypes.clicked,\n            target: 'otherpaymentmethod_button',\n            component: 'dropin'\n        });\n\n        this.props.modules?.analytics.sendAnalytics(event);\n    };\n\n    closeActivePaymentMethod() {\n        this.setState({ activePaymentMethod: null });\n    }\n\n    /**\n     * getOnOrderCancel decides which onOrderCancel logic should be used, manual or sessions\n     */\n    private getOnOrderCancel = () => {\n        if (this.props.onOrderCancel) {\n            return (data: onOrderCancelData) => {\n                const order = sanitizeOrder(data.order);\n                new Promise<{ amount: PaymentAmount }>((resolve, reject) => {\n                    this.props.onOrderCancel({ order }, { resolve, reject });\n                })\n                    .then(({ amount }) => this.props.elementRef.handleAdvanceFlowPaymentMethodsUpdate(null, amount))\n                    .catch(error => {\n                        throw new AdyenCheckoutError('NETWORK_ERROR', error);\n                    });\n            };\n        }\n        if (this.props.session) {\n            return (data: onOrderCancelData) =>\n                this.props.session\n                    .cancelOrder(data)\n                    .then(() => this.props.core.update({ order: null }))\n                    .catch(error => {\n                        console.error(error);\n                        this.setStatus(error?.message || 'error');\n                    });\n        }\n        return null;\n    };\n\n    private onOrderCancel: (data: onOrderCancelData) => void;\n\n    render() {\n        const {\n            elements,\n            fastlanePaymentElement,\n            instantPaymentElements,\n            storedPaymentElements,\n            status,\n            activePaymentMethod,\n            cachedPaymentMethods,\n            showDefaultPaymentMethodList\n        } = this.state;\n\n        const isLoading = status.type === 'loading';\n        const isRedirecting = status.type === 'redirect';\n        const hasPaymentMethodsToBeDisplayed = !!(elements?.length || instantPaymentElements?.length || storedPaymentElements?.length);\n\n        switch (status.type) {\n            case 'success':\n                return <Status.Success message={this.props?.amount?.value === 0 ? 'resultMessages.preauthorized' : status.props?.message} />;\n\n            case 'error':\n                return <Status.Error message={status.props?.message} />;\n\n            case 'custom':\n                return status.props?.component?.render();\n\n            default:\n                return (\n                    <div className={`adyen-checkout__dropin adyen-checkout__dropin--${status.type}`}>\n                        {isRedirecting && status.props.component && status.props.component.render()}\n                        {isLoading && status.props && status.props.component && status.props.component.render()}\n\n                        {!showDefaultPaymentMethodList && (\n                            <Fragment>\n                                <PaymentMethodList\n                                    isLoading={isLoading}\n                                    paymentMethods={fastlanePaymentElement}\n                                    activePaymentMethod={activePaymentMethod}\n                                    cachedPaymentMethods={cachedPaymentMethods}\n                                    onSelect={this.handleOnSelectPaymentMethod}\n                                    openFirstPaymentMethod\n                                    showRadioButton={this.props.showRadioButton}\n                                />\n\n                                {hasPaymentMethodsToBeDisplayed && (\n                                    <Button\n                                        classNameModifiers={['dropin-show-paymentmethods']}\n                                        variant=\"link\"\n                                        inline\n                                        label=\"Other payment methods\"\n                                        onClick={this.onShowDefaultPaymentMethodListClick}\n                                    />\n                                )}\n                            </Fragment>\n                        )}\n\n                        {hasPaymentMethodsToBeDisplayed && showDefaultPaymentMethodList && (\n                            <PaymentMethodList\n                                isLoading={isLoading || isRedirecting}\n                                isDisablingPaymentMethod={this.state.isDisabling}\n                                paymentMethods={elements}\n                                instantPaymentMethods={instantPaymentElements}\n                                storedPaymentMethods={storedPaymentElements}\n                                activePaymentMethod={activePaymentMethod}\n                                cachedPaymentMethods={cachedPaymentMethods}\n                                order={this.props.order}\n                                orderStatus={this.state.orderStatus}\n                                onOrderCancel={this.onOrderCancel}\n                                onSelect={this.handleOnSelectPaymentMethod}\n                                openPaymentMethod={this.props.openPaymentMethod}\n                                openFirstPaymentMethod={this.props.openFirstPaymentMethod}\n                                openFirstStoredPaymentMethod={this.props.openFirstStoredPaymentMethod}\n                                onDisableStoredPaymentMethod={this.handleDisableStoredPaymentMethod}\n                                showRemovePaymentMethodButton={this.props.showRemovePaymentMethodButton}\n                                showRadioButton={this.props.showRadioButton}\n                            />\n                        )}\n                    </div>\n                );\n        }\n    }\n}\n\nexport default DropinComponent;\n"],"names":["DropinComponent","Component","componentDidMount","this","prepareDropinData","analyticConfigData","openFirstStoredPaymentMethod","props","showStoredPaymentMethods","componentDidUpdate","prevProps","prevState","status","type","state","activePaymentMethod","setStatus","onReady","closeActivePaymentMethod","setState","render","elements","fastlanePaymentElement","instantPaymentElements","storedPaymentElements","cachedPaymentMethods","showDefaultPaymentMethodList","isLoading","isRedirecting","hasPaymentMethodsToBeDisplayed","length","_this_props_amount","_this_props","h","Status","Success","message","amount","value","Error","component","div","className","Fragment","PaymentMethodList","paymentMethods","onSelect","handleOnSelectPaymentMethod","openFirstPaymentMethod","showRadioButton","Button","classNameModifiers","variant","inline","label","onClick","onShowDefaultPaymentMethodListClick","isDisablingPaymentMethod","isDisabling","instantPaymentMethods","storedPaymentMethods","order","orderStatus","onOrderCancel","openPaymentMethod","onDisableStoredPaymentMethod","handleDisableStoredPaymentMethod","showRemovePaymentMethodButton","super","args","_define_property","undefined","clientKey","loadingContext","storedElementsPromises","elementsPromises","instantPaymentsPromises","fastlanePaymentElementPromise","onCreateElements","orderStatusPromise","getOrderStatus","Promise","all","then","_this_props_modules","event","AnalyticsInfoEvent","ANALYTICS_RENDERED_STR","configData","modules","analytics","sendAnalytics","getOnOrderCancel","setActivePaymentMethod","paymentMethod","_object_spread_props","_object_spread","_id","activate","_this_props_onSelect","call","submitAnalytics","storedPaymentMethod","resolve","reject","storedPaymentMethodId","filter","pm","catch","InfoEventTypes","clicked","target","data","sanitizeOrder","elementRef","handleAdvanceFlowPaymentMethodsUpdate","error","AdyenCheckoutError","session","cancelOrder","core","update","console"],"mappings":"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"}