{"version":3,"file":"utils.js","sources":["../../../../src/components/AmazonPay/utils.ts"],"sourcesContent":["import {\n    AMAZONPAY_URL_EU,\n    AMAZONPAY_URL_US,\n    FALLBACK_LOCALE_EU,\n    FALLBACK_LOCALE_US,\n    LEDGER_CURRENCIES_PER_REGION,\n    SUPPORTED_LOCALES_EU,\n    SUPPORTED_LOCALES_US\n} from './config';\nimport { AmazonPayButtonProps, AmazonPayButtonSettings, ChargeAmount, Currency, PayloadJSON, Region, SupportedLocale } from './types';\nimport { PaymentAmount } from '../../types/global-types';\nimport { getDecimalAmount } from '../../utils/amount-util';\n\n/**\n * Returns the AmazonPay script URL for passed region.\n * @param region - Two-letter country code in ISO 3166 format\n * @returns the AmazonPay script URL\n */\nexport function getAmazonPayUrl(region: Region): string {\n    return region === 'US' ? AMAZONPAY_URL_US : AMAZONPAY_URL_EU;\n}\n\n/**\n * Returns the AmazonPay button settings object\n * @param props -\n * @returns the AmazonPay button settings\n */\nexport function getAmazonPaySettings(props: AmazonPayButtonProps): AmazonPayButtonSettings {\n    return {\n        ...(props.buttonColor && { buttonColor: props.buttonColor }),\n        ...(props.design && { design: getDesignCode(props.design) }),\n        checkoutLanguage: getCheckoutLocale(props.locale, props.configuration.region),\n        ledgerCurrency: LEDGER_CURRENCIES_PER_REGION[props.configuration.region] || props.currency || (props.amount?.currency as Currency),\n        merchantId: props.configuration.merchantId,\n        productType: props.productType,\n        placement: props.placement,\n        sandbox: props.environment === 'TEST'\n    };\n}\n\n/**\n * Returns the fallback locale for passed region.\n * @param region - Two-letter country code in ISO 3166 format\n * @returns A fallback locale\n */\nexport function getFallbackLocale(region: Region): SupportedLocale {\n    return region === 'US' ? FALLBACK_LOCALE_US : FALLBACK_LOCALE_EU;\n}\n\n/**\n * Returns an array of supported locales for passed region.\n * @param region - Two-letter country code in ISO 3166 format\n * @returns An array of supported locales\n */\nexport function getSupportedLocales(region: Region): SupportedLocale[] {\n    const supportedLocales = region === 'US' ? SUPPORTED_LOCALES_US : SUPPORTED_LOCALES_EU;\n    return supportedLocales as unknown as SupportedLocale[];\n}\n\n/**\n * Gets a locale and matches it with one of the supported locales for the given region.\n * If there's no match, it will return the region's fallback option.\n * @param locale - Locale to be processed\n * @param region - Two-letter country code in ISO 3166 format\n * @returns A supported locale\n */\nexport function getCheckoutLocale(locale: string, region: Region): SupportedLocale {\n    const supportedLocales = getSupportedLocales(region);\n    const isSupportedLocale = supportedLocales.includes(locale as SupportedLocale);\n    const checkoutLocale = isSupportedLocale ? locale : getFallbackLocale(region);\n\n    return checkoutLocale as SupportedLocale;\n}\n\n/**\n * Gets the design code from the given alias.\n * @param design - The alias of one of the possible designs.\n * @returns A design code\n */\nexport function getDesignCode(design: string): string {\n    if (design === 'noTagline') return 'C0001';\n    return null;\n}\n\n/**\n * Returns the amount in the format Amazon expects.\n * @param amount - The amount object in the Adyen format\n * @returns the charge amount object in the Amazon format\n */\nexport function getChargeAmount(amount: PaymentAmount): ChargeAmount {\n    return {\n        amount: String(getDecimalAmount(amount.value, amount.currency)),\n        currencyCode: amount.currency as Currency\n    };\n}\n\n/**\n * Returns a PayloadJSON object.\n * @param props -\n * @returns PayloadJSON\n */\nexport function getPayloadJSON(props): PayloadJSON {\n    const { addressDetails, cancelUrl, checkoutMode, deliverySpecifications, returnUrl, merchantMetadata, chargePermissionType, recurringMetadata } =\n        props;\n\n    const { storeId } = props.configuration;\n    const isPayNow = checkoutMode === 'ProcessOrder';\n    const amount = isPayNow ? getChargeAmount(props.amount) : null;\n\n    return {\n        storeId,\n        chargePermissionType,\n        webCheckoutDetails: {\n            ...(isPayNow ? { checkoutResultReturnUrl: returnUrl } : { checkoutReviewReturnUrl: returnUrl }),\n            ...(cancelUrl && { checkoutCancelUrl: cancelUrl }),\n            ...(isPayNow && { checkoutMode })\n        },\n        ...(isPayNow && {\n            paymentDetails: {\n                chargeAmount: amount,\n                paymentIntent: 'Confirm',\n                presentmentCurrency: amount.currencyCode,\n                totalOrderAmount: amount\n            }\n        }),\n        ...(recurringMetadata && { recurringMetadata }),\n        ...(merchantMetadata && { merchantMetadata }),\n        ...(deliverySpecifications && { deliverySpecifications }),\n        ...(addressDetails && { addressDetails })\n    };\n}\n"],"names":["getAmazonPayUrl","region","AMAZONPAY_URL_US","AMAZONPAY_URL_EU","getAmazonPaySettings","props","_object_spread_props","_object_spread","buttonColor","design","getDesignCode","checkoutLanguage","getCheckoutLocale","locale","configuration","ledgerCurrency","LEDGER_CURRENCIES_PER_REGION","currency","amount","merchantId","productType","placement","sandbox","environment","getFallbackLocale","FALLBACK_LOCALE_US","FALLBACK_LOCALE_EU","getSupportedLocales","SUPPORTED_LOCALES_US","SUPPORTED_LOCALES_EU","includes","getChargeAmount","String","getDecimalAmount","value","currencyCode","getPayloadJSON","addressDetails","cancelUrl","checkoutMode","deliverySpecifications","returnUrl","merchantMetadata","chargePermissionType","recurringMetadata","storeId","isPayNow","webCheckoutDetails","checkoutResultReturnUrl","checkoutReviewReturnUrl","checkoutCancelUrl","paymentDetails","chargeAmount","paymentIntent","presentmentCurrency","totalOrderAmount"],"mappings":"wjCAkBO,SAASA,EAAgBC,GAC5B,MAAkB,OAAXA,EAAkBC,EAAmBC,CAChD,CAOO,SAASC,EAAqBC,GAKkEA,IAAAA,EAJnG,OAAOC,EAAAC,EAAA,GACCF,EAAMG,aAAe,CAAEA,YAAaH,EAAMG,aAC1CH,EAAMI,QAAU,CAAEA,OAAQC,EAAcL,EAAMI,UAAQ,CAC1DE,iBAAkBC,EAAkBP,EAAMQ,OAAQR,EAAMS,cAAcb,QACtEc,eAAgBC,EAA6BX,EAAMS,cAAcb,SAAWI,EAAMY,WAAaZ,QAAAA,EAAAA,EAAMa,cAANb,IAAAA,OAAAA,EAAAA,EAAcY,UAC7GE,WAAYd,EAAMS,cAAcK,WAChCC,YAAaf,EAAMe,YACnBC,UAAWhB,EAAMgB,UACjBC,QAA+B,SAAtBjB,EAAMkB,aAEvB,CAOO,SAASC,EAAkBvB,GAC9B,MAAkB,OAAXA,EAAkBwB,EAAqBC,CAClD,CAOO,SAASC,EAAoB1B,GAEhC,MADoC,OAAXA,EAAkB2B,EAAuBC,CAEtE,CASO,SAASjB,EAAkBC,EAAgBZ,GAK9C,OAJyB0B,EAAoB1B,GACF6B,SAASjB,GACTA,EAASW,EAAkBvB,EAG1E,CAOO,SAASS,EAAcD,GAC1B,MAAe,cAAXA,EAA+B,QAC5B,IACX,CAOO,SAASsB,EAAgBb,GAC5B,MAAO,CACHA,OAAQc,OAAOC,EAAiBf,EAAOgB,MAAOhB,EAAOD,WACrDkB,aAAcjB,EAAOD,SAE7B,CAOO,SAASmB,EAAe/B,GAC3B,MAAMgC,eAAEA,EAAcC,UAAEA,EAASC,aAAEA,EAAYC,uBAAEA,EAAsBC,UAAEA,EAASC,iBAAEA,EAAgBC,qBAAEA,EAAoBC,kBAAEA,GACxHvC,GAEEwC,QAAEA,GAAYxC,EAAMS,cACpBgC,EAA4B,iBAAjBP,EACXrB,EAAS4B,EAAWf,EAAgB1B,EAAMa,QAAU,KAE1D,OAAOX,EAAA,CACHsC,UACAF,uBACAI,mBAAoBxC,KACZuC,EAAW,CAAEE,wBAAyBP,GAAc,CAAEQ,wBAAyBR,GAC/EH,GAAa,CAAEY,kBAAmBZ,GAClCQ,GAAY,CAAEP,kBAElBO,GAAY,CACZK,eAAgB,CACZC,aAAclC,EACdmC,cAAe,UACfC,oBAAqBpC,EAAOiB,aAC5BoB,iBAAkBrC,IAGtB0B,GAAqB,CAAEA,qBACvBF,GAAoB,CAAEA,oBACtBF,GAA0B,CAAEA,0BAC5BH,GAAkB,CAAEA,kBAEhC"}