import{Component as e,createElement as t}from"../../../../external/preact/dist/preact.js";import r from"./DoFingerprint3DS2.js";import{isErrorObject as o,createOldFingerprintResolveData as n,createFingerprintResolveData as s,prepareFingerPrintData as i}from"../utils.js";import{isValidHttpUrl as a}from"../../../../utils/isValidURL.js";import{THREEDS2_FINGERPRINT_ERROR as p,MISSING_TOKEN_IN_ACTION_MSG as c,TIMEOUT as l,THREEDS2_NUM as m,THREEDS2_FULL as d,THREEDS2_FINGERPRINT as u}from"../../constants.js";import{Analytics3DS2Errors as h,ANALYTICS_ERROR_TYPE as S,Analytics3DS2Events as f}from"../../../../core/Analytics/constants.js";import{AnalyticsLogEvent as g}from"../../../../core/Analytics/AnalyticsLogEvent.js";import{AnalyticsErrorEvent as D}from"../../../../core/Analytics/AnalyticsErrorEvent.js";function b(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function y(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),o.forEach((function(t){b(e,t,r[t])}))}return e}function O(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t.push.apply(t,r)}return t}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}class P extends e{componentDidMount(){if(!o(this.state.fingerPrintData)){var e,t;const r="test"===this.props.environment&&(null===(t=this.props._environmentUrls)||void 0===t||null===(e=t.api)||void 0===e?void 0:e.includes("http://localhost:8080")),{threeDSMethodURL:o,threeDSMethodNotificationURL:n,postMessageDomain:s,threeDSServerTransID:i}=this.state.fingerPrintData;if(!a(o,r))return this.setStatusComplete({threeDSCompInd:"U"},{errorCode:h.TOKEN_IS_MISSING_THREEDSMETHODURL,message:`${p}: Decoded token is missing a valid threeDSMethodURL property`}),void console.debug("### PrepareFingerprint3DS2::exiting:: no valid threeDSMethodURL");const c=a(n,r),l=a(s,r),m=null==i?void 0:i.length;if(!c||!l||!m)return this.setStatusComplete({threeDSCompInd:"N"},{errorCode:h.TOKEN_IS_MISSING_OTHER_PROPS,message:`${p}: Decoded token is missing one or more of the following properties (threeDSMethodNotificationURL | postMessageDomain | threeDSServerTransID)`}),void console.debug("### PrepareFingerprint3DS2::exiting:: Decoded token is missing one or more of the following properties (threeDSMethodNotificationURL | postMessageDomain | threeDSServerTransID)");this.setState({status:"retrievingFingerPrint"})}else{const e=this.state.fingerPrintData.error,t=e.indexOf(c)>-1?h.ACTION_IS_MISSING_TOKEN:h.TOKEN_DECODE_OR_PARSING_FAILED;this.setStatusComplete({threeDSCompInd:"N"},{errorCode:t,message:`${p}: ${e}`}),console.debug("### PrepareFingerprint3DS2:: token does not exist or could not be base64 decoded &/or JSON.parsed")}}setStatusComplete(e,t=null){this.setState({status:"complete"},(()=>{const r=(this.props.isMDFlow?n:s)(this.props.dataKey,e,this.props.paymentData);let o;const i=t||e;if(i.errorCode){const e={code:i.errorCode===l?h.THREEDS2_TIMEOUT:i.errorCode,errorType:i.errorCode===l?S.network:S.apiError};o=new D(y({message:i.message},e)),this.props.onSubmitAnalytics(o)}let a;switch(null==e?void 0:e.threeDSCompInd){case"Y":a="success";break;case"N":a=t?t.errorCode===l?l:"failedInternal":"failed";break;case"U":a="noThreeDSMethodURL"}o=new g({type:d,message:`${m} fingerprinting has completed`,subType:f.FINGERPRINT_COMPLETED,result:a}),this.props.onSubmitAnalytics(o),this.props.onComplete(r)}))}render({showSpinner:e},{status:o,fingerPrintData:n}){return"retrievingFingerPrint"===o?t(r,O(y({onCompleteFingerprint:e=>{this.setStatusComplete(e.result)},onErrorFingerprint:e=>{const t={errorCode:e.errorCode,message:`${u}: ${e.errorCode}`};this.setStatusComplete(e.result,t)},showSpinner:e},n),{onActionHandled:this.props.onActionHandled,onFormSubmit:this.onFormSubmit})):null}constructor(e){super(e),b(this,"onFormSubmit",(e=>{const t=new g({type:d,message:e,subType:f.FINGERPRINT_DATA_SENT});this.props.onSubmitAnalytics(t)}));const{token:t,notificationURL:r}=this.props;if(t){const e=i({token:t,notificationURL:r});this.state={status:"init",fingerPrintData:e}}else this.state={fingerPrintData:{success:!1,error:c}},console.debug(`${p}: ${c}`)}}b(P,"type","scheme"),b(P,"defaultProps",{onComplete:()=>{},onError:()=>{},paymentData:"",showSpinner:!0,isMDFlow:!1});export{P as default};
//# sourceMappingURL=PrepareFingerprint3DS2.js.map
