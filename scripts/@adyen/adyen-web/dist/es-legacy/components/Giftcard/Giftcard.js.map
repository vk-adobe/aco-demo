{"version":3,"file":"Giftcard.js","sources":["../../../../src/components/Giftcard/Giftcard.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport GiftcardComponent from './components/GiftcardComponent';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport PayButton from '../internal/PayButton';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport { PaymentAmount } from '../../types/global-types';\nimport { GiftCardElementData, GiftCardConfiguration, balanceCheckResponseType } from './types';\nimport { TxVariants } from '../tx-variants';\n\nexport class GiftcardElement extends UIElement<GiftCardConfiguration> {\n    public static type = TxVariants.giftcard;\n\n    protected static defaultProps = {\n        brandsConfiguration: {}\n    };\n\n    formatProps(props) {\n        return {\n            ...props?.configuration,\n            ...props\n        };\n    }\n\n    formatData(): GiftCardElementData {\n        return {\n            paymentMethod: {\n                type: this.constructor['type'],\n                brand: this.props.brand,\n                encryptedCardNumber: this.state.data?.encryptedCardNumber,\n                encryptedSecurityCode: this.state.data?.encryptedSecurityCode\n            }\n        };\n    }\n\n    get isValid() {\n        return !!this.state.isValid;\n    }\n\n    get icon() {\n        return this.props.brandsConfiguration[this.props.brand]?.icon || this.props.icon || this.resources.getImage()(this.props.brand);\n    }\n\n    get displayName() {\n        return this.props.brandsConfiguration[this.props.brand]?.name || this.props.name;\n    }\n\n    private handleBalanceCheck = (data: GiftCardElementData): Promise<balanceCheckResponseType> => {\n        if (this.props.onBalanceCheck) {\n            return new Promise((resolve, reject) => {\n                void this.props.onBalanceCheck(resolve, reject, data);\n            });\n        }\n\n        if (this.props.session) {\n            return this.props.session.checkBalance(data);\n        }\n    };\n\n    private onOrderRequest = data => {\n        if (this.props.onOrderRequest)\n            return new Promise((resolve, reject) => {\n                void this.props.onOrderRequest(resolve, reject, data);\n            });\n        if (this.props.session) {\n            return this.props.session.createOrder();\n        }\n    };\n\n    public balanceCheck() {\n        return this.onBalanceCheck();\n    }\n\n    private onBalanceCheck = (): void => {\n        // skip balance check if no onBalanceCheck event has been defined\n        const hasBalanceCheck = this.props.session || this.props.onBalanceCheck;\n        if (!hasBalanceCheck) return super.submit();\n\n        this.setStatus('loading');\n\n        this.handleBalanceCheck(this.formatData())\n            .then(({ balance, transactionLimit = {} as PaymentAmount }) => {\n                if (!balance) throw new Error('card-error'); // card doesn't exist\n                if (balance?.currency !== this.props.amount?.currency) throw new Error('currency-error');\n                if (balance?.value <= 0) throw new Error('no-balance');\n\n                if (this.props.amount.value > balance.value || this.props.amount.value > transactionLimit.value) {\n                    if (this.props.order) {\n                        return this.makeSubmitCall();\n                    }\n\n                    return this.onOrderRequest(this.data).then((order: { orderData: string; pspReference: string }) => {\n                        this.setState({ order: { orderData: order.orderData, pspReference: order.pspReference } });\n                        return this.makeSubmitCall();\n                    });\n                } else {\n                    return this.handleOnRequiringConfirmation(balance, transactionLimit);\n                }\n            })\n            .catch(error => {\n                this.setStatus(error?.message || 'error');\n                if (this.props.onError) {\n                    if (error instanceof AdyenCheckoutError) {\n                        this.handleError(error);\n                    } else {\n                        this.handleError(new AdyenCheckoutError('ERROR', error));\n                    }\n                }\n            });\n    };\n\n    /**\n     * Check if it should call onRequiringConfirmation\n     */\n    private handleOnRequiringConfirmation = (balance, transactionLimit): Promise<any> => {\n        this.componentRef.setBalance({ balance, transactionLimit });\n        this.setStatus('ready');\n\n        // 1. if we show pay button we don't need to ask for confirmation\n        if (this.props.showPayButton) {\n            return;\n        }\n        // 2. there's no callback, we throw error\n        if (!this.props.onRequiringConfirmation) {\n            throw new AdyenCheckoutError('IMPLEMENTATION_ERROR', 'onRequiringConfirmation must be provided');\n        }\n        // 3. success case if in case of custom pay button\n        return (\n            new Promise<void>((resolve, reject) => {\n                void this.props.onRequiringConfirmation(resolve, reject);\n            })\n                //when this resolve passed to onRequiringConfirmation gets resolved make payments call\n                .then(() => this.makeSubmitCall())\n                //when it gets rejected handle cancellation\n                .catch(() => {})\n        );\n    };\n\n    public submit() {\n        // for simplicity of the merchant we always only expose .submit()\n        // however to make the actual payment call we call makeSubmitCall\n        if (!this.isValid) {\n            this.showValidation();\n            return false;\n        }\n\n        this.balanceCheck();\n    }\n\n    // this makes the payment, as .submit is used by the merchant to trigger the payButton action\n    private makeSubmitCall() {\n        super.submit();\n    }\n\n    // Giftcards override the regular payButton flow\n    public payButton = props => {\n        return <PayButton {...props} />;\n    };\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <GiftcardComponent\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    {...this.props}\n                    handleKeyPress={this.handleKeyPress}\n                    showPayButton={this.props.showPayButton}\n                    onChange={this.setState}\n                    makeBalanceCheck={() => this.onBalanceCheck()}\n                    makePayment={() => this.makeSubmitCall()}\n                    payButton={this.payButton}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default GiftcardElement;\n"],"names":["GiftcardElement","UIElement","formatProps","props","_object_spread","configuration","formatData","_this_state_data","_this_state_data1","paymentMethod","type","this","constructor","brand","encryptedCardNumber","state","data","encryptedSecurityCode","isValid","icon","_this_props_brandsConfiguration_this_props_brand","brandsConfiguration","resources","getImage","displayName","name","balanceCheck","onBalanceCheck","submit","showValidation","makeSubmitCall","super","render","h","CoreProvider","i18n","loadingContext","GiftcardComponent","ref","componentRef","handleKeyPress","showPayButton","onChange","setState","makeBalanceCheck","makePayment","payButton","args","_define_property","handleBalanceCheck","Promise","resolve","reject","session","checkBalance","onOrderRequest","createOrder","setStatus","then","balance","transactionLimit","_this_props_amount","Error","currency","amount","value","order","orderData","pspReference","handleOnRequiringConfirmation","catch","error","message","onError","AdyenCheckoutError","handleError","setBalance","onRequiringConfirmation","PayButton","TxVariants","giftcard","defaultProps"],"mappings":"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"}