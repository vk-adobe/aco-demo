{"version":3,"file":"GiftcardNumberField.js","sources":["../../../../../src/components/Giftcard/components/GiftcardNumberField.tsx"],"sourcesContent":["import DataSfSpan from '../../Card/components/CardInput/components/DataSfSpan';\nimport classNames from 'classnames';\nimport Field from '../../internal/FormFields/Field';\nimport { h } from 'preact';\nimport { GiftcardFieldProps } from './types';\nimport { alternativeLabelContent } from '../../Card/components/CardInput/components/FieldLabelAlternative';\n\nexport const GiftcardNumberField = ({ i18n, classNameModifiers, sfpState, getCardErrorMessage, focusedElement, setFocusOn }: GiftcardFieldProps) => {\n    return (\n        <Field\n            label={i18n.get('giftcard.cardNumber.label')}\n            classNameModifiers={['number', ...classNameModifiers]}\n            errorMessage={getCardErrorMessage(sfpState)}\n            focused={focusedElement === 'encryptedCardNumber'}\n            onFocusField={() => setFocusOn('encryptedCardNumber')}\n            dir={'ltr'}\n            name={'encryptedCardNumber'}\n            contextVisibleToScreenReader={false}\n            useLabelElement={false}\n            renderAlternativeToLabel={alternativeLabelContent}\n        >\n            <DataSfSpan\n                encryptedFieldType=\"encryptedCardNumber\"\n                data-info='{\"length\":\"15-32\", \"maskInterval\":4}'\n                className={classNames({\n                    'adyen-checkout__input': true,\n                    'adyen-checkout__input--large': true,\n                    'adyen-checkout__card__cardNumber__input': true,\n                    'adyen-checkout__input--error': getCardErrorMessage(sfpState),\n                    'adyen-checkout__input--focus': focusedElement === 'encryptedCardNumber'\n                })}\n            />\n        </Field>\n    );\n};\n"],"names":["GiftcardNumberField","i18n","classNameModifiers","sfpState","getCardErrorMessage","focusedElement","setFocusOn","h","Field","label","get","errorMessage","focused","onFocusField","dir","name","contextVisibleToScreenReader","useLabelElement","renderAlternativeToLabel","alternativeLabelContent","DataSfSpan","encryptedFieldType","data-info","className","classNames"],"mappings":"gWAOaA,MAAAA,EAAsB,EAAGC,OAAMC,qBAAoBC,WAAUC,sBAAqBC,iBAAgBC,gBAEvGC,EAACC,EAAAA,CACGC,MAAOR,EAAKS,IAAI,6BAChBR,mBAAoB,CAAC,YAAaA,GAClCS,aAAcP,EAAoBD,GAClCS,QAA4B,wBAAnBP,EACTQ,aAAc,IAAMP,EAAW,uBAC/BQ,IAAK,MACLC,KAAM,sBACNC,8BAA8B,EAC9BC,iBAAiB,EACjBC,yBAA0BC,GAE1BZ,EAACa,EAAAA,CACGC,mBAAmB,sBACnBC,YAAU,uCACVC,UAAWC,EAAW,CAClB,yBAAyB,EACzB,gCAAgC,EAChC,2CAA2C,EAC3C,+BAAgCpB,EAAoBD,GACpD,+BAAmD,wBAAnBE"}