{"version":3,"file":"defaultProps.js","sources":["../../../../src/components/GooglePay/defaultProps.ts"],"sourcesContent":["import { GooglePayConfiguration } from './types';\n\nconst defaultProps: GooglePayConfiguration = {\n    isExpress: false,\n\n    // isReadyToPayRequest\n    existingPaymentMethodRequired: false,\n\n    // ButtonOptions\n    // https://developers.google.com/pay/api/web/reference/object#ButtonOptions\n    buttonColor: 'default',\n    buttonType: 'buy',\n    buttonSizeMode: 'fill',\n\n    // PaymentDataRequest\n    configuration: {\n        // Adyen's merchant account\n        gatewayMerchantId: '', // E.g TestMerchant\n\n        // https://developers.google.com/pay/api/web/reference/object#MerchantInfo\n        merchantId: '', // E.g 039484839309\n        merchantName: '' // E.g Example Merchant,\n    },\n\n    // Payment\n    amount: {\n        value: 0,\n        currency: 'USD'\n    },\n\n    totalPriceStatus: 'FINAL',\n\n    // Callbacks\n    onClick: resolve => resolve(),\n\n    // CardParameters\n    // https://developers.google.com/pay/api/web/reference/object#CardParameters\n    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'] as google.payments.api.CardAuthMethod[],\n    allowedCardNetworks: ['AMEX', 'DISCOVER', 'JCB', 'MASTERCARD', 'VISA'] as google.payments.api.CardNetwork[],\n    allowCreditCards: true, // Set to false if you don't support credit cards.\n    allowPrepaidCards: true, // Set to false if you don't support prepaid cards.\n    billingAddressRequired: false, // A billing address should only be requested if it's required to process the transaction.\n    billingAddressParameters: undefined, // The expected fields returned if billingAddressRequired is set to true.\n    assuranceDetailsRequired: false, // https://developers.google.com/pay/api/web/reference/response-objects#assurance-details-specifications\n\n    emailRequired: false,\n    shippingAddressRequired: false,\n    shippingAddressParameters: undefined, // https://developers.google.com/pay/api/web/reference/object#ShippingAddressParameters\n    shippingOptionRequired: false,\n    shippingOptionParameters: undefined,\n    callbackIntents: []\n};\n\nexport default defaultProps;\n"],"names":["defaultProps","isExpress","existingPaymentMethodRequired","buttonColor","buttonType","buttonSizeMode","configuration","gatewayMerchantId","merchantId","merchantName","amount","value","currency","totalPriceStatus","onClick","resolve","allowedAuthMethods","allowedCardNetworks","allowCreditCards","allowPrepaidCards","billingAddressRequired","billingAddressParameters","undefined","assuranceDetailsRequired","emailRequired","shippingAddressRequired","shippingAddressParameters","shippingOptionRequired","shippingOptionParameters","callbackIntents"],"mappings":"AAEA,MAAMA,EAAuC,CACzCC,WAAW,EAGXC,+BAA+B,EAI/BC,YAAa,UACbC,WAAY,MACZC,eAAgB,OAGhBC,cAAe,CAEXC,kBAAmB,GAGnBC,WAAY,GACZC,aAAc,IAIlBC,OAAQ,CACJC,MAAO,EACPC,SAAU,OAGdC,iBAAkB,QAGlBC,QAASC,GAAWA,IAIpBC,mBAAoB,CAAC,WAAY,kBACjCC,oBAAqB,CAAC,OAAQ,WAAY,MAAO,aAAc,QAC/DC,kBAAkB,EAClBC,mBAAmB,EACnBC,wBAAwB,EACxBC,8BAA0BC,EAC1BC,0BAA0B,EAE1BC,eAAe,EACfC,yBAAyB,EACzBC,+BAA2BJ,EAC3BK,wBAAwB,EACxBC,8BAA0BN,EAC1BO,gBAAiB"}