{"version":3,"file":"ANCV.js","sources":["../../../../src/components/ANCV/ANCV.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport ANCVInput from './components/ANCVInput';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport config from './components/ANCVAwait/config';\nimport Await from '../../components/internal/Await';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\nimport AdyenCheckoutError from '../../core/Errors/AdyenCheckoutError';\nimport PayButton from '../internal/PayButton';\nimport { ANCVConfiguration } from './types';\nimport { sanitizeResponse, verifyPaymentDidNotFail } from '../internal/UIElement/utils';\n\nexport class ANCVElement extends UIElement<ANCVConfiguration> {\n    public static type = 'ancv';\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        return {\n            paymentMethod: {\n                type: ANCVElement.type,\n                beneficiaryId: this.state.data?.beneficiaryId\n            }\n        };\n    }\n\n    private onOrderRequest = data => {\n        if (this.props.onOrderRequest)\n            return new Promise((resolve, reject) => {\n                this.props.onOrderRequest(resolve, reject, data);\n            });\n\n        if (this.props.session) {\n            return this.props.session.createOrder();\n        }\n    };\n\n    /**\n     * Check if order exists, if it does Resolve.\n     * Otherwise createOrder and then Resolve.\n     */\n    public createOrder = (): Promise<void> => {\n        this.setStatus('loading');\n\n        // allow for multiple ANCV payments, follow giftcard logic and just use order if it exists\n        if (this.props.order) {\n            return Promise.resolve();\n        }\n\n        return this.onOrderRequest(this.data)\n            .then((order: { orderData: string; pspReference: string }) => {\n                const stateOrder = { order: { orderData: order.orderData, pspReference: order.pspReference } };\n                this.setState(stateOrder);\n                return Promise.resolve();\n            })\n            .catch(error => {\n                this.setStatus(error?.message || 'error');\n                if (this.props.onError) {\n                    if (error instanceof AdyenCheckoutError) {\n                        this.handleError(error);\n                    } else {\n                        this.handleError(new AdyenCheckoutError('ERROR', error));\n                    }\n                }\n            });\n    };\n\n    public submit() {\n        if (!this.isValid) {\n            this.showValidation();\n            return false;\n        }\n\n        this.createOrder()\n            .then(this.makePaymentsCall)\n            .then(sanitizeResponse)\n            .then(verifyPaymentDidNotFail)\n            .then(this.handleResponse)\n            .catch(this.handleFailedResult);\n    }\n\n    // Reimplement payButton similar to GiftCard to allow to set onClick\n    public payButton = props => {\n        return <PayButton {...props} />;\n    };\n\n    get isValid(): boolean {\n        return !!this.state.isValid;\n    }\n\n    get displayName(): string {\n        return this.props.name;\n    }\n\n    render() {\n        if (this.props.paymentData) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                        <Await\n                            ref={ref => {\n                                this.componentRef = ref;\n                            }}\n                            clientKey={this.props.clientKey}\n                            paymentData={this.props.paymentData}\n                            onError={this.props.onError}\n                            onComplete={this.onComplete}\n                            brandLogo={this.icon}\n                            type={this.constructor['type']}\n                            messageText={this.props.i18n.get('ancv.confirmPayment')}\n                            awaitText={this.props.i18n.get('await.waitForConfirmation')}\n                            showCountdownTimer={config.showCountdownTimer}\n                            throttleTime={config.THROTTLE_TIME}\n                            throttleInterval={config.THROTTLE_INTERVAL}\n                            onActionHandled={this.onActionHandled}\n                        />\n                    </SRPanelProvider>\n                </CoreProvider>\n            );\n        }\n\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <ANCVInput\n                    ref={ref => {\n                        this.componentRef = ref;\n                    }}\n                    {...this.props}\n                    onSubmit={this.submit}\n                    onChange={this.setState}\n                    payButton={this.payButton}\n                    showPayButton={this.props.showPayButton}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default ANCVElement;\n"],"names":["ANCVElement","UIElement","formatData","_this_state_data","paymentMethod","type","beneficiaryId","this","state","data","submit","isValid","showValidation","createOrder","then","makePaymentsCall","sanitizeResponse","verifyPaymentDidNotFail","handleResponse","catch","handleFailedResult","displayName","props","name","render","paymentData","h","CoreProvider","i18n","loadingContext","resources","SRPanelProvider","srPanel","modules","Await","ref","componentRef","clientKey","onError","onComplete","brandLogo","icon","constructor","messageText","get","awaitText","showCountdownTimer","config","throttleTime","THROTTLE_TIME","throttleInterval","THROTTLE_INTERVAL","onActionHandled","ANCVInput","onSubmit","onChange","setState","payButton","showPayButton","super","args","_define_property","onOrderRequest","Promise","resolve","reject","session","setStatus","order","stateOrder","orderData","pspReference","error","message","AdyenCheckoutError","handleError","PayButton"],"mappings":"4iCAYO,MAAMA,UAAoBC,EAM7BC,UAAAA,GAI2B,IAAAC,EAHvB,MAAO,CACHC,cAAe,CACXC,KAAML,EAAYK,KAClBC,cAA8B,QAAfH,EAAAI,KAAKC,MAAMC,YAAX,IAAAN,OAAA,EAAAA,EAAiBG,eAG5C,CA2COI,MAAAA,GACH,IAAKH,KAAKI,QAEN,OADAJ,KAAKK,kBACE,EAGXL,KAAKM,cACAC,KAAKP,KAAKQ,kBACVD,KAAKE,GACLF,KAAKG,GACLH,KAAKP,KAAKW,gBACVC,MAAMZ,KAAKa,mBACpB,CAOA,WAAIT,GACA,QAASJ,KAAKC,MAAMG,OACxB,CAEA,eAAIU,GACA,OAAOd,KAAKe,MAAMC,IACtB,CAEAC,MAAAA,GACI,OAAIjB,KAAKe,MAAMG,YAEPC,EAACC,EAAAA,CAAaC,KAAMrB,KAAKe,MAAMM,KAAMC,eAAgBtB,KAAKe,MAAMO,eAAgBC,UAAWvB,KAAKuB,WAC5FJ,EAACK,EAAAA,CAAgBC,QAASzB,KAAKe,MAAMW,QAAQD,SACzCN,EAACQ,EAAAA,CACGC,IAAKA,IACD5B,KAAK6B,aAAeD,CAAAA,EAExBE,UAAW9B,KAAKe,MAAMe,UACtBZ,YAAalB,KAAKe,MAAMG,YACxBa,QAAS/B,KAAKe,MAAMgB,QACpBC,WAAYhC,KAAKgC,WACjBC,UAAWjC,KAAKkC,KAChBpC,KAAME,KAAKmC,YAAmB,KAC9BC,YAAapC,KAAKe,MAAMM,KAAKgB,IAAI,uBACjCC,UAAWtC,KAAKe,MAAMM,KAAKgB,IAAI,6BAC/BE,mBAAoBC,EAAOD,mBAC3BE,aAAcD,EAAOE,cACrBC,iBAAkBH,EAAOI,kBACzBC,gBAAiB7C,KAAK6C,oBAQtC1B,EAACC,EAAAA,CAAaC,KAAMrB,KAAKe,MAAMM,KAAMC,eAAgBtB,KAAKe,MAAMO,eAAgBC,UAAWvB,KAAKuB,WAC5FJ,EAAC2B,EAAAA,wUAAAA,CAAAA,CACGlB,IAAKA,IACD5B,KAAK6B,aAAeD,CAAAA,GAEpB5B,KAAKe,OAAK,CACdgC,SAAU/C,KAAKG,OACf6C,SAAUhD,KAAKiD,SACfC,UAAWlD,KAAKkD,UAChBC,cAAenD,KAAKe,MAAMoC,iBAI1C,mBA5HGC,SAeHC,GAAAC,EAAAtD,KAAQuD,kBAAiBrD,GACjBF,KAAKe,MAAMwC,eACJ,IAAIC,SAAQ,CAACC,EAASC,KACzB1D,KAAKe,MAAMwC,eAAeE,EAASC,EAAQxD,EAAAA,IAG/CF,KAAKe,MAAM4C,QACJ3D,KAAKe,MAAM4C,QAAQrD,mBAD9B,IASJgD,OAAOhD,eAAc,KACjBN,KAAK4D,UAAU,WAGX5D,KAAKe,MAAM8C,MACJL,QAAQC,UAGZzD,KAAKuD,eAAevD,KAAKE,MAC3BK,MAAMsD,IACH,MAAMC,EAAa,CAAED,MAAO,CAAEE,UAAWF,EAAME,UAAWC,aAAcH,EAAMG,eAE9E,OADAhE,KAAKiD,SAASa,GACPN,QAAQC,SAAO,IAEzB7C,OAAMqD,IACHjE,KAAK4D,WAAUK,aAAAA,EAAAA,EAAOC,UAAW,SAC7BlE,KAAKe,MAAMgB,UACPkC,aAAiBE,EACjBnE,KAAKoE,YAAYH,GAEjBjE,KAAKoE,YAAY,IAAID,EAAmB,QAASF,IAEzD,OAmBZX,EAAAtD,KAAOkD,aAAYnC,GACRI,EAACkD,EAActD,MAvE1BuC,EADS7D,EACKK,OAAO"}