{"version":3,"file":"ANCVInput.js","sources":["../../../../../src/components/ANCV/components/ANCVInput.tsx"],"sourcesContent":["import { h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport { useCoreContext } from '../../../core/Context/CoreProvider';\nimport LoadingWrapper from '../../internal/LoadingWrapper';\nimport InputText from '../../internal/FormFields/InputText';\nimport Field from '../../internal/FormFields/Field';\nimport useForm from '../../../utils/useForm';\nimport { ancvValidationRules } from '../validate';\nimport { ANCVDataState } from '../types';\nimport { UIElementProps } from '../../internal/UIElement/types';\n\nexport interface ANCVInputProps extends UIElementProps {\n    ref?: any;\n    showPayButton: boolean;\n    onSubmit: () => void;\n}\n\ntype ANCVInputDataState = ANCVDataState;\n\nfunction ANCVInput({ showPayButton, payButton, onChange, onSubmit }: ANCVInputProps) {\n    const { i18n } = useCoreContext();\n\n    const { handleChangeFor, triggerValidation, data, valid, errors, isValid } = useForm<ANCVInputDataState>({\n        schema: ['beneficiaryId'],\n        rules: ancvValidationRules\n    });\n\n    useEffect(() => {\n        // @ts-ignore TODO: Fix this. Preact component types should not inherit from UIElementProps.\n        onChange({ data, errors, valid, isValid }, this);\n    }, [data, valid, errors, isValid]);\n\n    const [status, setStatus] = useState<string>('ready');\n\n    this.setStatus = setStatus;\n    this.showValidation = triggerValidation;\n\n    return (\n        <LoadingWrapper>\n            <div className=\"adyen-checkout__ancv\">\n                <p className=\"adyen-checkout-form-instruction\">{i18n.get('ancv.form.instruction')}</p>\n                <Field\n                    errorMessage={!!errors.beneficiaryId && i18n.get(errors.beneficiaryId.errorMessage)}\n                    label={i18n.get('ancv.input.label')}\n                    isValid={valid.beneficiaryId}\n                    name={'beneficiaryId'}\n                >\n                    <InputText\n                        value={data.beneficiaryId}\n                        name={'beneficiaryId'}\n                        spellcheck={true}\n                        required={true}\n                        onInput={handleChangeFor('beneficiaryId', 'input')}\n                        onBlur={handleChangeFor('beneficiaryId', 'blur')}\n                    />\n                </Field>\n                {showPayButton && payButton({ status, label: i18n.get('confirmPurchase'), onClick: onSubmit })}\n            </div>\n        </LoadingWrapper>\n    );\n}\n\nANCVInput.defaultProps = {};\n\nexport default ANCVInput;\n"],"names":["ANCVInput","showPayButton","payButton","onChange","onSubmit","i18n","useCoreContext","handleChangeFor","triggerValidation","data","valid","errors","isValid","useForm","schema","rules","ancvValidationRules","useEffect","this","status","setStatus","useState","showValidation","h","LoadingWrapper","div","className","p","get","Field","errorMessage","beneficiaryId","label","name","InputText","value","spellcheck","required","onInput","onBlur","onClick","defaultProps"],"mappings":"yfAmBA,SAASA,GAAUC,cAAEA,EAAaC,UAAEA,EAASC,SAAEA,EAAQC,SAAEA,IACrD,MAAMC,KAAEA,GAASC,KAEXC,gBAAEA,EAAeC,kBAAEA,EAAiBC,KAAEA,EAAIC,MAAEA,EAAKC,OAAEA,EAAMC,QAAEA,GAAYC,EAA4B,CACrGC,OAAQ,CAAC,iBACTC,MAAOC,IAGXC,GAAU,KAENd,EAAS,CAAEM,OAAME,SAAQD,QAAOE,WAAWM,KAAI,GAChD,CAACT,EAAMC,EAAOC,EAAQC,IAEzB,MAAOO,EAAQC,GAAaC,EAAiB,SAK7C,OAHAH,KAAKE,UAAYA,EACjBF,KAAKI,eAAiBd,EAGlBe,EAACC,OACGD,EAACE,MAAAA,CAAIC,UAAU,wBACXH,EAACI,IAAAA,CAAED,UAAU,mCAAmCrB,EAAKuB,IAAI,0BACzDL,EAACM,EAAAA,CACGC,eAAgBnB,EAAOoB,eAAiB1B,EAAKuB,IAAIjB,EAAOoB,cAAcD,cACtEE,MAAO3B,EAAKuB,IAAI,oBAChBhB,QAASF,EAAMqB,cACfE,KAAM,iBAENV,EAACW,EAAAA,CACGC,MAAO1B,EAAKsB,cACZE,KAAM,gBACNG,YAAY,EACZC,UAAU,EACVC,QAAS/B,EAAgB,gBAAiB,SAC1CgC,OAAQhC,EAAgB,gBAAiB,WAGhDN,GAAiBC,EAAU,CAAEiB,SAAQa,MAAO3B,EAAKuB,IAAI,mBAAoBY,QAASpC,KAInG,CAEAJ,EAAUyC,aAAe,CAAC"}