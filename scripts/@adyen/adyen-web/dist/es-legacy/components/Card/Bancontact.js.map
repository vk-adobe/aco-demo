{"version":3,"file":"Bancontact.js","sources":["../../../../src/components/Card/Bancontact.ts"],"sourcesContent":["import { CardElement } from './Card';\nimport { CardElementData, CardConfiguration } from './types';\nimport { CVC_POLICY_HIDDEN } from '../internal/SecuredFields/lib/constants';\nimport { TxVariants } from '../tx-variants';\nimport type { ICore } from '../../core/types';\n\nclass BancontactElement extends CardElement {\n    public static type = TxVariants.bcmc;\n\n    constructor(checkout: ICore, props?: CardConfiguration) {\n        super(checkout, props);\n    }\n\n    protected static defaultProps = {\n        ...CardElement.defaultProps,\n        brands: ['bcmc', 'maestro', 'visa']\n    };\n\n    formatData(): CardElementData {\n        const data = super.formatData();\n        data.paymentMethod.type = this.constructor['type'];\n        return data;\n    }\n\n    /**\n     * Now that the Bancontact (BCMC) Card component can accept a number dual branded with Visa (which requires a CVC) it has to be handled differently\n     * at creation time (no automatic removing of the CVC securedField).\n     * At the same time we can't treat it as a regular 'card' component - because it needs to hide the CVC field at at startup,\n     * as well as show the BCMC logo in the number field and ignore any of the internal, regEx driven, brand detection.\n     */\n    formatProps(props: CardConfiguration) {\n        return {\n            ...super.formatProps(props),\n            /**\n             * Force type (only for the Dropin is type automatically set to 'bcmc')\n             * - this will bypass the regEx brand detection that SF normally tries to carry out when the first few digits are entered in the PAN\n             */\n            type: TxVariants.bcmc,\n            brand: TxVariants.bcmc,\n            cvcPolicy: CVC_POLICY_HIDDEN\n        };\n    }\n\n    // Disable internal event.emit() for Bancontact\n    public onBrand = event => {\n        if (this.props.onBrand) this.props.onBrand(event);\n    };\n}\n\nexport default BancontactElement;\n"],"names":["BancontactElement","CardElement","formatData","data","super","paymentMethod","type","this","constructor","formatProps","props","_object_spread_props","_object_spread","TxVariants","bcmc","brand","cvcPolicy","CVC_POLICY_HIDDEN","checkout","_define_property","onBrand","event","defaultProps","brands"],"mappings":"q9BAMA,MAAMA,UAA0BC,EAY5BC,UAAAA,GACI,MAAMC,EAAOC,MAAMF,aAEnB,OADAC,EAAKE,cAAcC,KAAOC,KAAKC,YAAmB,KAC3CL,CACX,CAQAM,WAAAA,CAAYC,GACR,OAAOC,EAAAC,EAAA,CAAA,EACAR,MAAMK,YAAYC,IAAAA,CAKrBJ,KAAMO,EAAWC,KACjBC,MAAOF,EAAWC,KAClBE,UAAWC,GAEnB,CAhCAT,WAAAA,CAAYU,EAAiBR,GACzBN,MAAMc,EAAUR,GAkCpBS,EAAAZ,KAAOa,WAAUC,IACTd,KAAKG,MAAMU,SAASb,KAAKG,MAAMU,QAAQC,EAAAA,GAlC/C,EAJAF,EADEnB,EACYM,OAAOO,EAAWC,MAMhCK,EAPEnB,EAOesB,eAAeX,EACzBV,EAAAA,GAAAA,EAAYqB,cAAY,CAC3BC,OAAQ,CAAC,OAAQ,UAAW"}