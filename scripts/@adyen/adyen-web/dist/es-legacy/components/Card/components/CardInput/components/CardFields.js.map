{"version":3,"file":"CardFields.js","sources":["../../../../../../../src/components/Card/components/CardInput/components/CardFields.tsx"],"sourcesContent":["import { h } from 'preact';\nimport CardNumber from './CardNumber';\nimport CVC from './CVC';\nimport ExpirationDate from './ExpirationDate';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport { CardFieldsProps } from './types';\nimport classNames from 'classnames';\nimport {\n    BRAND_ICON_UI_EXCLUSION_LIST,\n    DATE_POLICY_HIDDEN,\n    ENCRYPTED_CARD_NUMBER,\n    ENCRYPTED_EXPIRY_DATE,\n    ENCRYPTED_SECURITY_CODE\n} from '../../../../internal/SecuredFields/lib/constants';\nimport AvailableBrands from './AvailableBrands';\n\nexport default function CardFields({\n    brand,\n    brandsIcons,\n    brandsConfiguration,\n    dualBrandingElements,\n    errors,\n    focusedElement,\n    hasCVC,\n    cvcPolicy,\n    expiryDatePolicy,\n    onFocusField,\n    showBrandIcon,\n    valid,\n    showContextualElement\n}: CardFieldsProps) {\n    const { i18n } = useCoreContext();\n\n    const getError = (errors, fieldType) => {\n        return errors[fieldType] ? i18n.get(errors[fieldType]) : null;\n    };\n\n    // A set of brands filtered to exclude those that can never appear in the UI\n    const allowedBrands = brandsIcons?.filter(brandsIcons => !BRAND_ICON_UI_EXCLUSION_LIST?.includes(brandsIcons.name));\n    const isAmex = brand === 'amex';\n    const cvcContextualText = isAmex\n        ? i18n.get('creditCard.securityCode.contextualText.4digits')\n        : i18n.get('creditCard.securityCode.contextualText.3digits');\n\n    return (\n        <div className=\"adyen-checkout__card__form\">\n            <CardNumber\n                brand={brand}\n                brandsConfiguration={brandsConfiguration}\n                error={getError(errors, ENCRYPTED_CARD_NUMBER)}\n                focused={focusedElement === ENCRYPTED_CARD_NUMBER}\n                isValid={!!valid.encryptedCardNumber}\n                label={i18n.get('creditCard.cardNumber.label')}\n                onFocusField={onFocusField}\n                filled={!!errors.encryptedCardNumber || !!valid.encryptedCardNumber}\n                showBrandIcon={showBrandIcon}\n                dualBrandingElements={dualBrandingElements}\n            />\n\n            <AvailableBrands activeBrand={brand} brands={allowedBrands} />\n\n            <div\n                className={classNames('adyen-checkout__card__exp-cvc adyen-checkout__field-wrapper', {\n                    'adyen-checkout__card__exp-cvc__exp-date__input--hidden': expiryDatePolicy === DATE_POLICY_HIDDEN\n                })}\n            >\n                <ExpirationDate\n                    error={getError(errors, ENCRYPTED_EXPIRY_DATE)}\n                    focused={focusedElement === ENCRYPTED_EXPIRY_DATE}\n                    isValid={!!valid.encryptedExpiryMonth && !!valid.encryptedExpiryYear}\n                    filled={!!errors.encryptedExpiryDate || !!valid.encryptedExpiryYear}\n                    label={i18n.get('creditCard.expiryDate.label')}\n                    onFocusField={onFocusField}\n                    className={'adyen-checkout__field--50'}\n                    expiryDatePolicy={expiryDatePolicy}\n                    showContextualElement={showContextualElement}\n                    contextualText={i18n.get('creditCard.expiryDate.contextualText')}\n                />\n\n                {hasCVC && (\n                    <CVC\n                        error={getError(errors, ENCRYPTED_SECURITY_CODE)}\n                        focused={focusedElement === ENCRYPTED_SECURITY_CODE}\n                        cvcPolicy={cvcPolicy}\n                        isValid={!!valid.encryptedSecurityCode}\n                        filled={!!errors.encryptedSecurityCode || !!valid.encryptedSecurityCode}\n                        label={i18n.get('creditCard.securityCode.label')}\n                        onFocusField={onFocusField}\n                        className={'adyen-checkout__field--50'}\n                        frontCVC={isAmex}\n                        showContextualElement={showContextualElement}\n                        contextualText={cvcContextualText}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n"],"names":["CardFields","brand","brandsIcons","brandsConfiguration","dualBrandingElements","errors","focusedElement","hasCVC","cvcPolicy","expiryDatePolicy","onFocusField","showBrandIcon","valid","showContextualElement","i18n","useCoreContext","getError","fieldType","get","allowedBrands","filter","BRAND_ICON_UI_EXCLUSION_LIST","includes","name","isAmex","cvcContextualText","h","div","className","CardNumber","error","ENCRYPTED_CARD_NUMBER","focused","isValid","encryptedCardNumber","label","filled","AvailableBrands","activeBrand","brands","classNames","DATE_POLICY_HIDDEN","ExpirationDate","ENCRYPTED_EXPIRY_DATE","encryptedExpiryMonth","encryptedExpiryYear","encryptedExpiryDate","contextualText","CVC","ENCRYPTED_SECURITY_CODE","encryptedSecurityCode","frontCVC"],"mappings":"uiBAgBe,SAASA,GAAWC,MAC/BA,EAAKC,YACLA,EAAWC,oBACXA,EAAmBC,qBACnBA,EAAoBC,OACpBA,EAAMC,eACNA,EAAcC,OACdA,EAAMC,UACNA,EAASC,iBACTA,EAAgBC,aAChBA,EAAYC,cACZA,EAAaC,MACbA,EAAKC,sBACLA,IAEA,MAAMC,KAAEA,GAASC,IAEXC,EAAW,CAACX,EAAQY,IACfZ,EAAOY,GAAaH,EAAKI,IAAIb,EAAOY,IAAc,KAIvDE,EAAgBjB,aAAAA,EAAAA,EAAakB,QAAOlB,KAAgBmB,aAAAA,EAAAA,EAA8BC,SAASpB,EAAYqB,SACvGC,EAAmB,SAAVvB,EACTwB,EAAoBD,EACpBV,EAAKI,IAAI,kDACTJ,EAAKI,IAAI,kDAEf,OACIQ,EAACC,MAAAA,CAAIC,UAAU,8BACXF,EAACG,EAAAA,CACG5B,MAAOA,EACPE,oBAAqBA,EACrB2B,MAAOd,EAASX,EAAQ0B,GACxBC,QAAS1B,IAAmByB,EAC5BE,UAAWrB,EAAMsB,oBACjBC,MAAOrB,EAAKI,IAAI,+BAChBR,aAAcA,EACd0B,SAAU/B,EAAO6B,uBAAyBtB,EAAMsB,oBAChDvB,cAAeA,EACfP,qBAAsBA,IAG1BsB,EAACW,EAAAA,CAAgBC,YAAarC,EAAOsC,OAAQpB,IAE7CO,EAACC,MAAAA,CACGC,UAAWY,EAAW,8DAA+D,CACjF,yDAA0D/B,IAAqBgC,KAGnFf,EAACgB,EAAAA,CACGZ,MAAOd,EAASX,EAAQsC,GACxBX,QAAS1B,IAAmBqC,EAC5BV,UAAWrB,EAAMgC,wBAA0BhC,EAAMiC,oBACjDT,SAAU/B,EAAOyC,uBAAyBlC,EAAMiC,oBAChDV,MAAOrB,EAAKI,IAAI,+BAChBR,aAAcA,EACdkB,UAAW,4BACXnB,iBAAkBA,EAClBI,sBAAuBA,EACvBkC,eAAgBjC,EAAKI,IAAI,0CAG5BX,GACGmB,EAACsB,EAAAA,CACGlB,MAAOd,EAASX,EAAQ4C,GACxBjB,QAAS1B,IAAmB2C,EAC5BzC,UAAWA,EACXyB,UAAWrB,EAAMsC,sBACjBd,SAAU/B,EAAO6C,yBAA2BtC,EAAMsC,sBAClDf,MAAOrB,EAAKI,IAAI,iCAChBR,aAAcA,EACdkB,UAAW,4BACXuB,SAAU3B,EACVX,sBAAuBA,EACvBkC,eAAgBtB,KAMxC"}