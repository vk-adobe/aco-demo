{"version":3,"file":"StoredCardFields.js","sources":["../../../../../../../src/components/Card/components/CardInput/components/StoredCardFields.tsx"],"sourcesContent":["import { h } from 'preact';\nimport CVC from './CVC';\nimport Field from '../../../../internal/FormFields/Field';\nimport { useCoreContext } from '../../../../../core/Context/CoreProvider';\nimport { StoredCardFieldsProps } from './types';\nimport { ENCRYPTED_SECURITY_CODE } from '../../../../internal/SecuredFields/lib/constants';\nimport InputText from '../../../../internal/FormFields/InputText';\n\nexport default function StoredCardFields({\n    brand,\n    hasCVC,\n    onFocusField,\n    errors,\n    valid,\n    cvcPolicy,\n    focusedElement,\n    lastFour,\n    expiryMonth,\n    expiryYear,\n    showContextualElement\n}: StoredCardFieldsProps) {\n    const { i18n } = useCoreContext();\n    const storedCardDescription = i18n.get('creditCard.storedCard.description.ariaLabel').replace('%@', lastFour);\n    const storedCardDescriptionSuffix = expiryMonth && expiryYear ? ` ${i18n.get('creditCard.expiryDate.label')} ${expiryMonth}/${expiryYear}` : '';\n    const ariaLabel = `${storedCardDescription}${storedCardDescriptionSuffix}`;\n    const isAmex = brand === 'amex';\n    const cvcContextualText = isAmex\n        ? i18n.get('creditCard.securityCode.contextualText.4digits')\n        : i18n.get('creditCard.securityCode.contextualText.3digits');\n\n    const getError = (errors, fieldType) => {\n        return errors[fieldType] ? i18n.get(errors[fieldType]) : null;\n    };\n\n    return (\n        <div className=\"adyen-checkout__card__form adyen-checkout__card__form--oneClick\" aria-label={ariaLabel}>\n            <div className=\"adyen-checkout__card__exp-cvc adyen-checkout__field-wrapper\">\n                {expiryMonth && expiryYear && (\n                    <Field\n                        label={i18n.get('creditCard.expiryDate.label')}\n                        className=\"adyen-checkout__field--50\"\n                        classNameModifiers={['storedCard']}\n                        name={'expiryDateField'}\n                        disabled\n                    >\n                        <InputText\n                            name={'expiryDateField'}\n                            className={'adyen-checkout__input adyen-checkout__input--disabled adyen-checkout__card__exp-date__input--oneclick'}\n                            value={`${expiryMonth} / ${expiryYear}`}\n                            disabled={true}\n                            dir={'ltr'}\n                        />\n                    </Field>\n                )}\n\n                {hasCVC && (\n                    <CVC\n                        cvcPolicy={cvcPolicy}\n                        error={getError(errors, ENCRYPTED_SECURITY_CODE)}\n                        focused={focusedElement === 'encryptedSecurityCode'}\n                        filled={!!valid.encryptedSecurityCode || !!errors.encryptedSecurityCode}\n                        isValid={!!valid.encryptedSecurityCode}\n                        label={i18n.get('creditCard.securityCode.label')}\n                        onFocusField={onFocusField}\n                        {...(expiryMonth && expiryYear && { className: 'adyen-checkout__field--50' })}\n                        classNameModifiers={['storedCard']}\n                        frontCVC={isAmex}\n                        showContextualElement={showContextualElement}\n                        contextualText={cvcContextualText}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n"],"names":["StoredCardFields","brand","hasCVC","onFocusField","errors","valid","cvcPolicy","focusedElement","lastFour","expiryMonth","expiryYear","showContextualElement","i18n","useCoreContext","ariaLabel","get","replace","isAmex","cvcContextualText","h","div","className","aria-label","Field","label","classNameModifiers","name","disabled","InputText","value","dir","CVC","error","fieldType","getError","ENCRYPTED_SECURITY_CODE","focused","filled","encryptedSecurityCode","isValid","frontCVC","contextualText"],"mappings":"k3BAQe,SAASA,GAAiBC,MACrCA,EAAKC,OACLA,EAAMC,aACNA,EAAYC,OACZA,EAAMC,MACNA,EAAKC,UACLA,EAASC,eACTA,EAAcC,SACdA,EAAQC,YACRA,EAAWC,WACXA,EAAUC,sBACVA,IAEA,MAAMC,KAAEA,GAASC,IAGXC,EAAY,GAFYF,EAAKG,IAAI,+CAA+CC,QAAQ,KAAMR,KAChEC,GAAeC,EAAa,IAAIE,EAAKG,IAAI,kCAAkCN,KAAeC,IAAe,KAEvIO,EAAmB,SAAVhB,EACTiB,EAAoBD,EACpBL,EAAKG,IAAI,kDACTH,EAAKG,IAAI,kDAMf,OACII,EAACC,MAAAA,CAAIC,UAAU,kEAAkEC,aAAYR,GACzFK,EAACC,MAAAA,CAAIC,UAAU,+DACVZ,GAAeC,GACZS,EAACI,EAAAA,CACGC,MAAOZ,EAAKG,IAAI,+BAChBM,UAAU,4BACVI,mBAAoB,CAAC,cACrBC,KAAM,kBACNC,UAAAA,GAEAR,EAACS,EAAAA,CACGF,KAAM,kBACNL,UAAW,wGACXQ,MAAO,GAAGpB,OAAiBC,IAC3BiB,UAAU,EACVG,IAAK,SAKhB5B,GACGiB,EAACY,EAAAA,wUAAAA,CAAAA,CACGzB,UAAWA,EACX0B,MA5BH,EAAC5B,EAAQ6B,IACf7B,EAAO6B,GAAarB,EAAKG,IAAIX,EAAO6B,IAAc,KA2BlCC,CAAS9B,EAAQ+B,GACxBC,QAA4B,0BAAnB7B,EACT8B,SAAUhC,EAAMiC,yBAA2BlC,EAAOkC,sBAClDC,UAAWlC,EAAMiC,sBACjBd,MAAOZ,EAAKG,IAAI,iCAChBZ,aAAcA,GACTM,GAAeC,GAAc,CAAEW,UAAW,8BAA4B,CAC3EI,mBAAoB,CAAC,cACrBe,SAAUvB,EACVN,sBAAuBA,EACvB8B,eAAgBvB,MAMxC"}