{"version":3,"file":"Ach.js","sources":["../../../../src/components/Ach/Ach.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport RedirectButton from '../internal/RedirectButton';\nimport { TxVariants } from '../tx-variants';\nimport AchComponent from './components/AchComponent';\nimport defaultProps from './defaultProps';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\n\nimport type { AchConfiguration } from './types';\n\nexport class AchElement extends UIElement<AchConfiguration> {\n    public static type = TxVariants.ach;\n\n    protected static defaultProps = defaultProps;\n\n    public override formatData() {\n        const recurringPayment = !!this.props.storedPaymentMethodId;\n\n        if (recurringPayment) {\n            return {\n                paymentMethod: {\n                    type: AchElement.type,\n                    storedPaymentMethodId: this.props.storedPaymentMethodId\n                }\n            };\n        }\n\n        return {\n            paymentMethod: {\n                type: AchElement.type,\n                ownerName: this.state.data.ownerName,\n                accountHolderType: this.state.data.selectedAccountType?.split('.')[0],\n                bankAccountType: this.state.data.selectedAccountType?.split('.')[1],\n                bankLocationId: this.state.data.routingNumber,\n                bankAccountNumber: this.state.data.accountNumber\n            },\n            ...(this.state.storePaymentMethod && { storePaymentMethod: this.state.storePaymentMethod })\n        };\n    }\n\n    public override get isValid(): boolean {\n        if (this.props.storedPaymentMethodId) {\n            return true;\n        }\n\n        return !!this.state.isValid;\n    }\n\n    public override get displayName(): string {\n        if (this.props.storedPaymentMethodId && this.props.bankAccountNumber) {\n            return `•••• ${this.props.bankAccountNumber.slice(-4)}`;\n        }\n        return this.props.name;\n    }\n\n    public override get additionalInfo(): string {\n        return this.props.storedPaymentMethodId ? this.props.i18n.get('ach.savedBankAccount') : '';\n    }\n\n    render() {\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                {this.props.storedPaymentMethodId ? (\n                    <RedirectButton\n                        showPayButton={this.props.showPayButton}\n                        name={this.displayName}\n                        amount={this.props.amount}\n                        payButton={this.payButton}\n                        onSubmit={this.submit}\n                        ref={ref => {\n                            this.componentRef = ref;\n                        }}\n                    />\n                ) : (\n                    <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                        <AchComponent\n                            onChange={this.setState}\n                            payButton={this.payButton}\n                            showPayButton={this.props.showPayButton}\n                            hasHolderName={this.props.hasHolderName}\n                            placeholders={this.props.placeholders}\n                            setComponentRef={this.setComponentRef}\n                            enableStoreDetails={this.props.enableStoreDetails}\n                        />\n                    </SRPanelProvider>\n                )}\n            </CoreProvider>\n        );\n    }\n}\n\nexport default AchElement;\n"],"names":["AchElement","UIElement","formatData","_this_state_data_selectedAccountType","_this_state_data_selectedAccountType1","this","props","storedPaymentMethodId","paymentMethod","type","_object_spread","ownerName","state","data","accountHolderType","selectedAccountType","split","bankAccountType","bankLocationId","routingNumber","bankAccountNumber","accountNumber","storePaymentMethod","isValid","displayName","slice","name","additionalInfo","i18n","get","render","h","CoreProvider","loadingContext","resources","RedirectButton","showPayButton","amount","payButton","onSubmit","submit","ref","componentRef","SRPanelProvider","srPanel","modules","AchComponent","onChange","setState","hasHolderName","placeholders","setComponentRef","enableStoreDetails","_define_property","TxVariants","ach","defaultProps"],"mappings":"0iBAWO,MAAMA,UAAmBC,EAKZC,UAAAA,OAgBeC,EACFC,EAdzB,QAF2BC,KAAKC,MAAMC,sBAG3B,CACHC,cAAe,CACXC,KAAMT,EAAWS,KACjBF,sBAAuBF,KAAKC,MAAMC,8VAKvCG,CAAA,CACHF,cAAe,CACXC,KAAMT,EAAWS,KACjBE,UAAWN,KAAKO,MAAMC,KAAKF,UAC3BG,kBAAsD,QAAnCX,EAAAE,KAAKO,MAAMC,KAAKE,+BAAhBZ,SAAAA,EAAqCa,MAAM,KAAK,GACnEC,gBAAoD,QAAnCb,EAAAC,KAAKO,MAAMC,KAAKE,+BAAhBX,SAAAA,EAAqCY,MAAM,KAAK,GACjEE,eAAgBb,KAAKO,MAAMC,KAAKM,cAChCC,kBAAmBf,KAAKO,MAAMC,KAAKQ,gBAEnChB,KAAKO,MAAMU,oBAAsB,CAAEA,mBAAoBjB,KAAKO,MAAMU,oBAE9E,CAEA,WAAoBC,GAChB,QAAIlB,KAAKC,MAAMC,yBAINF,KAAKO,MAAMW,OACxB,CAEA,eAAoBC,GAChB,OAAInB,KAAKC,MAAMC,uBAAyBF,KAAKC,MAAMc,kBACxC,QAAQf,KAAKC,MAAMc,kBAAkBK,OAAW,KAEpDpB,KAAKC,MAAMoB,IACtB,CAEA,kBAAoBC,GAChB,OAAOtB,KAAKC,MAAMC,sBAAwBF,KAAKC,MAAMsB,KAAKC,IAAI,wBAA0B,EAC5F,CAEAC,MAAAA,GACI,OACIC,EAACC,EAAAA,CAAaJ,KAAMvB,KAAKC,MAAMsB,KAAMK,eAAgB5B,KAAKC,MAAM2B,eAAgBC,UAAW7B,KAAK6B,WAC3F7B,KAAKC,MAAMC,sBACRwB,EAACI,EAAAA,CACGC,cAAe/B,KAAKC,MAAM8B,cAC1BV,KAAMrB,KAAKmB,YACXa,OAAQhC,KAAKC,MAAM+B,OACnBC,UAAWjC,KAAKiC,UAChBC,SAAUlC,KAAKmC,OACfC,IAAKA,IACDpC,KAAKqC,aAAeD,CAAAA,IAI5BV,EAACY,EAAAA,CAAgBC,QAASvC,KAAKC,MAAMuC,QAAQD,SACzCb,EAACe,EAAAA,CACGC,SAAU1C,KAAK2C,SACfV,UAAWjC,KAAKiC,UAChBF,cAAe/B,KAAKC,MAAM8B,cAC1Ba,cAAe5C,KAAKC,MAAM2C,cAC1BC,aAAc7C,KAAKC,MAAM4C,aACzBC,gBAAiB9C,KAAK8C,gBACtBC,mBAAoB/C,KAAKC,MAAM8C,sBAMvD,EA7EAC,EADSrD,EACKS,OAAO6C,EAAWC,KAEhCF,EAHSrD,EAGQwD,eAAeA"}