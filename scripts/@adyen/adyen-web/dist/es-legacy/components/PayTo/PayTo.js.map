{"version":3,"file":"PayTo.js","sources":["../../../../src/components/PayTo/PayTo.tsx"],"sourcesContent":["import { h } from 'preact';\nimport UIElement from '../internal/UIElement/UIElement';\nimport { CoreProvider } from '../../core/Context/CoreProvider';\nimport Await from '../../components/internal/Await';\nimport SRPanelProvider from '../../core/Errors/SRPanelProvider';\nimport { TxVariants } from '../tx-variants';\nimport { PayToIdentifierEnum } from './components/IdentifierSelector';\nimport PayToComponent from './components/PayToComponent';\nimport { PayToInstructions } from './components/PayToInstructions';\nimport MandateSummary from './components/MandateSummary';\nimport { PayToConfiguration, PayToData } from './types';\nimport PayButton, { payAmountLabel } from '../internal/PayButton';\n\n/*\nAwait Config (previously in its own file)\n */\nconst COUNTDOWN_MINUTES = 15; // min\nconst THROTTLE_TIME = 60000; // ms\nconst THROTTLE_INTERVAL = 10000; // ms\n\nconst config = {\n    COUNTDOWN_MINUTES,\n    THROTTLE_TIME,\n    THROTTLE_INTERVAL,\n    showCountdownTimer: false\n};\n\nconst getAccountIdentifier = (state: PayToData) => {\n    // if it's BSB Input type merge bankAccount with BSB\n    if (state.selectedInput === 'bsb-option') {\n        return `${state.bsb}-${state.bankAccountNumber}`;\n    } else if (state.selectedInput === 'payid-option') {\n        // otherwise use the option in the dropdown\n        switch (state.selectedIdentifier) {\n            case PayToIdentifierEnum.email:\n                return state.email;\n            case PayToIdentifierEnum.abn:\n                return state.abn;\n            case PayToIdentifierEnum.orgid:\n                return state.orgid;\n            case PayToIdentifierEnum.phone:\n                // merge the phone prefix and number - see comment in ticket\n                return `${state.phonePrefix}-${state.phoneNumber}`;\n        }\n    }\n};\n/**\n *\n */\nexport class PayToElement extends UIElement<PayToConfiguration> {\n    public static readonly type = TxVariants.payto;\n\n    protected static defaultProps = {\n        placeholders: {}\n    };\n\n    formatProps(props) {\n        return {\n            ...props,\n            data: {\n                ...props.data,\n                phonePrefix: '+61' // hardcode +61\n            }\n        };\n    }\n\n    /**\n     * Formats the component data output\n     */\n    formatData() {\n        if (this.props.storedPaymentMethodId) {\n            return {\n                paymentMethod: {\n                    type: PayToElement.type,\n                    storedPaymentMethodId: this.props.storedPaymentMethodId\n                }\n            };\n        }\n\n        return {\n            paymentMethod: {\n                type: PayToElement.type,\n                shopperAccountIdentifier: getAccountIdentifier(this.state.data)\n            },\n            shopperName: {\n                firstName: this.state.data.firstName,\n                lastName: this.state.data.lastName\n            }\n        };\n    }\n\n    get isValid(): boolean {\n        if (this.props.storedPaymentMethodId) {\n            return true;\n        }\n\n        return !!this.state.isValid;\n    }\n\n    get displayName() {\n        if (this.props.storedPaymentMethodId && this.props.label) {\n            return this.props.label;\n        }\n        return this.props.name;\n    }\n\n    get additionalInfo() {\n        return this.props.storedPaymentMethodId ? this.props.name : '';\n    }\n\n    render() {\n        // Stored\n        if (this.props.storedPaymentMethodId) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    {this.props.showPayButton && (\n                        <PayButton\n                            {...this.props}\n                            classNameModifiers={['standalone']}\n                            amount={this.props.amount}\n                            label={payAmountLabel(this.props.i18n, this.props.amount)}\n                            onClick={this.submit}\n                        />\n                    )}\n                </CoreProvider>\n            );\n        }\n        // Await\n        if (this.props.paymentData) {\n            return (\n                <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                    <SRPanelProvider srPanel={this.props.modules.srPanel}>\n                        <Await\n                            ref={ref => {\n                                this.componentRef = ref;\n                            }}\n                            amount={this.props.amount}\n                            showAmount={true}\n                            instructions={PayToInstructions}\n                            clientKey={this.props.clientKey}\n                            paymentData={this.props.paymentData}\n                            onError={this.props.onError}\n                            onComplete={this.onComplete}\n                            brandLogo={this.icon}\n                            type={this.constructor['type']}\n                            messageText={this.props.i18n.get('payto.confirmPayment')}\n                            awaitText={this.props.i18n.get('payto.await.waitForConfirmation')}\n                            showCountdownTimer={config.showCountdownTimer}\n                            throttleTime={config.THROTTLE_TIME}\n                            throttleInterval={config.THROTTLE_INTERVAL}\n                            onActionHandled={this.onActionHandled}\n                            endSlot={() =>\n                                !!this.props.mandate && (\n                                    <MandateSummary mandate={this.props.mandate} payee={this.props.payee} currencyCode={this.props.amount.currency} />\n                                )\n                            }\n                        />\n                    </SRPanelProvider>\n                </CoreProvider>\n            );\n        }\n        // Input\n        return (\n            <CoreProvider i18n={this.props.i18n} loadingContext={this.props.loadingContext} resources={this.resources}>\n                <PayToComponent\n                    data={this.props.data}\n                    placeholders={this.props.placeholders}\n                    setComponentRef={this.setComponentRef}\n                    onChange={this.setState}\n                    payButton={this.payButton}\n                    showPayButton={this.props.showPayButton}\n                />\n            </CoreProvider>\n        );\n    }\n}\n\nexport default PayToElement;\n"],"names":["config","getAccountIdentifier","state","selectedInput","bsb","bankAccountNumber","selectedIdentifier","PayToIdentifierEnum","email","abn","orgid","phone","phonePrefix","phoneNumber","PayToElement","UIElement","formatProps","props","_object_spread_props","data","_object_spread","formatData","this","storedPaymentMethodId","paymentMethod","type","shopperAccountIdentifier","shopperName","firstName","lastName","isValid","displayName","label","name","additionalInfo","render","h","CoreProvider","i18n","loadingContext","resources","showPayButton","PayButton","classNameModifiers","amount","payAmountLabel","onClick","submit","paymentData","SRPanelProvider","srPanel","modules","Await","ref","componentRef","showAmount","instructions","PayToInstructions","clientKey","onError","onComplete","brandLogo","icon","constructor","messageText","get","awaitText","showCountdownTimer","throttleTime","throttleInterval","onActionHandled","endSlot","mandate","MandateSummary","payee","currencyCode","currency","PayToComponent","placeholders","setComponentRef","onChange","setState","payButton","_define_property","TxVariants","payto","defaultProps"],"mappings":"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"}