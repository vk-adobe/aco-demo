"use strict";
/*
 * The version of the OpenAPI document: v30
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DisputesAPI = void 0;
const getJsonResponse_1 = __importDefault(require("../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../service"));
const resource_1 = __importDefault(require("./resource"));
const models_1 = require("../typings/disputes/models");
class DisputesAPI extends service_1.default {
    constructor(client) {
        super(client);
        this.API_BASEPATH = "https://ca-test.adyen.com/ca/services/DisputeService/v30";
        this.baseUrl = this.createBaseUrl(this.API_BASEPATH);
    }
    /**
    * @summary Accept a dispute
    * @param acceptDisputeRequest {@link AcceptDisputeRequest }
    * @param requestOptions {@link IRequest.Options }
    * @return {@link AcceptDisputeResponse }
    */
    async acceptDispute(acceptDisputeRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/acceptDispute`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(acceptDisputeRequest, "AcceptDisputeRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "AcceptDisputeResponse");
    }
    /**
    * @summary Defend a dispute
    * @param defendDisputeRequest {@link DefendDisputeRequest }
    * @param requestOptions {@link IRequest.Options }
    * @return {@link DefendDisputeResponse }
    */
    async defendDispute(defendDisputeRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/defendDispute`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(defendDisputeRequest, "DefendDisputeRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "DefendDisputeResponse");
    }
    /**
    * @summary Delete a defense document
    * @param deleteDefenseDocumentRequest {@link DeleteDefenseDocumentRequest }
    * @param requestOptions {@link IRequest.Options }
    * @return {@link DeleteDefenseDocumentResponse }
    */
    async deleteDisputeDefenseDocument(deleteDefenseDocumentRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/deleteDisputeDefenseDocument`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(deleteDefenseDocumentRequest, "DeleteDefenseDocumentRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "DeleteDefenseDocumentResponse");
    }
    /**
    * @summary Get applicable defense reasons
    * @param defenseReasonsRequest {@link DefenseReasonsRequest }
    * @param requestOptions {@link IRequest.Options }
    * @return {@link DefenseReasonsResponse }
    */
    async retrieveApplicableDefenseReasons(defenseReasonsRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/retrieveApplicableDefenseReasons`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(defenseReasonsRequest, "DefenseReasonsRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "DefenseReasonsResponse");
    }
    /**
    * @summary Supply a defense document
    * @param supplyDefenseDocumentRequest {@link SupplyDefenseDocumentRequest }
    * @param requestOptions {@link IRequest.Options }
    * @return {@link SupplyDefenseDocumentResponse }
    */
    async supplyDefenseDocument(supplyDefenseDocumentRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/supplyDefenseDocument`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(supplyDefenseDocumentRequest, "SupplyDefenseDocumentRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "SupplyDefenseDocumentResponse");
    }
}
exports.DisputesAPI = DisputesAPI;
exports.default = DisputesAPI;
//# sourceMappingURL=disputesApi.js.map