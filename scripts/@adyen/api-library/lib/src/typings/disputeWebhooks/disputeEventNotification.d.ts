import { Amount } from './amount';
export declare class DisputeEventNotification {
    /**
    * The unique Acquirer Reference Number (arn) generated by the card scheme for each capture. You can use the arn to trace the transaction through its lifecycle.
    */
    'arn'?: string;
    /**
    * The unique identifier of the balance platform.
    */
    'balancePlatform'?: string;
    /**
    * The date and time when the event was triggered, in ISO 8601 extended format. For example, **2020-12-18T10:15:30+01:00**.
    */
    'creationDate'?: Date;
    /**
    * Contains information about the dispute.
    */
    'description'?: string;
    'disputedAmount'?: Amount | null;
    /**
    * The ID of the resource.
    */
    'id'?: string;
    /**
    * The current status of the dispute.
    */
    'status'?: string;
    /**
    * Additional information about the status of the dispute, when available.
    */
    'statusDetail'?: string;
    /**
    * The unique reference of the transaction for which the dispute is requested.
    */
    'transactionId'?: string;
    /**
    * The type of dispute raised for the transaction.
    */
    'type'?: DisputeEventNotification.TypeEnum;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace DisputeEventNotification {
    enum TypeEnum {
        Fraud = "fraud",
        NotDelivered = "notDelivered",
        Duplicate = "duplicate"
    }
}
