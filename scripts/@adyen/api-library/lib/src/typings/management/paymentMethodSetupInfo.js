"use strict";
/*
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentMethodSetupInfo = void 0;
class PaymentMethodSetupInfo {
    static getAttributeTypeMap() {
        return PaymentMethodSetupInfo.attributeTypeMap;
    }
}
exports.PaymentMethodSetupInfo = PaymentMethodSetupInfo;
PaymentMethodSetupInfo.discriminator = undefined;
PaymentMethodSetupInfo.attributeTypeMap = [
    {
        "name": "accel",
        "baseName": "accel",
        "type": "AccelInfo | null"
    },
    {
        "name": "affirm",
        "baseName": "affirm",
        "type": "AffirmInfo | null"
    },
    {
        "name": "afterpayTouch",
        "baseName": "afterpayTouch",
        "type": "AfterpayTouchInfo | null"
    },
    {
        "name": "amex",
        "baseName": "amex",
        "type": "AmexInfo | null"
    },
    {
        "name": "applePay",
        "baseName": "applePay",
        "type": "ApplePayInfo | null"
    },
    {
        "name": "bcmc",
        "baseName": "bcmc",
        "type": "BcmcInfo | null"
    },
    {
        "name": "businessLineId",
        "baseName": "businessLineId",
        "type": "string"
    },
    {
        "name": "cartesBancaires",
        "baseName": "cartesBancaires",
        "type": "CartesBancairesInfo | null"
    },
    {
        "name": "clearpay",
        "baseName": "clearpay",
        "type": "ClearpayInfo | null"
    },
    {
        "name": "countries",
        "baseName": "countries",
        "type": "Array<string>"
    },
    {
        "name": "cup",
        "baseName": "cup",
        "type": "GenericPmWithTdiInfo | null"
    },
    {
        "name": "currencies",
        "baseName": "currencies",
        "type": "Array<string>"
    },
    {
        "name": "customRoutingFlags",
        "baseName": "customRoutingFlags",
        "type": "Array<string>"
    },
    {
        "name": "diners",
        "baseName": "diners",
        "type": "DinersInfo | null"
    },
    {
        "name": "discover",
        "baseName": "discover",
        "type": "GenericPmWithTdiInfo | null"
    },
    {
        "name": "eft_directdebit_CA",
        "baseName": "eft_directdebit_CA",
        "type": "GenericPmWithTdiInfo | null"
    },
    {
        "name": "eftpos_australia",
        "baseName": "eftpos_australia",
        "type": "GenericPmWithTdiInfo | null"
    },
    {
        "name": "girocard",
        "baseName": "girocard",
        "type": "GenericPmWithTdiInfo | null"
    },
    {
        "name": "googlePay",
        "baseName": "googlePay",
        "type": "GooglePayInfo | null"
    },
    {
        "name": "ideal",
        "baseName": "ideal",
        "type": "GenericPmWithTdiInfo | null"
    },
    {
        "name": "interac_card",
        "baseName": "interac_card",
        "type": "GenericPmWithTdiInfo | null"
    },
    {
        "name": "jcb",
        "baseName": "jcb",
        "type": "JCBInfo | null"
    },
    {
        "name": "klarna",
        "baseName": "klarna",
        "type": "KlarnaInfo | null"
    },
    {
        "name": "maestro",
        "baseName": "maestro",
        "type": "GenericPmWithTdiInfo | null"
    },
    {
        "name": "mc",
        "baseName": "mc",
        "type": "GenericPmWithTdiInfo | null"
    },
    {
        "name": "mealVoucher_FR",
        "baseName": "mealVoucher_FR",
        "type": "MealVoucherFRInfo | null"
    },
    {
        "name": "nyce",
        "baseName": "nyce",
        "type": "NyceInfo | null"
    },
    {
        "name": "paybybank_plaid",
        "baseName": "paybybank_plaid",
        "type": "PayByBankPlaidInfo | null"
    },
    {
        "name": "payme",
        "baseName": "payme",
        "type": "PayMeInfo | null"
    },
    {
        "name": "paypal",
        "baseName": "paypal",
        "type": "PayPalInfo | null"
    },
    {
        "name": "payto",
        "baseName": "payto",
        "type": "PayToInfo | null"
    },
    {
        "name": "pulse",
        "baseName": "pulse",
        "type": "PulseInfo | null"
    },
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string"
    },
    {
        "name": "shopperInteraction",
        "baseName": "shopperInteraction",
        "type": "PaymentMethodSetupInfo.ShopperInteractionEnum"
    },
    {
        "name": "sodexo",
        "baseName": "sodexo",
        "type": "SodexoInfo | null"
    },
    {
        "name": "sofort",
        "baseName": "sofort",
        "type": "SofortInfo | null"
    },
    {
        "name": "star",
        "baseName": "star",
        "type": "StarInfo | null"
    },
    {
        "name": "storeIds",
        "baseName": "storeIds",
        "type": "Array<string>"
    },
    {
        "name": "swish",
        "baseName": "swish",
        "type": "SwishInfo | null"
    },
    {
        "name": "ticket",
        "baseName": "ticket",
        "type": "TicketInfo | null"
    },
    {
        "name": "twint",
        "baseName": "twint",
        "type": "TwintInfo | null"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "PaymentMethodSetupInfo.TypeEnum"
    },
    {
        "name": "vipps",
        "baseName": "vipps",
        "type": "VippsInfo | null"
    },
    {
        "name": "visa",
        "baseName": "visa",
        "type": "GenericPmWithTdiInfo | null"
    },
    {
        "name": "wechatpay",
        "baseName": "wechatpay",
        "type": "WeChatPayInfo | null"
    },
    {
        "name": "wechatpay_pos",
        "baseName": "wechatpay_pos",
        "type": "WeChatPayPosInfo | null"
    }
];
(function (PaymentMethodSetupInfo) {
    let ShopperInteractionEnum;
    (function (ShopperInteractionEnum) {
        ShopperInteractionEnum["ECommerce"] = "eCommerce";
        ShopperInteractionEnum["Pos"] = "pos";
        ShopperInteractionEnum["Moto"] = "moto";
        ShopperInteractionEnum["ContAuth"] = "contAuth";
    })(ShopperInteractionEnum = PaymentMethodSetupInfo.ShopperInteractionEnum || (PaymentMethodSetupInfo.ShopperInteractionEnum = {}));
    let TypeEnum;
    (function (TypeEnum) {
        TypeEnum["Accel"] = "accel";
        TypeEnum["Ach"] = "ach";
        TypeEnum["Affirm"] = "affirm";
        TypeEnum["Afterpaytouch"] = "afterpaytouch";
        TypeEnum["Alelo"] = "alelo";
        TypeEnum["Alipay"] = "alipay";
        TypeEnum["AlipayHk"] = "alipay_hk";
        TypeEnum["AlipayWap"] = "alipay_wap";
        TypeEnum["Amex"] = "amex";
        TypeEnum["Applepay"] = "applepay";
        TypeEnum["BaneseCard"] = "banese_card";
        TypeEnum["BaneseCardCredit"] = "banese_card_credit";
        TypeEnum["BaneseCardDebit"] = "banese_card_debit";
        TypeEnum["BaneseCardPrepaid"] = "banese_card_prepaid";
        TypeEnum["Bcmc"] = "bcmc";
        TypeEnum["Blik"] = "blik";
        TypeEnum["Cartebancaire"] = "cartebancaire";
        TypeEnum["Clearpay"] = "clearpay";
        TypeEnum["Clicktopay"] = "clicktopay";
        TypeEnum["Credtodos"] = "credtodos";
        TypeEnum["CredtodosPrivateCredit"] = "credtodos_private_credit";
        TypeEnum["CredtodosPrivateDebit"] = "credtodos_private_debit";
        TypeEnum["Cup"] = "cup";
        TypeEnum["Diners"] = "diners";
        TypeEnum["DirectdebitGb"] = "directdebit_GB";
        TypeEnum["Discover"] = "discover";
        TypeEnum["EbankingFi"] = "ebanking_FI";
        TypeEnum["EftDirectdebitCa"] = "eft_directdebit_CA";
        TypeEnum["EftposAustralia"] = "eftpos_australia";
        TypeEnum["Elo"] = "elo";
        TypeEnum["Elocredit"] = "elocredit";
        TypeEnum["Elodebit"] = "elodebit";
        TypeEnum["Girocard"] = "girocard";
        TypeEnum["Googlepay"] = "googlepay";
        TypeEnum["Hiper"] = "hiper";
        TypeEnum["Hipercard"] = "hipercard";
        TypeEnum["Ideal"] = "ideal";
        TypeEnum["InteracCard"] = "interac_card";
        TypeEnum["Jcb"] = "jcb";
        TypeEnum["Klarna"] = "klarna";
        TypeEnum["KlarnaAccount"] = "klarna_account";
        TypeEnum["KlarnaPaynow"] = "klarna_paynow";
        TypeEnum["Maestro"] = "maestro";
        TypeEnum["Mbway"] = "mbway";
        TypeEnum["Mc"] = "mc";
        TypeEnum["Mcdebit"] = "mcdebit";
        TypeEnum["MealVoucherFr"] = "mealVoucher_FR";
        TypeEnum["Mobilepay"] = "mobilepay";
        TypeEnum["Multibanco"] = "multibanco";
        TypeEnum["Nyce"] = "nyce";
        TypeEnum["OnlineBankingPl"] = "onlineBanking_PL";
        TypeEnum["Paybybank"] = "paybybank";
        TypeEnum["PaybybankPlaid"] = "paybybank_plaid";
        TypeEnum["Payme"] = "payme";
        TypeEnum["PaymePos"] = "payme_pos";
        TypeEnum["Paynow"] = "paynow";
        TypeEnum["PaynowPos"] = "paynow_pos";
        TypeEnum["Paypal"] = "paypal";
        TypeEnum["Payto"] = "payto";
        TypeEnum["Pulse"] = "pulse";
        TypeEnum["Sodexo"] = "sodexo";
        TypeEnum["Star"] = "star";
        TypeEnum["Swish"] = "swish";
        TypeEnum["Ticket"] = "ticket";
        TypeEnum["TodoGiftcard"] = "todo_giftcard";
        TypeEnum["Trustly"] = "trustly";
        TypeEnum["Twint"] = "twint";
        TypeEnum["TwintPos"] = "twint_pos";
        TypeEnum["UpBrazilCredit"] = "up_brazil_credit";
        TypeEnum["ValeRefeicao"] = "vale_refeicao";
        TypeEnum["ValeRefeicaoPrepaid"] = "vale_refeicao_prepaid";
        TypeEnum["Vipps"] = "vipps";
        TypeEnum["Visa"] = "visa";
        TypeEnum["Visadebit"] = "visadebit";
        TypeEnum["Vpay"] = "vpay";
        TypeEnum["Wechatpay"] = "wechatpay";
        TypeEnum["WechatpayPos"] = "wechatpay_pos";
    })(TypeEnum = PaymentMethodSetupInfo.TypeEnum || (PaymentMethodSetupInfo.TypeEnum = {}));
})(PaymentMethodSetupInfo = exports.PaymentMethodSetupInfo || (exports.PaymentMethodSetupInfo = {}));
//# sourceMappingURL=paymentMethodSetupInfo.js.map