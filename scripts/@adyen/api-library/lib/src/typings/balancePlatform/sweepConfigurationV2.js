"use strict";
/*
 * The version of the OpenAPI document: v2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SweepConfigurationV2 = void 0;
class SweepConfigurationV2 {
    static getAttributeTypeMap() {
        return SweepConfigurationV2.attributeTypeMap;
    }
}
exports.SweepConfigurationV2 = SweepConfigurationV2;
SweepConfigurationV2.discriminator = undefined;
SweepConfigurationV2.attributeTypeMap = [
    {
        "name": "category",
        "baseName": "category",
        "type": "SweepConfigurationV2.CategoryEnum"
    },
    {
        "name": "counterparty",
        "baseName": "counterparty",
        "type": "SweepCounterparty"
    },
    {
        "name": "currency",
        "baseName": "currency",
        "type": "string"
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "priorities",
        "baseName": "priorities",
        "type": "Array<SweepConfigurationV2.PrioritiesEnum>"
    },
    {
        "name": "reason",
        "baseName": "reason",
        "type": "SweepConfigurationV2.ReasonEnum"
    },
    {
        "name": "reasonDetail",
        "baseName": "reasonDetail",
        "type": "string"
    },
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string"
    },
    {
        "name": "referenceForBeneficiary",
        "baseName": "referenceForBeneficiary",
        "type": "string"
    },
    {
        "name": "schedule",
        "baseName": "schedule",
        "type": "SweepSchedule"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "SweepConfigurationV2.StatusEnum"
    },
    {
        "name": "sweepAmount",
        "baseName": "sweepAmount",
        "type": "Amount | null"
    },
    {
        "name": "targetAmount",
        "baseName": "targetAmount",
        "type": "Amount | null"
    },
    {
        "name": "triggerAmount",
        "baseName": "triggerAmount",
        "type": "Amount | null"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "SweepConfigurationV2.TypeEnum"
    }
];
(function (SweepConfigurationV2) {
    let CategoryEnum;
    (function (CategoryEnum) {
        CategoryEnum["Bank"] = "bank";
        CategoryEnum["Internal"] = "internal";
        CategoryEnum["PlatformPayment"] = "platformPayment";
    })(CategoryEnum = SweepConfigurationV2.CategoryEnum || (SweepConfigurationV2.CategoryEnum = {}));
    let PrioritiesEnum;
    (function (PrioritiesEnum) {
        PrioritiesEnum["CrossBorder"] = "crossBorder";
        PrioritiesEnum["Fast"] = "fast";
        PrioritiesEnum["Instant"] = "instant";
        PrioritiesEnum["Internal"] = "internal";
        PrioritiesEnum["Regular"] = "regular";
        PrioritiesEnum["Wire"] = "wire";
    })(PrioritiesEnum = SweepConfigurationV2.PrioritiesEnum || (SweepConfigurationV2.PrioritiesEnum = {}));
    let ReasonEnum;
    (function (ReasonEnum) {
        ReasonEnum["AccountHierarchyNotActive"] = "accountHierarchyNotActive";
        ReasonEnum["AmountLimitExceeded"] = "amountLimitExceeded";
        ReasonEnum["Approved"] = "approved";
        ReasonEnum["BalanceAccountTemporarilyBlockedByTransactionRule"] = "balanceAccountTemporarilyBlockedByTransactionRule";
        ReasonEnum["CounterpartyAccountBlocked"] = "counterpartyAccountBlocked";
        ReasonEnum["CounterpartyAccountClosed"] = "counterpartyAccountClosed";
        ReasonEnum["CounterpartyAccountNotFound"] = "counterpartyAccountNotFound";
        ReasonEnum["CounterpartyAddressRequired"] = "counterpartyAddressRequired";
        ReasonEnum["CounterpartyBankTimedOut"] = "counterpartyBankTimedOut";
        ReasonEnum["CounterpartyBankUnavailable"] = "counterpartyBankUnavailable";
        ReasonEnum["Declined"] = "declined";
        ReasonEnum["DeclinedByTransactionRule"] = "declinedByTransactionRule";
        ReasonEnum["DirectDebitNotSupported"] = "directDebitNotSupported";
        ReasonEnum["Error"] = "error";
        ReasonEnum["NotEnoughBalance"] = "notEnoughBalance";
        ReasonEnum["Pending"] = "pending";
        ReasonEnum["PendingApproval"] = "pendingApproval";
        ReasonEnum["PendingExecution"] = "pendingExecution";
        ReasonEnum["RefusedByCounterpartyBank"] = "refusedByCounterpartyBank";
        ReasonEnum["RefusedByCustomer"] = "refusedByCustomer";
        ReasonEnum["RouteNotFound"] = "routeNotFound";
        ReasonEnum["ScaFailed"] = "scaFailed";
        ReasonEnum["TransferInstrumentDoesNotExist"] = "transferInstrumentDoesNotExist";
        ReasonEnum["Unknown"] = "unknown";
    })(ReasonEnum = SweepConfigurationV2.ReasonEnum || (SweepConfigurationV2.ReasonEnum = {}));
    let StatusEnum;
    (function (StatusEnum) {
        StatusEnum["Active"] = "active";
        StatusEnum["Inactive"] = "inactive";
    })(StatusEnum = SweepConfigurationV2.StatusEnum || (SweepConfigurationV2.StatusEnum = {}));
    let TypeEnum;
    (function (TypeEnum) {
        TypeEnum["Pull"] = "pull";
        TypeEnum["Push"] = "push";
    })(TypeEnum = SweepConfigurationV2.TypeEnum || (SweepConfigurationV2.TypeEnum = {}));
})(SweepConfigurationV2 = exports.SweepConfigurationV2 || (exports.SweepConfigurationV2 = {}));
//# sourceMappingURL=sweepConfigurationV2.js.map