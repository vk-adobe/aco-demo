"use strict";
/*
 * The version of the OpenAPI document: v4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IssuedCard = void 0;
class IssuedCard {
    static getAttributeTypeMap() {
        return IssuedCard.attributeTypeMap;
    }
}
exports.IssuedCard = IssuedCard;
IssuedCard.discriminator = undefined;
IssuedCard.attributeTypeMap = [
    {
        "name": "authorisationType",
        "baseName": "authorisationType",
        "type": "string"
    },
    {
        "name": "panEntryMode",
        "baseName": "panEntryMode",
        "type": "IssuedCard.PanEntryModeEnum"
    },
    {
        "name": "processingType",
        "baseName": "processingType",
        "type": "IssuedCard.ProcessingTypeEnum"
    },
    {
        "name": "relayedAuthorisationData",
        "baseName": "relayedAuthorisationData",
        "type": "RelayedAuthorisationData | null"
    },
    {
        "name": "schemeTraceId",
        "baseName": "schemeTraceId",
        "type": "string"
    },
    {
        "name": "schemeUniqueTransactionId",
        "baseName": "schemeUniqueTransactionId",
        "type": "string"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "IssuedCard.TypeEnum"
    },
    {
        "name": "validationFacts",
        "baseName": "validationFacts",
        "type": "Array<TransferNotificationValidationFact>"
    }
];
(function (IssuedCard) {
    let PanEntryModeEnum;
    (function (PanEntryModeEnum) {
        PanEntryModeEnum["Chip"] = "chip";
        PanEntryModeEnum["Cof"] = "cof";
        PanEntryModeEnum["Contactless"] = "contactless";
        PanEntryModeEnum["Ecommerce"] = "ecommerce";
        PanEntryModeEnum["Magstripe"] = "magstripe";
        PanEntryModeEnum["Manual"] = "manual";
        PanEntryModeEnum["Token"] = "token";
    })(PanEntryModeEnum = IssuedCard.PanEntryModeEnum || (IssuedCard.PanEntryModeEnum = {}));
    let ProcessingTypeEnum;
    (function (ProcessingTypeEnum) {
        ProcessingTypeEnum["AtmWithdraw"] = "atmWithdraw";
        ProcessingTypeEnum["BalanceInquiry"] = "balanceInquiry";
        ProcessingTypeEnum["Ecommerce"] = "ecommerce";
        ProcessingTypeEnum["Moto"] = "moto";
        ProcessingTypeEnum["Pos"] = "pos";
        ProcessingTypeEnum["PurchaseWithCashback"] = "purchaseWithCashback";
        ProcessingTypeEnum["Recurring"] = "recurring";
        ProcessingTypeEnum["Token"] = "token";
    })(ProcessingTypeEnum = IssuedCard.ProcessingTypeEnum || (IssuedCard.ProcessingTypeEnum = {}));
    let TypeEnum;
    (function (TypeEnum) {
        TypeEnum["IssuedCard"] = "issuedCard";
    })(TypeEnum = IssuedCard.TypeEnum || (IssuedCard.TypeEnum = {}));
})(IssuedCard = exports.IssuedCard || (exports.IssuedCard = {}));
//# sourceMappingURL=issuedCard.js.map