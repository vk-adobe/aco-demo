{"version":3,"file":"api.js","sources":["/@dropins/storefront-cart/src/api/addProductsToCart/addProductsToCart.ts","/@dropins/storefront-cart/src/api/createGuestCart/graphql/CreateCartMutation.ts","/@dropins/storefront-cart/src/api/createGuestCart/createGuestCart.ts","/@dropins/storefront-cart/src/api/publishShoppingCartViewEvent/publishShoppingCartViewEvent.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { fetchGraphQl, createGuestCart } from '@/cart/api';\nimport { state } from '@/cart/lib/state';\nimport { CartModel } from '@/cart/data/models';\nimport { transformCart } from '@/cart/data/transforms';\nimport { events } from '@adobe-commerce/event-bus';\nimport { handleFetchError } from '@/cart/lib/fetch-error';\nimport { getPersistedCartData } from '@/cart/lib/persisted-data';\n\nimport { ADD_PRODUCTS_TO_CART_MUTATION } from './graphql/AddProductsToCartMutation';\nimport { publishCartUpdateEvents, publishOpenCartEvent } from '@/cart/lib/acdl';\n\nexport const addProductsToCart = async (\n  items: {\n    sku: string;\n    parentSku?: string;\n    quantity: number;\n    optionsUIDs?: string[];\n    enteredOptions?: { uid: string; value: string }[];\n  }[]\n): Promise<CartModel | null> => {\n  let isNewCart = false;\n\n  const cartId =\n    state.cartId ||\n    (await createGuestCart().then((id) => {\n      isNewCart = true;\n      return id;\n    }));\n\n  return fetchGraphQl(ADD_PRODUCTS_TO_CART_MUTATION, {\n    variables: {\n      cartId,\n      cartItems: items.map(\n        ({\n          sku,\n          parentSku: parent_sku,\n          quantity,\n          optionsUIDs: selected_options,\n          enteredOptions: entered_options,\n        }) => ({\n          sku,\n          parent_sku,\n          quantity,\n          selected_options,\n          entered_options,\n        })\n      ),\n    },\n  }).then(({ errors, data }) => {\n    // handle errors\n    const _errors = [\n      ...(data?.addProductsToCart?.user_errors ?? []),\n      ...(errors ?? []),\n    ];\n\n    if (_errors.length > 0) return handleFetchError(_errors);\n\n    // transform cart\n    const payload = transformCart(data.addProductsToCart.cart);\n\n    // Get previous cart data before emitting events\n    const previousCart = getPersistedCartData();\n    const previousItems = previousCart?.items || [];\n\n    // emit events\n    events.emit('cart/updated', payload);\n    events.emit('cart/data', payload);\n\n    // emit add to cart event with affected items\n    if (payload) {\n      // Separate new items and updated items\n      const newItems = payload.items.filter((item) => {\n        return !previousItems.some((prev) => prev.sku === item.sku);\n      });\n\n      const updatedItems = payload.items.filter((item) => {\n        const previousItem = previousItems.find(\n          (prev) => prev.sku === item.sku\n        );\n        // Emit update event if quantity has changed\n        return previousItem && item.quantity !== previousItem.quantity;\n      });\n\n      // Emit add event for new items\n      if (newItems.length > 0) {\n        events.emit('cart/product/added', newItems);\n      }\n\n      // Emit update event for existing items\n      if (updatedItems.length > 0) {\n        events.emit('cart/product/updated', updatedItems);\n      }\n    }\n\n    // data collection\n    if (payload) {\n      const updatedItems = payload.items.filter((item) =>\n        items.some(({ sku }) => sku === item.topLevelSku)\n      );\n      if (isNewCart) {\n        // Publish open cart event when the first item is added to the cart\n        publishOpenCartEvent(payload, updatedItems, state.locale ?? 'en-US');\n      } else {\n        // Otherwise publish cart update events\n        publishCartUpdateEvents(payload, updatedItems, state.locale ?? 'en-US');\n      }\n    }\n\n    return payload;\n  });\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const CREATE_GUEST_CART_MUTATION = `\n    mutation CREATE_GUEST_CART_MUTATION {\n        createGuestCart {\n          cart {\n            id\n          }\n        }\n    }\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { config, fetchGraphQl } from '@/cart/api';\nimport { state } from '@/cart/lib/state';\n\nimport { CREATE_GUEST_CART_MUTATION } from './graphql/CreateCartMutation';\n\nexport const createGuestCart = async () => {\n  const { disableGuestCart } = config.getConfig();\n\n  // If guest cart is disabled, throw an error\n  if (disableGuestCart) {\n    throw new Error('Guest cart is disabled');\n  }\n\n  // Return new empty cart id\n  return await fetchGraphQl(CREATE_GUEST_CART_MUTATION).then(({ data }) => {\n    const cartId = data.createGuestCart.cart.id;\n\n    // Set cart id in state\n    state.cartId = cartId;\n\n    return cartId;\n  });\n};\n","import { getPersistedCartData } from \"@/cart/lib/persisted-data\";\nimport { publishShoppingCartViewEvent as publishCartView } from \"@/cart/lib/acdl\";\nimport { state } from \"@/cart/lib/state\";\n\nexport const publishShoppingCartViewEvent = () => { \n  const locale = state.locale ?? 'en-US';\n  const cartData = getPersistedCartData();\n\n  if (!cartData) {\n    return;\n  }\n\n  // Publish the event\n  publishCartView(cartData, locale);\n}\n"],"names":["addProductsToCart","items","isNewCart","cartId","state","createGuestCart","id","fetchGraphQl","ADD_PRODUCTS_TO_CART_MUTATION","sku","parent_sku","quantity","selected_options","entered_options","errors","data","_errors","_a","handleFetchError","payload","transformCart","previousCart","getPersistedCartData","previousItems","events","newItems","item","prev","updatedItems","previousItem","publishOpenCartEvent","publishCartUpdateEvents","CREATE_GUEST_CART_MUTATION","disableGuestCart","config","publishShoppingCartViewEvent","locale","cartData","publishCartView"],"mappings":"65BA4Ba,MAAAA,EAAoB,MAC/BC,GAO8B,CAC9B,IAAIC,EAAY,GAEV,MAAAC,EACJC,EAAM,QACL,MAAMC,IAAkB,KAAMC,IACjBJ,EAAA,GACLI,EACR,EAEH,OAAOC,EAAaC,EAA+B,CACjD,UAAW,CACT,OAAAL,EACA,UAAWF,EAAM,IACf,CAAC,CACC,IAAAQ,EACA,UAAWC,EACX,SAAAC,EACA,YAAaC,EACb,eAAgBC,CAAA,KACX,CACL,IAAAJ,EACA,WAAAC,EACA,SAAAC,EACA,iBAAAC,EACA,gBAAAC,CACF,EAAA,CACF,CAEH,CAAA,EAAE,KAAK,CAAC,CAAE,OAAAC,EAAQ,KAAAC,KAAW,OAE5B,MAAMC,EAAU,CACd,KAAIC,EAAAF,GAAA,YAAAA,EAAM,oBAAN,YAAAE,EAAyB,cAAe,CAAC,EAC7C,GAAIH,GAAU,CAAA,CAChB,EAEA,GAAIE,EAAQ,OAAS,EAAG,OAAOE,EAAiBF,CAAO,EAGvD,MAAMG,EAAUC,EAAcL,EAAK,kBAAkB,IAAI,EAGnDM,EAAeC,EAAqB,EACpCC,GAAgBF,GAAA,YAAAA,EAAc,QAAS,CAAC,EAO9C,GAJOG,EAAA,KAAK,eAAgBL,CAAO,EAC5BK,EAAA,KAAK,YAAaL,CAAO,EAG5BA,EAAS,CAEX,MAAMM,EAAWN,EAAQ,MAAM,OAAQO,GAC9B,CAACH,EAAc,KAAMI,GAASA,EAAK,MAAQD,EAAK,GAAG,CAC3D,EAEKE,EAAeT,EAAQ,MAAM,OAAQO,GAAS,CAClD,MAAMG,EAAeN,EAAc,KAChCI,GAASA,EAAK,MAAQD,EAAK,GAC9B,EAEO,OAAAG,GAAgBH,EAAK,WAAaG,EAAa,QAAA,CACvD,EAGGJ,EAAS,OAAS,GACbD,EAAA,KAAK,qBAAsBC,CAAQ,EAIxCG,EAAa,OAAS,GACjBJ,EAAA,KAAK,uBAAwBI,CAAY,CAClD,CAIF,GAAIT,EAAS,CACL,MAAAS,EAAeT,EAAQ,MAAM,OAAQO,GACzCzB,EAAM,KAAK,CAAC,CAAE,IAAAQ,KAAUA,IAAQiB,EAAK,WAAW,CAClD,EACIxB,EAEF4B,EAAqBX,EAASS,EAAcxB,EAAM,QAAU,OAAO,EAGnE2B,EAAwBZ,EAASS,EAAcxB,EAAM,QAAU,OAAO,CACxE,CAGK,OAAAe,CAAA,CACR,CACH,EC9Gaa,EAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECK7B3B,EAAkB,SAAY,CACzC,KAAM,CAAE,iBAAA4B,CAAA,EAAqBC,EAAO,UAAU,EAG9C,GAAID,EACI,MAAA,IAAI,MAAM,wBAAwB,EAInC,OAAA,MAAM1B,EAAayB,CAA0B,EAAE,KAAK,CAAC,CAAE,KAAAjB,KAAW,CACjE,MAAAZ,EAASY,EAAK,gBAAgB,KAAK,GAGzC,OAAAX,EAAM,OAASD,EAERA,CAAA,CACR,CACH,ECnCagC,EAA+B,IAAM,CAC1C,MAAAC,EAAShC,EAAM,QAAU,QACzBiC,EAAWf,EAAqB,EAEjCe,GAKLC,EAAgBD,EAAUD,CAAM,CAClC"}