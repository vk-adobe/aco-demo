{"version":3,"file":"EstimateShipping.js","sources":["/@dropins/storefront-cart/src/components/EstimateShipping/EstimateShipping.tsx","/@dropins/storefront-cart/src/hooks/useEstimatedShipping.ts","/@dropins/storefront-cart/src/containers/EstimateShipping/EstimateShipping.tsx"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { Text, useText } from '@adobe-commerce/elsie/i18n';\nimport { VComponent, classes, getFormValues } from '@adobe-commerce/elsie/lib';\nimport { FunctionComponent, VNode } from 'preact';\nimport { HTMLAttributes, useRef, useState } from 'preact/compat';\n\nimport '@/cart/components/EstimateShipping/EstimateShipping.css';\n\nexport interface EstimateShippingProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'loading'> {\n  countryField?: VNode<HTMLAttributes<HTMLInputElement>>;\n  destinationText?: string;\n  estimateButton?: VNode<HTMLAttributes<HTMLButtonElement>>;\n  estimated?: boolean;\n  loading: boolean;\n  onEstimate?: (formData: any) => void;\n  price: VNode<HTMLAttributes<HTMLSpanElement>>;\n  priceExcludingTax?: VNode<HTMLAttributes<HTMLSpanElement>>;\n  priceIncludingTax?: VNode<HTMLAttributes<HTMLSpanElement>>;\n  stateField?: VNode<HTMLAttributes<HTMLInputElement>>;\n  taxExcluded?: boolean;\n  taxIncluded?: boolean;\n  zipField?: VNode<HTMLAttributes<HTMLInputElement>>;\n}\n\nexport const EstimateShipping: FunctionComponent<EstimateShippingProps> = ({\n  countryField,\n  destinationText,\n  estimateButton,\n  estimated,\n  loading,\n  onEstimate,\n  price,\n  priceExcludingTax,\n  priceIncludingTax,\n  stateField,\n  taxExcluded,\n  taxIncluded,\n  zipField,\n}) => {\n  const estimateFormRef = useRef<HTMLFormElement>(null);\n  const [showEstimateForm, setShowEstimateForm] = useState(true);\n  const [estimateField, setEstimateField] = useState<'zip' | 'state'>('zip');\n\n  const dictionary = useText({\n    editZipAction: 'Cart.EstimateShipping.editZipAction',\n    destinationLinkAriaLabel: 'Cart.EstimateShipping.destinationLinkAriaLabel',\n    shippingLabel: 'Cart.EstimateShipping.label',\n    zipPlaceholder: 'Cart.EstimateShipping.zipPlaceholder',\n  });\n\n  const onDestinationLinkClick = (e: Event) => {\n    e.preventDefault();\n    setShowEstimateForm((show) => !show);\n  };\n\n  const onAlternateFieldClick = (e: Event) => {\n    e.preventDefault();\n    setShowEstimateForm(true);\n    setEstimateField((field) => (field === 'zip' ? 'state' : 'zip'));\n  };\n\n  const onSubmitEstimate = (e: Event) => {\n    e.preventDefault();\n    setShowEstimateForm(false);\n\n    const formData = getFormValues(estimateFormRef.current!);\n\n    onEstimate?.(formData);\n  };\n\n  const destinationAriaLabel = dictionary.destinationLinkAriaLabel.replace('{destination}', destinationText);\n\n  return (  \n    <div\n      data-testid=\"estimate-shipping\"\n      className={classes([\n        'cart-estimate-shipping',\n        ['cart-estimate-shipping--loading', loading],\n      ])}\n    >\n      <span className={'cart-estimate-shipping__label'}>\n        {estimated ? (\n          destinationText ? (\n            <>\n              <Text id=\"Cart.EstimateShipping.estimatedDestination\" />\n              &nbsp;\n              <a\n                className={'cart-estimate-shippingLink'}\n                role=\"button\"\n                href=\"\"\n                onClick={onDestinationLinkClick}\n                onKeyDown={(event) => {\n                  if (event.key === 'Enter' || event.key === ' ') {\n                    onDestinationLinkClick(event);\n                  }\n                }}\n                tabIndex={0}\n                aria-label={destinationAriaLabel}\n                data-testid=\"shipping-destination-link\"\n              >\n                {destinationText}\n              </a>\n            </>\n          ) : (\n            <Text id=\"Cart.EstimateShipping.estimated\" />\n          )\n        ) : (\n          <Text id=\"Cart.EstimateShipping.label\" />\n        )}\n      </span>\n\n      <VComponent node={price} className={'cart-estimate-shipping__price'} />\n\n      {/* Edit estimate form */}\n      {estimated && (\n        <>\n          <div className={classes(['cart-estimate-shipping__caption'])}>\n            <a\n              href=\"#\"\n              className={'cart-estimate-shipping__link'}\n              onClick={onAlternateFieldClick}\n              data-testid=\"shipping-alternate-field-link\"\n            >\n              {estimateField === 'zip' ? (\n                <Text id=\"Cart.EstimateShipping.alternateField.state\" />\n              ) : (\n                <Text id=\"Cart.EstimateShipping.alternateField.zip\" />\n              )}\n            </a>\n          </div>\n\n          <form\n            className={classes([\n              'cart-estimate-shipping--edit',\n              ['cart-estimate-shipping--hide', !showEstimateForm],\n            ])}\n            ref={estimateFormRef}\n            data-testid=\"shipping-estimate-form\"\n          >\n            {countryField && (\n              <VComponent\n                node={countryField}\n                className={classes(['cart-estimate-shipping--country'])}\n              />\n            )}\n            {estimateField === 'state'\n              ? stateField && (\n                  <VComponent\n                    node={stateField}\n                    className={classes(['cart-estimate-shipping--state'])}\n                  />\n                )\n              : zipField && (\n                  <VComponent\n                    node={zipField}\n                    className={classes(['cart-estimate-shipping--zip'])}\n                  />\n                )}\n            {estimateButton && (\n              <VComponent\n                node={estimateButton}\n                className={classes(['cart-estimate-shipping--action'])}\n                onClick={onSubmitEstimate}\n                type=\"submit\"\n              />\n            )}\n          </form>\n        </>\n      )}\n\n      {taxIncluded && (\n        <div\n          data-testid=\"shipping-tax-included\"\n          className={classes(['cart-estimate-shipping__caption'])}\n        >\n          <span>\n            {priceIncludingTax} <Text id=\"Cart.EstimateShipping.withTaxes\" />\n          </span>\n        </div>\n      )}\n\n      {taxExcluded ? (\n        <div\n          data-testid=\"shipping-tax-included-excluded\"\n          className={classes(['cart-estimate-shipping__caption'])}\n        >\n          <span>\n            {priceExcludingTax} <Text id=\"Cart.EstimateShipping.withoutTaxes\" />\n          </span>\n        </div>\n      ) : undefined}\n    </div>\n  );\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { useEffect, useState } from 'preact/compat';\n\nimport {\n  EstimateAddressInput,\n  getCountries,\n  getEstimateShipping,\n  getRegions,\n} from '@/cart/api';\nimport { PriceProps } from '@adobe-commerce/elsie/components';\n\nexport const useEstimatedShipping = () => {\n  const [priceSummaryLoading, setPriceSummaryLoading] =\n    useState<boolean>(false);\n\n  /* State data related to estimating costs in the Price Summary component */\n  const [countries, setCountries] = useState<{ text: string; value: string }[]>(\n    []\n  );\n  const [selectedCountry, setSelectedCountry] = useState<string>('US');\n  const [selectedRegion, setSelectedRegion] = useState<string>('');\n  const [selectedZip, setSelectedZip] = useState<string>('');\n  const [regions, setRegions] = useState<{ text: string; value: string }[]>([]);\n  const [regionsLoading, setRegionsLoading] = useState<boolean>(false);\n  const [estimatedShippingPrice, setEstimatedShippingPrice] = useState<\n    PriceProps | null | any\n  >();\n  const [estimatedShippingMethod, setEstimatedShippingMethod] = useState<any>();\n  const [estimatedDestinationText, setEstimatedDestinationText] =\n    useState<string>('');\n  const [shippingEstimated, setShippingEstimated] = useState<boolean>(false);\n\n  const resetValues = () => {\n    setSelectedCountry('US');\n    setSelectedRegion('');\n    setSelectedZip('');\n    setEstimatedShippingPrice(null);\n    setEstimatedShippingMethod(null);\n    setEstimatedDestinationText('');\n    setShippingEstimated(false);\n  };\n\n  const handleEstimateShipping = async (formValues: {\n    shippingCountry: string;\n    shippingState?: string;\n    shippingZip?: string;\n  }) => {\n    const {\n      shippingCountry,\n      shippingState = '',\n      shippingZip = '',\n    } = formValues;\n\n    const addressData: EstimateAddressInput = {\n      countryCode: shippingCountry,\n      postcode: shippingZip,\n      region: {\n        region: shippingState,\n      },\n    };\n\n    setPriceSummaryLoading(true);\n\n    return getEstimateShipping(addressData)\n      .then((data) => {\n        if (data) {\n          setEstimatedShippingPrice({\n            amount: data.amount.value,\n            currency: data.amount.currency,\n            priceIncludingtax: {\n              amount: data.price_incl_tax.value,\n              currency: data.price_incl_tax.currency,\n            },\n            priceExcludingtax: {\n              amount: data.price_excl_tax.value,\n              currency: data.price_excl_tax.currency,\n            },\n          });\n          setEstimatedShippingMethod({\n            carrier_code: data.carrier_code,\n            method_code: data.method_code,\n          });\n\n          setSelectedCountry(shippingCountry);\n          setSelectedRegion(shippingState);\n          setSelectedZip(shippingZip);\n\n          setEstimatedDestinationText(\n            shippingState || shippingZip || shippingCountry\n          );\n\n          setShippingEstimated(true);\n        }\n        setSelectedCountry(shippingCountry);\n        setSelectedRegion(shippingState);\n        setSelectedZip(shippingZip);\n\n        setEstimatedDestinationText(\n          shippingState || shippingZip || shippingCountry\n        );\n        return data;\n      })\n      .finally(() => {\n        setPriceSummaryLoading(false);\n      });\n  };\n\n  const handleCountrySelected = (event: Event) => {\n    event.preventDefault();\n\n    setSelectedRegion('');\n    setSelectedZip('');\n\n    const value = (event.target as HTMLSelectElement).value;\n    setSelectedCountry(value);\n  };\n\n  // Get list of countries on initial load\n  useEffect(() => {\n    getCountries().then((countries) => {\n      let defaultCountry = 'US';\n      const transformedCountries = countries.map((country) => {\n        if (country.isDefaultCountry) {\n          defaultCountry = country.id;\n        }\n        return {\n          text: country.label,\n          value: country.id,\n        };\n      });\n      setCountries(transformedCountries);\n      setSelectedCountry(defaultCountry);\n    });\n  }, []);\n\n  // Update regions when country is updated\n  useEffect(() => {\n    setRegionsLoading(true);\n    getRegions(selectedCountry)\n      .then((regions) => {\n        const transformedRegions = regions.map((region) => {\n          return {\n            text: region.name,\n            value: region.code,\n          };\n        });\n        setRegions(transformedRegions);\n      })\n      .finally(() => {\n        setRegionsLoading(false);\n      });\n  }, [selectedCountry, setRegionsLoading]);\n\n  return {\n    loading: priceSummaryLoading,\n    regionsLoading,\n    estimatedDestinationText,\n    countries,\n    selectedCountry,\n    selectedRegion,\n    selectedZip,\n    regions,\n    estimatedShippingPrice,\n    estimatedShippingMethod,\n    shippingEstimated,\n    handleEstimateShipping,\n    handleCountrySelected,\n    resetValues,\n    setPriceSummaryLoading,\n  };\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { EstimateShipping as EstimateShippingComponent } from '@/cart/components';\nimport { useEstimatedShipping } from '@/cart/hooks';\nimport { setEstimatedShippingLocation } from '@/cart/lib/persisted-data';\nimport { state } from '@/cart/lib/state';\nimport { Button, Input, Picker, Price } from '@adobe-commerce/elsie/components';\nimport { useText } from '@adobe-commerce/elsie/i18n';\nimport { Container } from '@adobe-commerce/elsie/lib';\nimport { events } from '@adobe-commerce/event-bus';\nimport {\n  HTMLAttributes,\n  useCallback,\n  useEffect,\n  useState,\n} from 'preact/compat';\n\nexport interface EstimateShippingProps extends HTMLAttributes<HTMLDivElement> {\n  showDefaultEstimatedShippingCost: boolean;\n}\n\nexport const EstimateShipping: Container<EstimateShippingProps> = ({\n  showDefaultEstimatedShippingCost,\n}) => {\n  const [isVirtual, setIsVirtual] = useState(false);\n\n  const {\n    loading,\n    countries,\n    regions,\n    selectedCountry,\n    estimatedDestinationText,\n    estimatedShippingPrice,\n    handleCountrySelected,\n    handleEstimateShipping,\n    regionsLoading,\n    selectedRegion,\n    selectedZip,\n    shippingEstimated,\n    resetValues,\n  } = useEstimatedShipping();\n  const handleEstimations = useCallback(\n    (formValues: any) => {\n      handleEstimateShipping(formValues).then(() => {\n        setEstimatedShippingLocation(formValues);\n      });\n    },\n    [handleEstimateShipping]\n  );\n  useEffect(() => {\n    const cartEvent = events.on(\n      'cart/data',\n      (payload) => {\n        setIsVirtual(payload?.isVirtual || false);\n\n        const shippingAddress = payload?.addresses?.shipping?.[0];\n\n        if (showDefaultEstimatedShippingCost && !shippingAddress) {\n          handleEstimateShipping({\n            shippingCountry: state.config?.defaultCountry ?? '',\n          });\n        }\n        if (!shippingAddress) return;\n        const { countryCode, regionCode, zipCode } = shippingAddress;\n\n        handleEstimations({\n          shippingCountry: countryCode,\n          shippingState: regionCode,\n          shippingZip: zipCode,\n        });\n      },\n      { eager: true }\n    );\n\n    return () => {\n      cartEvent?.off();\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const updatedEvent = events.on('cart/updated', () => {\n      if (!shippingEstimated) return;\n      handleEstimateShipping({\n        shippingCountry: selectedCountry,\n        shippingState: selectedRegion,\n        shippingZip: selectedZip,\n      });\n    });\n\n    return () => {\n      updatedEvent?.off();\n    };\n  }, [shippingEstimated, selectedCountry, selectedRegion, selectedZip, handleEstimateShipping]);\n\n  useEffect(() => {\n    const resetEvent = events.on('cart/reset', () => {\n      resetValues();\n      setEstimatedShippingLocation(null);\n    });\n\n    return () => {\n      resetEvent?.off();\n    };\n  }, [resetValues]);\n\n  useEffect(() => {\n    const mergeEvent = events.on('cart/merged', () => {\n      if (!shippingEstimated) return;\n\n      handleEstimations({\n        shippingCountry: selectedCountry,\n        shippingState: selectedRegion,\n        shippingZip: selectedZip,\n      });\n    });\n\n    return () => {\n      mergeEvent?.off();\n    };\n  }, [\n    shippingEstimated,\n    selectedCountry,\n    selectedRegion,\n    selectedZip,\n    handleEstimations,\n  ]);\n\n  const dictionary = useText({\n    applyButton: 'Cart.PriceSummary.estimatedShippingForm.apply.label',\n    countryField: 'Cart.PriceSummary.estimatedShippingForm.country.placeholder',\n    freeShipping: 'Cart.PriceSummary.freeShipping',\n    stateField: 'Cart.PriceSummary.estimatedShippingForm.state.placeholder',\n    taxToBeDetermined: 'Cart.PriceSummary.taxToBeDetermined',\n    zipField: 'Cart.PriceSummary.estimatedShippingForm.zip.placeholder',\n  });\n\n  if (isVirtual) return null;\n\n  const cartTaxesConfig = state.config?.shoppingCartDisplaySetting;\n  return (\n    <EstimateShippingComponent\n      loading={loading}\n      taxIncluded={cartTaxesConfig?.shipping === 'INCLUDING_TAX'}\n      taxExcluded={cartTaxesConfig?.shipping === 'INCLUDING_EXCLUDING_TAX'}\n      price={\n        estimatedShippingPrice?.amount == 0 ? (\n          <span data-testId=\"free-shipping\">{dictionary.freeShipping}</span>\n        ) : cartTaxesConfig?.shipping === 'INCLUDING_TAX' &&\n          estimatedShippingPrice ? (\n          <Price\n            data-testid=\"shipping\"\n            {...estimatedShippingPrice.priceIncludingtax}\n          />\n        ) : estimatedShippingPrice ? (\n          <Price {...estimatedShippingPrice} />\n        ) : (\n          <span>{dictionary.taxToBeDetermined}</span>\n        )\n      }\n      estimated={true}\n      priceExcludingTax={\n        estimatedShippingPrice?.priceExcludingtax ? (\n          <Price\n            data-testid=\"shipping-excluding-tax\"\n            {...estimatedShippingPrice.priceExcludingtax}\n          />\n        ) : (\n          <span>{dictionary.taxToBeDetermined}</span>\n        )\n      }\n      countryField={\n        <Picker\n          name=\"shippingCountry\"\n          placeholder={dictionary.countryField}\n          value={selectedCountry}\n          variant=\"primary\"\n          options={countries}\n          handleSelect={handleCountrySelected}\n          data-testid=\"estimate-shipping-country-selector\"\n        />\n      }\n      stateField={\n        regions.length > 0 ? (\n          <Picker\n            name=\"shippingState\"\n            placeholder={dictionary.stateField}\n            variant=\"primary\"\n            options={regions}\n            value={selectedRegion}\n            data-testid=\"estimate-shipping-state-selector\"\n            disabled={regionsLoading}\n          />\n        ) : (\n          <Input\n            aria-label={dictionary.stateField}\n            name=\"shippingState\"\n            placeholder={dictionary.stateField}\n            variant=\"primary\"\n            value={selectedRegion}\n            disabled={regionsLoading}\n            data-testid=\"estimate-shipping-state-input\"\n            maxLength={50}\n          />\n        )\n      }\n      zipField={\n        <Input\n          aria-label={dictionary.zipField}\n          name=\"shippingZip\"\n          placeholder={dictionary.zipField}\n          variant=\"primary\"\n          data-testid=\"estimate-shipping-zip-input\"\n          value={selectedZip}\n          maxLength={12}\n        />\n      }\n      estimateButton={\n        <Button\n          variant=\"secondary\"\n          data-testid=\"estimate-shipping-apply-button\"\n          aria-label={dictionary.applyButton}\n        >\n          {dictionary.applyButton}\n        </Button>\n      }\n      destinationText={estimatedDestinationText || dictionary.taxToBeDetermined}\n      onEstimate={handleEstimations}\n    />\n  );\n};\n"],"names":["EstimateShipping","countryField","destinationText","estimateButton","estimated","loading","onEstimate","price","priceExcludingTax","priceIncludingTax","stateField","taxExcluded","taxIncluded","zipField","estimateFormRef","useRef","showEstimateForm","setShowEstimateForm","useState","estimateField","setEstimateField","dictionary","useText","onDestinationLinkClick","e","show","onAlternateFieldClick","field","onSubmitEstimate","formData","getFormValues","destinationAriaLabel","jsxs","classes","jsx","Fragment","Text","event","VComponent","useEstimatedShipping","priceSummaryLoading","setPriceSummaryLoading","countries","setCountries","selectedCountry","setSelectedCountry","selectedRegion","setSelectedRegion","selectedZip","setSelectedZip","regions","setRegions","regionsLoading","setRegionsLoading","estimatedShippingPrice","setEstimatedShippingPrice","estimatedShippingMethod","setEstimatedShippingMethod","estimatedDestinationText","setEstimatedDestinationText","shippingEstimated","setShippingEstimated","resetValues","handleEstimateShipping","formValues","shippingCountry","shippingState","shippingZip","addressData","getEstimateShipping","data","handleCountrySelected","value","useEffect","getCountries","defaultCountry","transformedCountries","country","getRegions","transformedRegions","region","showDefaultEstimatedShippingCost","isVirtual","setIsVirtual","handleEstimations","useCallback","setEstimatedShippingLocation","cartEvent","events","payload","shippingAddress","_b","_a","_c","state","countryCode","regionCode","zipCode","updatedEvent","resetEvent","mergeEvent","cartTaxesConfig","EstimateShippingComponent","Price","Picker","Input","Button"],"mappings":"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"}