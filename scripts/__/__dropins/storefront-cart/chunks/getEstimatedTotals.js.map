{"version":3,"file":"getEstimatedTotals.js","sources":["/@dropins/storefront-cart/src/api/getEstimatedTotals/graphql/GetEstimatedTotalsMutation.ts","/@dropins/storefront-cart/src/api/getEstimatedTotals/getEstimatedTotals.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { CART_ITEMS_PAGINATION_ARGUMENTS } from '@/cart/api/graphql/arguments';\nimport { CART_FRAGMENT } from '@/cart/api/graphql/CartFragment';\n\nexport const GET_ESTIMATED_TOTALS_MUTATION = `\n  mutation GET_ESTIMATED_TOTALS_MUTATION(\n    $cartId: String!\n    $address: EstimateAddressInput!,\n    $shipping_method: ShippingMethodInput,\n    ${CART_ITEMS_PAGINATION_ARGUMENTS}\n  ) {\n    estimateTotals(\n      input: {\n        cart_id: $cartId\n        address: $address\n        shipping_method: $shipping_method\n      }\n    )  {\n      cart {\n       ...CART_FRAGMENT\n      }\n    }\n    }\n\n  ${CART_FRAGMENT}\n  `;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { fetchGraphQl } from '@/cart/api';\nimport { handleFetchError } from '@/cart/lib/fetch-error';\nimport { state } from '@/cart/lib/state';\nimport { CartModel } from '@/cart/data/models';\nimport { transformCart } from '@/cart/data/transforms';\n\nimport { GET_ESTIMATED_TOTALS_MUTATION } from './graphql/GetEstimatedTotalsMutation';\n\nexport interface EstimateAddressShippingInput {\n  countryCode: string;\n  postcode?: string;\n  region?: {\n    region?: string;\n    id?: number;\n  };\n  shipping_method?: {\n    carrier_code?: string;\n    method_code?: string;\n  };\n}\n\nexport const getEstimatedTotals = async (\n  address: EstimateAddressShippingInput\n): Promise<CartModel | null> => {\n  const cartId = state.cartId;\n\n  if (!cartId) throw new Error('No cart ID found');\n  if (!address) throw new Error('No address parameter found');\n\n  const { countryCode, postcode, region } = address;\n  const carrier_code = address.shipping_method?.carrier_code;\n  const method_code = address.shipping_method?.method_code;\n\n  return fetchGraphQl(GET_ESTIMATED_TOTALS_MUTATION, {\n    variables: {\n      cartId,\n      address: {\n        country_code: countryCode || 'US',\n        postcode,\n        region:\n          region?.id !== undefined\n            ? { region_id: region.id }\n            : { region: region?.region ?? '' },\n      },\n      shipping_method: {\n        carrier_code: carrier_code || '',\n        method_code: method_code || '',\n      },\n    },\n  }).then(({ errors, data }) => {\n    if (errors) return handleFetchError(errors);\n\n    const estimatedData: { cart: any } = data.estimateTotals;\n\n    if (estimatedData) {\n      const payload = transformCart(estimatedData.cart);\n\n      return payload;\n    }\n\n    return null;\n  });\n};\n"],"names":["GET_ESTIMATED_TOTALS_MUTATION","CART_ITEMS_PAGINATION_ARGUMENTS","CART_FRAGMENT","getEstimatedTotals","address","cartId","state","countryCode","postcode","region","carrier_code","_a","method_code","_b","fetchGraphQl","errors","data","handleFetchError","estimatedData","transformCart"],"mappings":"iLAoBO,MAAMA,EAAgC;AAAA;AAAA;AAAA;AAAA;AAAA,MAKvCC,CAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAejCC,CAAa;AAAA,ICFJC,EAAqB,MAChCC,GAC8B,SAC9B,MAAMC,EAASC,EAAM,OAErB,GAAI,CAACD,EAAc,MAAA,IAAI,MAAM,kBAAkB,EAC/C,GAAI,CAACD,EAAe,MAAA,IAAI,MAAM,4BAA4B,EAE1D,KAAM,CAAE,YAAAG,EAAa,SAAAC,EAAU,OAAAC,CAAW,EAAAL,EACpCM,GAAeC,EAAAP,EAAQ,kBAAR,YAAAO,EAAyB,aACxCC,GAAcC,EAAAT,EAAQ,kBAAR,YAAAS,EAAyB,YAE7C,OAAOC,EAAad,EAA+B,CACjD,UAAW,CACT,OAAAK,EACA,QAAS,CACP,aAAcE,GAAe,KAC7B,SAAAC,EACA,QACEC,GAAA,YAAAA,EAAQ,MAAO,OACX,CAAE,UAAWA,EAAO,EACpB,EAAA,CAAE,QAAQA,GAAA,YAAAA,EAAQ,SAAU,EAAG,CACvC,EACA,gBAAiB,CACf,aAAcC,GAAgB,GAC9B,YAAaE,GAAe,EAAA,CAC9B,CAEH,CAAA,EAAE,KAAK,CAAC,CAAE,OAAAG,EAAQ,KAAAC,KAAW,CACxB,GAAAD,EAAe,OAAAE,EAAiBF,CAAM,EAE1C,MAAMG,EAA+BF,EAAK,eAE1C,OAAIE,EACcC,EAAcD,EAAc,IAAI,EAK3C,IAAA,CACR,CACH"}