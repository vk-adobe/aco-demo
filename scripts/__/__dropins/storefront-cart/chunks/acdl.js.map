{"version":3,"file":"acdl.js","sources":["/@dropins/storefront-cart/src/data/transforms/acdl-context.ts","/@dropins/storefront-cart/src/lib/acdl.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { ShoppingCartContext, ShoppingCartItem } from '../models/acdl-models';\nimport { CartModel, Item } from '../models/cart-model';\n\ntype TransformShoppingCartParams = {\n  cart: CartModel;\n  locale?: string;\n};\n\nexport function transformShoppingCart(\n  params: TransformShoppingCartParams\n): ShoppingCartContext {\n  const { cart, locale = 'en-US' } = params;\n\n  return {\n    id: cart.id,\n    items: transformItems(cart.items, locale),\n    prices: {\n      subtotalExcludingTax: cart.subtotal.excludingTax,\n      subtotalIncludingTax: cart.subtotal.includingTax,\n    },\n    totalQuantity: cart.totalUniqueItems,\n    possibleOnepageCheckout: undefined,\n    giftMessageSelected: undefined,\n    giftWrappingSelected: undefined,\n    source: undefined,\n  };\n}\n\nexport function transformItems(\n  items: Item[],\n  locale: string\n): ShoppingCartItem[] {\n  return items.map((item: any) => ({\n    canApplyMsrp: false,\n    formattedPrice: formatCurrency(\n      locale,\n      item.price.currency,\n      item.price.value\n    ),\n    id: item.uid,\n    prices: {\n      price: item.price,\n      discount: item.discount && item.discount.value !== undefined ? {\n        value: item.discount.value,\n        currency: item.discount.currency\n      } : undefined\n    },\n    product: {\n      productId: item.uid,\n      name: item.name,\n      sku: item.sku,\n      topLevelSku: item.topLevelSku,\n      specialToDate: undefined,\n      specialFromDate: undefined,\n      newToDate: undefined,\n      newFromDate: undefined,\n      createdAt: undefined,\n      updatedAt: undefined,\n      manufacturer: undefined,\n      countryOfManufacture: undefined,\n      categories: item.categories,\n      productType: item.itemType,\n      pricing: {\n        regularPrice: item.regularPrice.value,\n        minimalPrice: undefined,\n        maximalPrice: undefined,\n        specialPrice: transformSpecialPrice(item),\n        tierPricing: undefined,\n        currencyCode: item.regularPrice.currency,\n      },\n      canonicalUrl: item.canonicalUrl,\n      mainImageUrl: item.image.src,\n      image: {\n        src: item.image.src,\n        alt: item.image.alt,\n      },\n    },\n    configurableOptions: item.selectedOptions ? \n      Object.entries(item.selectedOptions).map(([optionLabel, valueLabel], index) => ({\n        id: index + 1,\n        optionLabel,\n        valueId: index + 1,\n        valueLabel: valueLabel as string,\n      })) : [],\n    bundleOptions: item.bundleOptions ? \n      Object.entries(item.bundleOptions).map(([optionLabel, valueLabel], index) => ({\n        id: (index + 1).toString(),\n        optionLabel,\n        valueId: index + 1,\n        valueLabel: valueLabel as string,\n      })) : [],\n    customizableOptions: item.customizableOptions ? \n      Object.entries(item.customizableOptions).map(([optionLabel, valueLabel], index) => ({\n        id: (index + 1).toString(),\n        optionLabel,\n        valueId: index + 1,\n        valueLabel: valueLabel as string,\n      })) : [],\n    quantity: item.quantity,\n    selectedOptions: (() => {\n      const options = {\n        ...item.selectedOptions,\n        ...item.bundleOptions,\n        ...item.customizableOptions,\n      };\n      return Object.keys(options).length > 0 ? options : undefined;\n    })(),\n  }));\n}\n\nfunction formatCurrency(\n  locale: string,\n  currency: string,\n  value: number\n): string {\n  const formattedLocale = locale.replace('_', '-');\n\n  return new Intl.NumberFormat(formattedLocale, {\n    style: 'currency',\n    currency,\n  }).format(value);\n}\n\nfunction transformSpecialPrice(item: any) {\n  if (!item.discounted) {\n    return undefined;\n  }\n  return item.price?.value;\n}\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\n/* Publish functions for the Adobe Client Data Layer (ACDL) */\n\nimport { CartModel, Item } from '@/cart/data/models/cart-model';\nimport {\n  transformItems,\n  transformShoppingCart,\n} from '@/cart/data/transforms/acdl-context';\nimport {\n  ShoppingCartContext,\n  ShoppingCartItem,\n} from '../data/models/acdl-models';\n\n/**\n * See: https://github.com/adobe/commerce-events/blob/main/packages/storefront-events-sdk/src/contexts.ts\n */\nexport const contexts = {\n  SHOPPING_CART_CONTEXT: 'shoppingCartContext',\n  PRODUCT_CONTEXT: 'productContext',\n  CHANGED_PRODUCTS_CONTEXT: 'changedProductsContext',\n};\n\n/**\n * See: https://github.com/adobe/commerce-events/blob/main/packages/storefront-events-sdk/src/events.ts\n */\nexport const events = {\n  // See: https://github.com/adobe/commerce-events/blob/main/examples/events/open-cart.md\n  OPEN_CART: 'open-cart',\n  // See: ??? (not documented in the commerce-events repo)\n  //UPDATE_CART: 'update-cart',\n  // See: https://github.com/adobe/commerce-events/blob/main/examples/events/add-to-cart.md\n  ADD_TO_CART: 'add-to-cart',\n  // See: https://github.com/adobe/commerce-events/blob/main/examples/events/remove-from-cart.md\n  REMOVE_FROM_CART: 'remove-from-cart',\n  // See: https://github.com/adobe/commerce-events/blob/main/examples/events/shopping-cart-view.md\n  SHOPPING_CART_VIEW: 'shopping-cart-view',\n  // See: https://github.com/adobe/commerce-events/blob/main/examples/events/initiate-checkout.md\n  INITIATE_CHECKOUT: 'initiate-checkout',\n};\n\nexport function getAdobeDataLayer() {\n  // @ts-ignore\n  window.adobeDataLayer = window.adobeDataLayer || [];\n  // @ts-ignore\n  return window.adobeDataLayer;\n}\n\n/**\n * Sets a context in the Adobe Client Data Layer (ACDL)\n * Logic based on: https://github.com/adobe/commerce-events/blob/main/packages/storefront-events-sdk/src/Base.ts#L6\n */\nfunction setContext(name: string, data: any) {\n  const adobeDataLayer = getAdobeDataLayer();\n\n  // Clear existing context\n  adobeDataLayer.push({\n    [name]: null,\n  });\n\n  // Set new context\n  adobeDataLayer.push({\n    [name]: data,\n  });\n}\n\n/**\n * Pushes an event to the Adobe Client Data Layer (ACDL)\n * Logic based on: https://github.com/adobe/commerce-events/blob/1973d0ce28471ef190fa06dad6359ffa0ab51db6/packages/storefront-events-sdk/src/Base.ts#L34\n */\nfunction pushEvent(event: string, additionalContext?: any) {\n  const adobeDataLayer = getAdobeDataLayer();\n\n  adobeDataLayer.push((acdl: any) => {\n    const state = acdl.getState ? acdl.getState() : {};\n\n    acdl.push({\n      event,\n      eventInfo: {\n        ...state,\n        ...additionalContext,\n      },\n    });\n  });\n}\n\n// Triggered when a new cart is created, which is when a product is added to an empty cart.\nexport function publishOpenCartEvent(\n  cart: CartModel,\n  addedItems: Item[],\n  locale: string\n) {\n  const shoppingCartContext = transformShoppingCart({\n    cart,\n    locale,\n  });\n\n  // Set context and push open cart event\n  setContext(contexts.SHOPPING_CART_CONTEXT, {\n    ...shoppingCartContext,\n  });\n\n  // Transform items and set changed products context\n  const shoppingCartItems = transformItems(addedItems, locale);\n  \n  // Set changed products context to include the items that opened the cart\n  setContext(contexts.CHANGED_PRODUCTS_CONTEXT, {\n    items: shoppingCartItems,\n  });\n\n  // Push the open cart event with contexts set\n  pushEvent(events.OPEN_CART);\n\n  // Set context and push add to cart event for each updated item\n  shoppingCartItems.forEach((item) => {\n    setContext(contexts.PRODUCT_CONTEXT, item.product);\n    publishItemsUpdatedEvent(shoppingCartContext, [item], events.ADD_TO_CART);\n  });\n}\n\n// Triggered when any cart page loads.\nexport function publishShoppingCartViewEvent(cart: CartModel, locale: string) {\n  const shoppingCartContext = transformShoppingCart({\n    cart,\n    locale,\n  });\n\n  setContext(contexts.SHOPPING_CART_CONTEXT, {\n    ...shoppingCartContext,\n  });\n\n  pushEvent(events.SHOPPING_CART_VIEW);\n}\n\n// A re-usable function to publish events when items are added to, or removed from the cart.\nfunction publishItemsUpdatedEvent(\n  shoppingCartContext: ShoppingCartContext,\n  updatedItems: ShoppingCartItem[],\n  event: string\n) {\n  const changedProductsContext = {\n    items: updatedItems,\n  };\n\n  setContext(contexts.SHOPPING_CART_CONTEXT, {\n    ...shoppingCartContext,\n  });\n\n  setContext(contexts.CHANGED_PRODUCTS_CONTEXT, {\n    ...changedProductsContext,\n  });\n\n  pushEvent(event);\n}\n\nexport function publishCartUpdateEvents(\n  cart: CartModel,\n  updatedItems: {\n    uid: string;\n  }[],\n  locale: string\n) {\n  const newShoppingCartContext = transformShoppingCart({\n    cart,\n    locale,\n  });\n\n  const currentItems = newShoppingCartContext.items;\n\n  const adobeDataLayer = getAdobeDataLayer();\n\n  const currentState = adobeDataLayer.getState ? adobeDataLayer.getState() : {};\n\n  const { shoppingCartContext: { items: previousItems = [] } = {} } =\n    currentState;\n\n  updatedItems.forEach((updatedItem) => {\n    const previousItem = previousItems.find(\n      (item: ShoppingCartItem) => item.id === updatedItem.uid\n    );\n\n    const currentItem = currentItems!.find(\n      (item: ShoppingCartItem) => item.id === updatedItem.uid\n    );\n\n    if (!currentItem && !previousItem) {\n      // Not enough data available to publish an event\n      // Adobe Data Layer possibly not initialized yet\n      return;\n    }\n\n    if (!previousItem && currentItem) {\n      // Publish add to cart event for the item added\n      setContext(contexts.PRODUCT_CONTEXT, currentItem.product);\n      publishItemsUpdatedEvent(\n        newShoppingCartContext,\n        [currentItem],\n        events.ADD_TO_CART\n      );\n    } else if (previousItem && !currentItem) {\n      // Publish remove from cart event for the item removed\n      setContext(contexts.PRODUCT_CONTEXT, previousItem.product);\n      publishItemsUpdatedEvent(\n        newShoppingCartContext,\n        [previousItem],\n        events.REMOVE_FROM_CART\n      );\n    } else if (currentItem!.quantity > previousItem.quantity) {\n      // Publish add to cart event for the item increased\n      setContext(contexts.PRODUCT_CONTEXT, currentItem!.product);\n      publishItemsUpdatedEvent(\n        newShoppingCartContext,\n        [currentItem!],\n        events.ADD_TO_CART\n      );\n    } else {\n      // Publish remove from cart event for the item decreased\n      setContext(contexts.PRODUCT_CONTEXT, currentItem!.product);\n      publishItemsUpdatedEvent(\n        newShoppingCartContext,\n        [currentItem!],\n        events.REMOVE_FROM_CART\n      );\n    }\n  });\n}\n\nexport function publishInitiateCheckoutEvent(cart: CartModel, locale?: string) {\n  const shoppingCartContext = transformShoppingCart({\n    cart,\n    locale,\n  });\n\n  setContext(contexts.SHOPPING_CART_CONTEXT, {\n    ...shoppingCartContext,\n  });\n\n  pushEvent(events.INITIATE_CHECKOUT);\n}\n"],"names":["transformShoppingCart","params","cart","locale","transformItems","items","item","formatCurrency","transformSpecialPrice","optionLabel","valueLabel","index","options","currency","value","formattedLocale","_a","contexts","events","getAdobeDataLayer","setContext","name","data","adobeDataLayer","pushEvent","event","additionalContext","acdl","state","publishOpenCartEvent","addedItems","shoppingCartContext","shoppingCartItems","publishItemsUpdatedEvent","publishShoppingCartViewEvent","updatedItems","changedProductsContext","publishCartUpdateEvents","newShoppingCartContext","currentItems","currentState","previousItems","updatedItem","previousItem","currentItem","publishInitiateCheckoutEvent"],"mappings":"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"}