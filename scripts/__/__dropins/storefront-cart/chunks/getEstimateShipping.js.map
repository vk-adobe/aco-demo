{"version":3,"file":"getEstimateShipping.js","sources":["/@dropins/storefront-cart/src/data/transforms/transform-shipping.ts","/@dropins/storefront-cart/src/api/getEstimateShipping/graphql/countriesAndRegionsQueries.ts","/@dropins/storefront-cart/src/api/getEstimateShipping/graphql/estimateShippingMethodsMutation.ts","/@dropins/storefront-cart/src/api/getEstimateShipping/getEstimateShipping.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { PartialAddress, ShippingMethod } from '@/cart/data/models';\n\nexport const transformPartialAddress = (data: any): PartialAddress => {\n  return {\n    countryCode: data.country_code || 'US',\n    postCode: data.postcode || '',\n    region: data.region?.region || '',\n    regionId: data.region?.id,\n  };\n};\n\nexport const transformShippingMethod = (data: any): ShippingMethod | null => {\n  if (!data) return null;\n\n  return {\n    carrierCode: data.carrier_code || '',\n    methodCode: data.method_code || '',\n    amount: data.amount,\n    ...(data.price_excl_tax && {\n      amountExclTax: {\n        value: data.price_excl_tax.value,\n        currency: data.price_excl_tax.currency,\n      },\n    }),\n    ...(data.price_incl_tax && {\n      amountInclTax: {\n        value: data.price_incl_tax.value,\n        currency: data.price_incl_tax.currency,\n      },\n    }),\n  };\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const COUNTRIES_QUERY = `\nquery COUNTRIES_QUERY {\n  countries {\n    label: full_name_locale\n    id\n  }\n  storeConfig {\n    defaultCountry: default_country\n  }\n}\n`;\n\nexport const REGIONS_QUERY = `\nquery REGIONS_QUERY($id: String) {\n  country(id: $id) {\n    available_regions {\n      code\n\t\t\tname\n    }\n  }\n}\n`;\n\nexport type CountryData = {\n  label: string;\n  id: string;\n  available_regions?: Array<{\n    code: string;\n    name: string;\n  }>;\n  isDefaultCountry?: boolean;\n};\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const ESTIMATE_SHIPPING_METHODS_MUTATION = `\n  mutation ESTIMATE_SHIPPING_METHODS_MUTATION(\n    $cartId: String!\n    $address: EstimateAddressInput!\n  ) {\n    estimateShippingMethods(\n      input: {\n        cart_id: $cartId\n        address: $address\n      }\n    ) {\n      amount {\n        currency\n        value\n      }\n      carrier_code\n      method_code\n      error_message\n      price_excl_tax {\n        currency\n        value\n      }\n      price_incl_tax {\n        currency\n        value\n      }\n    }\n  }\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { fetchGraphQl } from '@/cart/api';\nimport { handleFetchError } from '@/cart/lib/fetch-error';\nimport { state } from '@/cart/lib/state';\n\nimport {\n  transformPartialAddress,\n  transformShippingMethod,\n} from '@/cart/data/transforms/transform-shipping';\nimport { events } from '@adobe-commerce/event-bus';\nimport {\n  COUNTRIES_QUERY,\n  CountryData,\n  REGIONS_QUERY,\n} from './graphql/countriesAndRegionsQueries';\nimport { ESTIMATE_SHIPPING_METHODS_MUTATION } from './graphql/estimateShippingMethodsMutation';\n\nexport interface EstimateAddressInput {\n  countryCode: string;\n  postcode?: string;\n  region?: {\n    region?: string;\n    code?: string;\n    id?: number;\n  };\n}\n\nexport const getEstimateShipping = async (\n  address: EstimateAddressInput\n): Promise<any | null> => {\n  const cartId = state.cartId;\n\n  if (!cartId) throw new Error('No cart ID found');\n  if (!address) throw new Error('No address parameter found');\n\n  const { countryCode, postcode, region } = address;\n\n  const addressInput = {\n    country_code: countryCode || 'US',\n    postcode: postcode || '',\n    region: {\n      region: region?.region || '',\n      region_id: region?.id,\n    },\n  };\n\n  return fetchGraphQl(ESTIMATE_SHIPPING_METHODS_MUTATION, {\n    variables: {\n      cartId,\n      address: addressInput,\n    },\n  }).then(({ errors, data }) => {\n    if (errors) return handleFetchError(errors);\n\n    const estimateShippingMethods: Array<any> = data.estimateShippingMethods;\n\n    const selectedMethod =\n      estimateShippingMethods.find((method) => !method.error_message) || null;\n\n    events.emit('shipping/estimate', {\n      address: transformPartialAddress(addressInput),\n      shippingMethod: transformShippingMethod(selectedMethod),\n    });\n\n    return selectedMethod;\n  });\n};\n\nexport const getCountries = async (): Promise<[CountryData]> => {\n  return fetchGraphQl(COUNTRIES_QUERY, { method: 'GET' }).then(\n    ({ errors, data }) => {\n      if (errors) return handleFetchError(errors);\n\n      const sortedCountries =\n        data?.countries?.sort((a: any, b: any) =>\n          a.label.localeCompare(b.label)\n        ) || [];\n\n      const defaultCountry = data?.storeConfig?.defaultCountry || 'US';\n\n      // Set the default country property\n      sortedCountries.forEach((country: any) => {\n        country.isDefaultCountry = country.id === defaultCountry;\n      });\n\n      return sortedCountries;\n    }\n  );\n};\n\nexport const getRegions = async (\n  countryId: string\n): Promise<Array<{ code: string; name: string }>> => {\n  return fetchGraphQl(REGIONS_QUERY, {\n    method: 'GET',\n    variables: {\n      id: countryId,\n    },\n  }).then(({ errors, data }) => {\n    if (errors) return handleFetchError(errors);\n\n    return data?.country?.available_regions || [];\n  });\n};\n"],"names":["transformPartialAddress","data","_a","_b","transformShippingMethod","COUNTRIES_QUERY","REGIONS_QUERY","ESTIMATE_SHIPPING_METHODS_MUTATION","getEstimateShipping","address","cartId","state","countryCode","postcode","region","addressInput","fetchGraphQl","errors","handleFetchError","selectedMethod","method","events","getCountries","sortedCountries","a","b","defaultCountry","country","getRegions","countryId"],"mappings":"sGAmBa,MAAAA,EAA2BC,GAA8B,SAC7D,MAAA,CACL,YAAaA,EAAK,cAAgB,KAClC,SAAUA,EAAK,UAAY,GAC3B,SAAQC,EAAAD,EAAK,SAAL,YAAAC,EAAa,SAAU,GAC/B,UAAUC,EAAAF,EAAK,SAAL,YAAAE,EAAa,EACzB,CACF,EAEaC,EAA2BH,GACjCA,EAEE,CACL,YAAaA,EAAK,cAAgB,GAClC,WAAYA,EAAK,aAAe,GAChC,OAAQA,EAAK,OACb,GAAIA,EAAK,gBAAkB,CACzB,cAAe,CACb,MAAOA,EAAK,eAAe,MAC3B,SAAUA,EAAK,eAAe,QAAA,CAElC,EACA,GAAIA,EAAK,gBAAkB,CACzB,cAAe,CACb,MAAOA,EAAK,eAAe,MAC3B,SAAUA,EAAK,eAAe,QAAA,CAChC,CAEJ,EAlBkB,KCZPI,EAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYlBC,EAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECZhBC,EAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EC0BrCC,EAAsB,MACjCC,GACwB,CACxB,MAAMC,EAASC,EAAM,OAErB,GAAI,CAACD,EAAc,MAAA,IAAI,MAAM,kBAAkB,EAC/C,GAAI,CAACD,EAAe,MAAA,IAAI,MAAM,4BAA4B,EAE1D,KAAM,CAAE,YAAAG,EAAa,SAAAC,EAAU,OAAAC,CAAW,EAAAL,EAEpCM,EAAe,CACnB,aAAcH,GAAe,KAC7B,SAAUC,GAAY,GACtB,OAAQ,CACN,QAAQC,GAAA,YAAAA,EAAQ,SAAU,GAC1B,UAAWA,GAAA,YAAAA,EAAQ,EAAA,CAEvB,EAEA,OAAOE,EAAaT,EAAoC,CACtD,UAAW,CACT,OAAAG,EACA,QAASK,CAAA,CAEZ,CAAA,EAAE,KAAK,CAAC,CAAE,OAAAE,EAAQ,KAAAhB,KAAW,CACxB,GAAAgB,EAAe,OAAAC,EAAiBD,CAAM,EAIpC,MAAAE,EAFsClB,EAAK,wBAGvB,KAAMmB,GAAW,CAACA,EAAO,aAAa,GAAK,KAErE,OAAAC,EAAO,KAAK,oBAAqB,CAC/B,QAASrB,EAAwBe,CAAY,EAC7C,eAAgBX,EAAwBe,CAAc,CAAA,CACvD,EAEMA,CAAA,CACR,CACH,EAEaG,EAAe,SACnBN,EAAaX,EAAiB,CAAE,OAAQ,KAAA,CAAO,EAAE,KACtD,CAAC,CAAE,OAAAY,EAAQ,KAAAhB,KAAW,SAChB,GAAAgB,EAAe,OAAAC,EAAiBD,CAAM,EAEpC,MAAAM,IACJrB,EAAAD,GAAA,YAAAA,EAAM,YAAN,YAAAC,EAAiB,KAAK,CAACsB,EAAQC,IAC7BD,EAAE,MAAM,cAAcC,EAAE,KAAK,KAC1B,CAAC,EAEFC,IAAiBvB,EAAAF,GAAA,YAAAA,EAAM,cAAN,YAAAE,EAAmB,iBAAkB,KAG5C,OAAAoB,EAAA,QAASI,GAAiB,CAChCA,EAAA,iBAAmBA,EAAQ,KAAOD,CAAA,CAC3C,EAEMH,CAAA,CAEX,EAGWK,EAAa,MACxBC,GAEOb,EAAaV,EAAe,CACjC,OAAQ,MACR,UAAW,CACT,GAAIuB,CAAA,CAEP,CAAA,EAAE,KAAK,CAAC,CAAE,OAAAZ,EAAQ,KAAAhB,KAAW,OACxB,OAAAgB,EAAeC,EAAiBD,CAAM,IAEnCf,EAAAD,GAAA,YAAAA,EAAM,UAAN,YAAAC,EAAe,oBAAqB,CAAC,CAAA,CAC7C"}