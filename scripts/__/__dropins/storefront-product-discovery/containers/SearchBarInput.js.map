{"version":3,"file":"SearchBarInput.js","sources":["../../node_modules/@adobe-commerce/elsie/src/icons/Search.svg","/@dropins/storefront-product-discovery/src/components/SearchBarInput/SearchBarInput.tsx","/@dropins/storefront-product-discovery/src/containers/SearchBarInput/utils/getSearchBarInputSearch.ts","/@dropins/storefront-product-discovery/src/containers/SearchBarInput/SearchBarInput.tsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgSearch = (props) => /* @__PURE__ */ React.createElement(\"svg\", { id: \"Icon_Search_Base\", \"data-name\": \"Icon \\\\u2013 Search \\\\u2013 Base\", xmlns: \"http://www.w3.org/2000/svg\", width: 24, height: 24, fill: \"none\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { id: \"Large\" }, /* @__PURE__ */ React.createElement(\"rect\", { id: \"Placement_area\", \"data-name\": \"Placement area\", width: 24, height: 24, fill: \"#fff\", opacity: 0 }), /* @__PURE__ */ React.createElement(\"g\", { id: \"Search_icon\", \"data-name\": \"Search icon\", transform: \"translate(3.75 3.75)\" }, /* @__PURE__ */ React.createElement(\"circle\", { vectorEffect: \"non-scaling-stroke\", id: \"Ellipse_186\", \"data-name\": \"Ellipse 186\", cx: 6, cy: 6, r: 6, fill: \"none\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"line\", { vectorEffect: \"non-scaling-stroke\", id: \"Line_556\", \"data-name\": \"Line 556\", x2: 6, y2: 6, transform: \"translate(10.5 10.5)\", fill: \"none\", stroke: \"currentColor\" }))));\nexport default SvgSearch;\n","/********************************************************************\n *  Copyright 2025 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  Adobe permits you to use, modify, and distribute this\n * file in accordance with the terms of the Adobe license agreement\n * accompanying it.\n *******************************************************************/\n\nimport { FunctionComponent, VNode } from 'preact';\nimport { HTMLAttributes, TargetedEvent } from 'preact/compat';\nimport { Input } from '@adobe-commerce/elsie/components';\nimport { useText } from '@adobe-commerce/elsie/i18n';\nimport { classes, VComponent } from '@adobe-commerce/elsie/lib';\n\nimport '@/plp/components/SearchBarInput/SearchBarInput.css';\n\nconst KEY_PRESS_EVENTS = {\n  ENTER: 'Enter',\n  ESCAPE: 'Escape',\n} as const;\n\nexport interface SearchBarInputProps extends HTMLAttributes<HTMLDivElement> {\n  searchIcon?: VNode;\n  searchQuery?: string;\n  defaultQueryPlaceholder?: string;\n  isLoading?: boolean;\n  error?: string | null;\n  onQueryInput?: (query: string) => void;\n  onExecuteSearch?: (query: string) => void;\n  onClose?: () => void;\n}\n\nexport const SearchBarInput: FunctionComponent<SearchBarInputProps> = ({\n  searchQuery = '',\n  defaultQueryPlaceholder,\n  searchIcon,\n  onQueryInput,\n  onExecuteSearch,\n  onClose,\n}) => {\n  const translations = useText({ placeholder: 'Search.SearchInput.placeholder' });\n\n  const handleKeyPress = (event: TargetedEvent<HTMLInputElement, KeyboardEvent>) => {\n    const { key } = event;\n    const inputValue = event.currentTarget?.value?.trim() || '';\n\n    if (key === KEY_PRESS_EVENTS.ENTER && inputValue) {\n      onExecuteSearch?.(inputValue);\n    } else if (key === KEY_PRESS_EVENTS.ESCAPE) {\n      onClose?.();\n    }\n  };\n\n  const handleQueryInput = (event: TargetedEvent<HTMLInputElement, Event>) => {\n    onQueryInput?.(event.currentTarget?.value || '');\n  };\n\n  return (\n    <div className={classes(['product-discovery--search-bar-input__container'])}>\n      <Input\n        id=\"search-bar-input-form\"\n        role=\"searchbox\"\n        aria-label=\"Search Input\"\n        value={searchQuery}\n        placeholder={defaultQueryPlaceholder || translations.placeholder}\n        icon={\n          searchIcon ? (\n            <VComponent className=\"product-discovery--search-bar-input__form\" node={searchIcon} />\n          ) : undefined\n        }\n        onKeyDown={handleKeyPress}\n        onChange={handleQueryInput}\n      />\n    </div>\n  );\n};\n","/********************************************************************\n *  Copyright 2025 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  Adobe permits you to use, modify, and distribute this\n * file in accordance with the terms of the Adobe license agreement\n * accompanying it.\n *******************************************************************/\n\nimport { productSearch as productSearchQuery } from '@/plp/api';\nimport { SearchVariables } from '@/plp/data/models';\nimport { Product } from '@/plp/data/models/product';\nimport { transformSearchResultProducts } from '@/plp/data/transforms';\nimport {\n  SEARCH_UNIT_ID,\n  searchRequestSent,\n  searchResponseReceived,\n  searchResultsView,\n  updateSearchInputCtx,\n  updateSearchResultsCtx,\n} from '@/plp/utils/acdlEvents';\n\n// Constants\nconst DEFAULT_VISIBILITY_FILTER = {\n  attribute: 'visibility',\n  in: ['Search', 'Catalog, Search'],\n};\n\ninterface PageInfo {\n  currentPage: number;\n  pageSize: number;\n  totalPages: number;\n  totalItems: number;\n}\n\nconst handleDataCollectionError = (error: any, context: string): void => {\n  console.error(`Error collecting ${context}:`, error);\n};\n\nconst createPageInfo = (itemsLength: number): PageInfo => ({\n  currentPage: 1,\n  pageSize: itemsLength,\n  totalPages: 1,\n  totalItems: itemsLength,\n});\n\nconst trackSearchRequest = (searchRequestVariable: SearchVariables): string => {\n  let searchRequestId = '';\n\n  try {\n    searchRequestId = self.crypto.randomUUID();\n    updateSearchInputCtx(\n      SEARCH_UNIT_ID,\n      searchRequestId,\n      searchRequestVariable.phrase || '',\n      searchRequestVariable.filter || [],\n      searchRequestVariable.pageSize || 0,\n      searchRequestVariable.currentPage || 0,\n      searchRequestVariable.sort || [],\n    );\n    searchRequestSent(SEARCH_UNIT_ID);\n  } catch (e) {\n    handleDataCollectionError(e, 'search input context');\n  }\n\n  return searchRequestId;\n};\n\nconst updateSearchResults = (searchRequestId: string, items: Product[], hasPhrase: boolean): void => {\n  try {\n    updateSearchResultsCtx(SEARCH_UNIT_ID, searchRequestId, {\n      items: Array.isArray(items) ? items : [],\n      facets: [],\n      pageInfo: createPageInfo(items?.length || 0),\n      totalCount: items?.length || 0,\n    });\n    searchResponseReceived(SEARCH_UNIT_ID);\n\n    if (hasPhrase) {\n      searchResultsView(SEARCH_UNIT_ID);\n    }\n  } catch (e) {\n    handleDataCollectionError(e, 'search input data');\n  }\n};\n\nconst prepareSearchRequest = (searchRequestVariable: SearchVariables): SearchVariables => {\n  const searchRequestObject = structuredClone(searchRequestVariable);\n\n  if (!searchRequestObject.filter) {\n    searchRequestObject.filter = [];\n  }\n  searchRequestObject.filter.push(DEFAULT_VISIBILITY_FILTER);\n\n  return searchRequestObject;\n};\n\nexport const getSearchBarInputSearch = (query: string): Promise<Product[]> => {\n  if (!query?.trim()) {\n    return Promise.resolve([]);\n  }\n\n  const searchRequestVariable: SearchVariables = { phrase: query.trim() };\n  const searchRequestId = trackSearchRequest(searchRequestVariable);\n  const searchRequestObject = prepareSearchRequest(searchRequestVariable);\n\n  return productSearchQuery(searchRequestObject)\n    .then((response: any | null) => {\n      const transformedItems = (transformSearchResultProducts(response) || []).slice(0, 8);\n\n      updateSearchResults(searchRequestId, transformedItems, !!searchRequestVariable.phrase);\n\n      return transformedItems;\n    })\n    .catch((error: any) => {\n      console.error('SearchInput query failed:', error);\n      throw new Error('Error fetching search input data.');\n    });\n};\n","/********************************************************************\n *  Copyright 2025 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  Adobe permits you to use, modify, and distribute this\n * file in accordance with the terms of the Adobe license agreement\n * accompanying it.\n *******************************************************************/\n\nimport { HTMLAttributes } from 'preact/compat';\nimport { useCallback, useEffect, useMemo, useState } from 'preact/hooks';\nimport { Icon } from '@adobe-commerce/elsie/components';\nimport { Search } from '@adobe-commerce/elsie/icons';\nimport { Container, Slot, SlotProps, debounce } from '@adobe-commerce/elsie/lib';\nimport { events } from '@adobe-commerce/event-bus';\n\nimport { SearchBarInput as SearchBarInputComponent } from '@/plp/components/SearchBarInput';\nimport { Product, SearchInputRequest, SearchInputResult } from '@/plp/data/models/product';\n\nimport { getSearchBarInputSearch } from './utils/getSearchBarInputSearch';\n\nexport interface SearchBarInputProps extends HTMLAttributes<HTMLDivElement> {\n  searchQuery?: string;\n  minimumQueryLength?: number;\n  debounceDelay?: number;\n  defaultQueryPlaceholder?: string;\n  routeSearch?: (searchQuery: string) => void;\n  slots?: {\n    InputForm?: SlotProps;\n    SearchIcon?: SlotProps;\n  };\n}\n\n// debounced function type helper method\ntype DebouncedFunction<T extends (...args: any[]) => any> = T & {\n  cancel?: () => void;\n};\n\nconst useSearchBarInput = (\n  minimumQueryLength: number,\n  debounceDelay: number,\n  routeSearch: (searchQuery: string) => void,\n) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSearch = useCallback(async (query: string) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      events.emit('search-input/request', { phrase: query });\n      const searchInputResults = await getSearchBarInputSearch(query);\n      events.emit('search-input/result', {\n        result: searchInputResults as Product[],\n        request: { phrase: query },\n      } as SearchInputResult);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Search Input failed';\n      setError(errorMessage);\n      // may need to emit an error event here?\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // the adobe elsie debounce function *should* have a cancel, but it doesnt seem to be typed correctly\n  const debouncedSearch = useMemo(\n    () => debounce(handleSearch, debounceDelay) as DebouncedFunction<typeof handleSearch>,\n    [handleSearch, debounceDelay],\n  );\n\n  // need to cancel any pending debounced calls when component unmounts or debouncedSearch changes\n  useEffect(() => {\n    return () => {\n      if (debouncedSearch.cancel) {\n        debouncedSearch.cancel();\n      }\n    };\n  }, [debouncedSearch]);\n\n  const clearSearchResults = useCallback(() => {\n    events.emit('search-input/result', {\n      result: [],\n      request: { phrase: '' },\n    } as SearchInputResult);\n  }, []);\n\n  const handleQueryInput = useCallback(\n    (query: string) => {\n      if (error) {\n        setError(null);\n      }\n\n      if (query.length < 1) {\n        clearSearchResults();\n        return;\n      }\n\n      if (query.length >= minimumQueryLength) {\n        debouncedSearch(query);\n      }\n    },\n    [minimumQueryLength, debouncedSearch, error, clearSearchResults],\n  );\n\n  const handleExecuteSearch = useCallback(\n    (query: string) => {\n      // if a `routeSearch` cb function is provided, use it to handle any navigation\n      routeSearch && routeSearch(query);\n      events.emit('search/request', { phrase: query } as SearchInputRequest);\n    },\n    [routeSearch],\n  );\n\n  const handleClose = useCallback(() => {\n    setError(null);\n    setIsLoading(false);\n    clearSearchResults();\n  }, [clearSearchResults]);\n\n  return {\n    isLoading,\n    error,\n    handleQueryInput,\n    handleExecuteSearch,\n    handleClose,\n  };\n};\n\nexport const SearchBarInput: Container<SearchBarInputProps> = ({\n  searchQuery,\n  minimumQueryLength = 3,\n  debounceDelay = 300,\n  defaultQueryPlaceholder,\n  routeSearch = () => {},\n  slots,\n}) => {\n  const { isLoading, error, handleQueryInput, handleExecuteSearch, handleClose } = useSearchBarInput(\n    minimumQueryLength,\n    debounceDelay,\n    routeSearch,\n  );\n\n  const searchIcon = useMemo(\n    () => (\n      <Slot name=\"InputFormSearchIcon\" slot={slots?.SearchIcon}>\n        <Icon source={Search} size=\"24\" />\n      </Slot>\n    ),\n    [slots?.SearchIcon],\n  );\n\n  const inputForm = useMemo(\n    () => (\n      <Slot name=\"InputForm\" slot={slots?.InputForm}>\n        <SearchBarInputComponent\n          searchQuery={searchQuery}\n          defaultQueryPlaceholder={defaultQueryPlaceholder}\n          searchIcon={searchIcon}\n          onQueryInput={handleQueryInput}\n          onExecuteSearch={handleExecuteSearch}\n          onClose={handleClose}\n          isLoading={isLoading}\n          error={error}\n        />\n      </Slot>\n    ),\n    [\n      searchQuery,\n      defaultQueryPlaceholder,\n      searchIcon,\n      handleQueryInput,\n      handleExecuteSearch,\n      handleClose,\n      isLoading,\n      error,\n      slots?.InputForm,\n    ],\n  );\n\n  return <>{inputForm}</>;\n};\n"],"names":["SvgSearch","props","React","KEY_PRESS_EVENTS","SearchBarInput","searchQuery","defaultQueryPlaceholder","searchIcon","onQueryInput","onExecuteSearch","onClose","translations","useText","handleKeyPress","event","key","inputValue","_b","_a","handleQueryInput","classes","jsx","Input","VComponent","DEFAULT_VISIBILITY_FILTER","handleDataCollectionError","error","context","createPageInfo","itemsLength","trackSearchRequest","searchRequestVariable","searchRequestId","updateSearchInputCtx","SEARCH_UNIT_ID","searchRequestSent","e","updateSearchResults","items","hasPhrase","updateSearchResultsCtx","searchResponseReceived","searchResultsView","prepareSearchRequest","searchRequestObject","getSearchBarInputSearch","query","productSearchQuery","response","transformedItems","transformSearchResultProducts","useSearchBarInput","minimumQueryLength","debounceDelay","routeSearch","isLoading","setIsLoading","useState","setError","handleSearch","useCallback","events","searchInputResults","err","errorMessage","debouncedSearch","useMemo","debounce","useEffect","clearSearchResults","handleExecuteSearch","handleClose","slots","Slot","Icon","Search","inputForm","SearchBarInputComponent"],"mappings":"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","x_google_ignoreList":[0]}