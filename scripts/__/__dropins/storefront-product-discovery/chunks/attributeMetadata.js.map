{"version":3,"file":"attributeMetadata.js","sources":["/@dropins/storefront-product-discovery/src/api/attributeMetadata/graphql/attributeMetadata.graphql.ts","/@dropins/storefront-product-discovery/src/api/attributeMetadata/attributeMetadata.ts"],"sourcesContent":["/********************************************************************\n * ADOBE CONFIDENTIAL\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nexport const ATTRIBUTE_METADATA_QUERY = /* GraphQL */ `\n  query attributeMetadata {\n    attributeMetadata {\n      sortable {\n        label\n        attribute\n        numeric\n      }\n      filterableInSearch {\n        label\n        attribute\n        numeric\n      }\n    }\n  }\n`;\n","/********************************************************************\n * ADOBE CONFIDENTIAL\n * __________________\n *\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n *******************************************************************/\n\nimport { fetchGraphQl } from '@/plp/api';\n\nimport { ATTRIBUTE_METADATA_QUERY } from './graphql/attributeMetadata.graphql';\nimport { AttributeMetadataResponse } from '@/plp/types/api/attributeMetadata';\n\nexport const attributeMetadata = async (): Promise<AttributeMetadataResponse | null> => {\n  return fetchGraphQl(ATTRIBUTE_METADATA_QUERY, { method: 'GET' }).then(({ errors, data }) => {\n    if (errors) {\n      console.log('error', errors);\n      return null;\n    }\n    return data;\n  });\n};\n"],"names":["ATTRIBUTE_METADATA_QUERY","attributeMetadata","fetchGraphQl","errors","data"],"mappings":"uCAgBa,MAAAA,EAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECMzCC,EAAoB,SACxBC,EAAaF,EAA0B,CAAE,OAAQ,KAAM,CAAC,EAAE,KAAK,CAAC,CAAE,OAAAG,EAAQ,KAAAC,KAC3ED,GACM,QAAA,IAAI,QAASA,CAAM,EACpB,MAEFC,CACR"}