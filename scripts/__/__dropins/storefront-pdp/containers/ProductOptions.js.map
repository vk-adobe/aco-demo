{"version":3,"file":"ProductOptions.js","sources":["/@dropins/storefront-pdp/src/containers/ProductOptions/ProductOptions.tsx"],"sourcesContent":["/**\n * ADOBE CONFIDENTIAL\n * __________________\n * Copyright 2024 Adobe\n * All Rights Reserved.\n * __________________\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n */\n\nimport {\n  HTMLAttributes,\n  useCallback,\n  useEffect,\n  useState,\n} from 'preact/compat';\nimport { Container, Slot, SlotProps } from '@adobe-commerce/elsie/lib';\nimport { ProductModel } from '@/pdp/data/models';\nimport { events } from '@adobe-commerce/event-bus';\nimport { Swatches } from '@/pdp/components';\nimport {\n  setProductConfigurationValues,\n  getProductConfigurationValues,\n  setProductConfigurationValid,\n  fetchProductData,\n  getFetchedProductData,\n  config,\n} from '@/pdp/api';\nimport { setUrlParams } from '@/pdp/lib/url-params';\nimport { publishProductPageViewEvent } from '@/pdp/lib/acdl';\nimport {\n  ImageNodeRenderProps,\n  ImageProps,\n} from '@adobe-commerce/elsie/components';\n\nexport interface ProductOptionsProps extends HTMLAttributes<HTMLDivElement> {\n  hideSelectedValue?: boolean;\n  onValues?: (optionsUIDs: string[]) => void;\n  onErrors?: (errors: { [id: string]: string }) => void;\n  slots?: {\n    Swatches?: SlotProps<{ data: ProductModel | null; optionsUIDs: string[] }>;\n    SwatchImage?: SlotProps<{\n      data: ProductModel | null;\n      optionsUIDs: string[];\n      imageSwatchContext: ImageNodeRenderProps['imageSwatchContext'];\n      defaultImageProps: ImageProps;\n    }>;\n  };\n}\n\nexport const ProductOptions: Container<\n  ProductOptionsProps,\n  { data: ProductModel | null; optionsUIDs: string[] }\n> = ({\n  initialData = { data: null, optionsUIDs: [] },\n  hideSelectedValue = false,\n  slots,\n  onValues,\n  onErrors,\n  children,\n  ...props\n}) => {\n  const [data, setData] = useState<ProductModel | null>(initialData.data);\n\n  const [current, setCurrent] = useState<string[]>(initialData.optionsUIDs);\n\n  const [selectionsToUpdate, setSelectionsToUpdate] =\n    useState<ProductModel['options']>();\n\n  useEffect(() => {\n    const dataEvent = events.on('pdp/data', setData);\n\n    const valuesEvent = events.on('pdp/values', ({ optionsUIDs }) => {\n      if (optionsUIDs) {\n        setCurrent(optionsUIDs);\n      }\n    });\n\n    return () => {\n      dataEvent?.off();\n      valuesEvent?.off();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleOptionSelected = useCallback(\n    async (selections: { [id: string]: { label: string; value: string } }) => {\n      if (!data?.sku) return;\n\n      const { persistURLParams, anchors, acdl } = config.getConfig() ?? {};\n\n      // options selected\n      let optionsUIDs = Object.keys(selections)\n        .map((id) => selections[id].value)\n        .filter((element) => element !== undefined);\n\n      // set optionUIDs to URL params\n      // ?optionsUIDs=1,2,3\n      // only set the URL params if the \"persistURLParams\" is set to true and the product is not a bundle type\n      if (persistURLParams && !data?.isBundle) {\n        setUrlParams({ optionsUIDs: optionsUIDs.join(',') });\n      }\n\n      // check if the options have changed\n      if (\n        getProductConfigurationValues()?.optionsUIDs?.join('|') !==\n        optionsUIDs?.join('|')\n      ) {\n        // update values\n        setProductConfigurationValues((prev) => ({ ...prev, optionsUIDs }));\n\n        // pass the selected options to callback\n        onValues?.(optionsUIDs);\n\n        // refetch data\n        const next = await fetchProductData(data.sku, {\n          optionsUIDs: optionsUIDs ?? [],\n          isBundle: data?.isBundle,\n          anchors,\n        });\n\n        // emit the new data\n        events.emit('pdp/data', next);\n\n        let valid = optionsUIDs?.length === next?.options?.length;\n\n        // special processing for anchor options (options that should not be refined when other options are selected)\n        if (anchors?.length) {\n          const updatedOptionsUIDs = next?.optionUIDs ?? [];\n\n          const isMatching = optionsUIDs.every((item) =>\n            updatedOptionsUIDs.includes(item)\n          );\n\n          if (!isMatching) {\n            setSelectionsToUpdate(next?.options);\n            setProductConfigurationValues((prev) => ({\n              ...prev,\n              optionsUIDs: updatedOptionsUIDs,\n            }));\n\n            valid = updatedOptionsUIDs?.length === next?.options?.length;\n          }\n        }\n\n        // is the product valid\n        setProductConfigurationValid(() => valid);\n\n        // ACDL\n        if (acdl && next && next?.variantSku !== data.sku) {\n          publishProductPageViewEvent(next);\n        }\n      }\n    },\n    [data?.isBundle, data?.sku, onValues]\n  );\n\n  const handleErrors = useCallback(\n    (errors: { [id: string]: string }) => {\n      const hasErrors = Object.keys(errors).length !== 0;\n\n      if (hasErrors) {\n        setProductConfigurationValid(() => false);\n        onErrors?.(errors);\n      }\n    },\n    [onErrors]\n  );\n\n  if (!data) return null;\n\n  // Only show if there are options in the data\n  if (!data.options) return null;\n\n  return (\n    <Slot\n      name=\"Swatches\"\n      slot={slots?.Swatches}\n      context={{ data, optionsUIDs: current }}\n    >\n      <Swatches\n        {...props}\n        options={data.options}\n        selectedUIDs={current}\n        defaultOptions={current}\n        selectionsToUpdate={selectionsToUpdate}\n        hideSelectedValue={hideSelectedValue}\n        disablePreselections={!config.getConfig()?.preselectFirstOption}\n        onValues={handleOptionSelected}\n        onErrors={handleErrors}\n        imageSwatchNode={\n          slots?.SwatchImage\n            ? ({ imageSwatchContext, ...imageProps }) => (\n                <Slot\n                  name=\"SwatchImage\"\n                  slot={slots?.SwatchImage}\n                  slotTag=\"span\"\n                  contentTag=\"span\"\n                  context={{\n                    data,\n                    optionsUIDs: current,\n                    defaultImageProps: imageProps,\n                    imageSwatchContext,\n                  }}\n                />\n              )\n            : undefined\n        }\n      />\n    </Slot>\n  );\n};\n\nProductOptions.getInitialData = async function () {\n  const data = await getFetchedProductData();\n  const optionsUIDs = getProductConfigurationValues()?.optionsUIDs ?? [];\n  return { data, optionsUIDs };\n};\n"],"names":["ProductOptions","initialData","hideSelectedValue","slots","onValues","onErrors","children","props","data","setData","useState","current","setCurrent","selectionsToUpdate","setSelectionsToUpdate","useEffect","dataEvent","events","valuesEvent","optionsUIDs","handleOptionSelected","useCallback","selections","persistURLParams","anchors","acdl","config","id","element","setUrlParams","_b","_a","getProductConfigurationValues","setProductConfigurationValues","prev","next","fetchProductData","valid","_c","updatedOptionsUIDs","item","_d","setProductConfigurationValid","publishProductPageViewEvent","handleErrors","errors","jsx","Slot","Swatches","imageSwatchContext","imageProps","getFetchedProductData"],"mappings":"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"}